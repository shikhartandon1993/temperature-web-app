/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/shikhar/customer-workspace/temperature-web-app/app/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/shikhar/customer-workspace/customer-app/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/pinctrl@41008000
 *   5   /soc/pinctrl@41008000/gpio@41008080
 *   6   /buttons
 *   7   /buttons/button_0
 *   8   /cpus
 *   9   /cpus/cpu@0
 *   10  /cpus/cpu@0/mpu@e000ed90
 *   11  /soc/pinctrl@41008000/gpio@41008100
 *   12  /leds
 *   13  /leds/io1_led
 *   14  /leds/led_0
 *   15  /soc/gclk@40001c00
 *   16  /soc/interrupt-controller@e000e100
 *   17  /soc/mclk@40000800
 *   18  /soc/pinctrl@41008000/pwm_default
 *   19  /soc/tcc@41016000
 *   20  /pwmleds
 *   21  /pwmleds/pwm_led_0
 *   22  /soc/adc@43001c00
 *   23  /soc/adc@43002000
 *   24  /soc/can@42000000
 *   25  /soc/can@42000400
 *   26  /soc/device_id@8061fc
 *   27  /soc/dmac@4100a000
 *   28  /soc/eic@40002800
 *   29  /soc/pinctrl@41008000/mdio_default
 *   30  /soc/mdio@42000800
 *   31  /soc/mdio@42000800/ethernet-phy@0
 *   32  /soc/pinctrl@41008000/gmac_rmii
 *   33  /soc/pinctrl@41008000/sercom3_i2c_default
 *   34  /soc/sercom@41014000
 *   35  /soc/sercom@41014000/eeprom@5e
 *   36  /soc/ethernet@42000800
 *   37  /soc/memory@20000000
 *   38  /soc/memory@47000000
 *   39  /soc/pinmux@41008000
 *   40  /soc/pinmux@41008080
 *   41  /soc/pinmux@41008100
 *   42  /soc/pinmux@41008180
 *   43  /soc/random@42002800
 *   44  /soc/osc32kctrl@40001400
 *   45  /soc/rtc@40002400
 *   46  /soc/sercom@40003000
 *   47  /soc/sercom@40003400
 *   48  /soc/pinctrl@41008000/sercom2_uart_default
 *   49  /soc/sercom@41012000
 *   50  /soc/pinctrl@41008000/sercom4_spi_default
 *   51  /soc/sercom@43000000
 *   52  /soc/sercom@43000400
 *   53  /soc/sercom@43000800
 *   54  /soc/pinctrl@41008000/sercom7_i2c_default
 *   55  /soc/sercom@43000c00
 *   56  /soc/tc@40003800
 *   57  /soc/tc@4101a000
 *   58  /soc/tc@42001400
 *   59  /soc/tc@43001400
 *   60  /soc/tcc@41018000
 *   61  /soc/tcc@42000c00
 *   62  /soc/tcc@42001000
 *   63  /soc/tcc@43001000
 *   64  /soc/timer@e000e010
 *   65  /soc/pinctrl@41008000/usb_dc_default
 *   66  /soc/usb@41000000
 *   67  /soc/watchdog@40002000
 *   68  /soc/nvmctrl@41004000
 *   69  /soc/nvmctrl@41004000/flash@0
 *   70  /soc/nvmctrl@41004000/flash@0/partitions
 *   71  /soc/nvmctrl@41004000/flash@0/partitions/partition@fc000
 *   72  /soc/pinctrl@41008000/gpio@41008000
 *   73  /soc/pinctrl@41008000/gpio@41008180
 *   74  /soc/pinctrl@41008000/gmac_rmii/group1
 *   75  /soc/pinctrl@41008000/mdio_default/group1
 *   76  /soc/pinctrl@41008000/pwm_default/group1
 *   77  /soc/pinctrl@41008000/sercom2_uart_default/group1
 *   78  /soc/pinctrl@41008000/sercom3_i2c_default/group1
 *   79  /soc/pinctrl@41008000/sercom4_spi_default/group1
 *   80  /soc/pinctrl@41008000/sercom7_i2c_default/group1
 *   81  /soc/pinctrl@41008000/usb_dc_default/group1
 *   82  /soc/sercom@41014000/at30tse75x@4F
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 7
#define DT_N_CHILD_NUM_STATUS_OKAY 7
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	6, /* /buttons */ \
	8, /* /cpus */ \
	12, /* /leds */ \
	20, /* /pwmleds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_same54_xpro      DT_N
#define DT_N_INST_0_atmel_same54p20a DT_N
#define DT_N_INST_0_atmel_same54     DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_same54_xpro 1
#define DT_N_COMPAT_MATCHES_atmel_same54p20a 1
#define DT_N_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_1 "Atmel Corporation"
#define DT_N_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_1 "same54p20a"
#define DT_N_COMPAT_MATCHES_atmel_same54 1
#define DT_N_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_2 "Atmel Corporation"
#define DT_N_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_2 "same54"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"same54,xpro", "atmel,same54p20a", "atmel,same54"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "same54,xpro"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED same54,xpro
#define DT_N_P_compatible_IDX_0_STRING_TOKEN same54_xpro
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN SAME54_XPRO
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_IDX_1 "atmel,same54p20a"
#define DT_N_P_compatible_IDX_1_STRING_UNQUOTED atmel,same54p20a
#define DT_N_P_compatible_IDX_1_STRING_TOKEN atmel_same54p20a
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN ATMEL_SAME54P20A
#define DT_N_P_compatible_IDX_2_EXISTS 1
#define DT_N_P_compatible_IDX_2 "atmel,same54"
#define DT_N_P_compatible_IDX_2_STRING_UNQUOTED atmel,same54
#define DT_N_P_compatible_IDX_2_STRING_TOKEN atmel_same54
#define DT_N_P_compatible_IDX_2_STRING_UPPER_TOKEN ATMEL_SAME54
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1) \
	fn(DT_N, compatible, 2)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 2)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__) \
	fn(DT_N, compatible, 2, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 2, __VA_ARGS__)
#define DT_N_P_compatible_LEN 3
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 43
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 26
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_47000000) fn(DT_N_S_soc_S_device_id_8061fc) fn(DT_N_S_soc_S_mclk_40000800) fn(DT_N_S_soc_S_osc32kctrl_40001400) fn(DT_N_S_soc_S_gclk_40001c00) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_dmac_4100a000) fn(DT_N_S_soc_S_eic_40002800) fn(DT_N_S_soc_S_pinmux_41008000) fn(DT_N_S_soc_S_pinmux_41008080) fn(DT_N_S_soc_S_pinmux_41008100) fn(DT_N_S_soc_S_pinmux_41008180) fn(DT_N_S_soc_S_watchdog_40002000) fn(DT_N_S_soc_S_sercom_40003000) fn(DT_N_S_soc_S_sercom_40003400) fn(DT_N_S_soc_S_sercom_41012000) fn(DT_N_S_soc_S_sercom_41014000) fn(DT_N_S_soc_S_sercom_43000000) fn(DT_N_S_soc_S_sercom_43000400) fn(DT_N_S_soc_S_sercom_43000800) fn(DT_N_S_soc_S_sercom_43000c00) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc_S_usb_41000000) fn(DT_N_S_soc_S_random_42002800) fn(DT_N_S_soc_S_rtc_40002400) fn(DT_N_S_soc_S_adc_43001c00) fn(DT_N_S_soc_S_adc_43002000) fn(DT_N_S_soc_S_tc_40003800) fn(DT_N_S_soc_S_tc_4101a000) fn(DT_N_S_soc_S_tc_42001400) fn(DT_N_S_soc_S_tc_43001400) fn(DT_N_S_soc_S_tcc_41016000) fn(DT_N_S_soc_S_tcc_41018000) fn(DT_N_S_soc_S_tcc_42000c00) fn(DT_N_S_soc_S_tcc_42001000) fn(DT_N_S_soc_S_tcc_43001000) fn(DT_N_S_soc_S_ethernet_42000800) fn(DT_N_S_soc_S_mdio_42000800) fn(DT_N_S_soc_S_can_42000000) fn(DT_N_S_soc_S_can_42000400)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_47000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_device_id_8061fc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mclk_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_osc32kctrl_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmac_4100a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_40003400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_42002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_43001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_43002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_4101a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_43001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_41016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_41018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_43001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_42000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mdio_42000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_42000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_42000400)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__) fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__) fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) fn(DT_N_S_soc_S_dmac_4100a000, __VA_ARGS__) fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000400, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000800, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__) fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__) fn(DT_N_S_soc_S_adc_43002000, __VA_ARGS__) fn(DT_N_S_soc_S_tc_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_tc_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42001400, __VA_ARGS__) fn(DT_N_S_soc_S_tc_43001400, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_41018000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42000c00, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42001000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_43001000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_can_42000000, __VA_ARGS__) fn(DT_N_S_soc_S_can_42000400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dmac_4100a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_40003400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_43002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_4101a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_42001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tc_43001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_41018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_42001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_43001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_42000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_42000400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_47000000) fn(DT_N_S_soc_S_device_id_8061fc) fn(DT_N_S_soc_S_mclk_40000800) fn(DT_N_S_soc_S_osc32kctrl_40001400) fn(DT_N_S_soc_S_gclk_40001c00) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_eic_40002800) fn(DT_N_S_soc_S_pinmux_41008000) fn(DT_N_S_soc_S_pinmux_41008080) fn(DT_N_S_soc_S_pinmux_41008100) fn(DT_N_S_soc_S_pinmux_41008180) fn(DT_N_S_soc_S_watchdog_40002000) fn(DT_N_S_soc_S_sercom_41012000) fn(DT_N_S_soc_S_sercom_41014000) fn(DT_N_S_soc_S_sercom_43000000) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc_S_usb_41000000) fn(DT_N_S_soc_S_random_42002800) fn(DT_N_S_soc_S_rtc_40002400) fn(DT_N_S_soc_S_adc_43001c00) fn(DT_N_S_soc_S_tcc_41016000) fn(DT_N_S_soc_S_ethernet_42000800) fn(DT_N_S_soc_S_mdio_42000800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_47000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_device_id_8061fc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mclk_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_osc32kctrl_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_42002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_43001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_41016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_42000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mdio_42000800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__) fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__) fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__) fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3
#define DT_N_S_soc_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/pinctrl@41008000 */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	19, /* /soc/tcc@41016000 */ \
	22, /* /soc/adc@43001c00 */ \
	23, /* /soc/adc@43002000 */ \
	24, /* /soc/can@42000000 */ \
	25, /* /soc/can@42000400 */ \
	26, /* /soc/device_id@8061fc */ \
	27, /* /soc/dmac@4100a000 */ \
	28, /* /soc/eic@40002800 */ \
	30, /* /soc/mdio@42000800 */ \
	34, /* /soc/sercom@41014000 */ \
	36, /* /soc/ethernet@42000800 */ \
	37, /* /soc/memory@20000000 */ \
	38, /* /soc/memory@47000000 */ \
	39, /* /soc/pinmux@41008000 */ \
	40, /* /soc/pinmux@41008080 */ \
	41, /* /soc/pinmux@41008100 */ \
	42, /* /soc/pinmux@41008180 */ \
	43, /* /soc/random@42002800 */ \
	44, /* /soc/osc32kctrl@40001400 */ \
	45, /* /soc/rtc@40002400 */ \
	46, /* /soc/sercom@40003000 */ \
	47, /* /soc/sercom@40003400 */ \
	49, /* /soc/sercom@41012000 */ \
	51, /* /soc/sercom@43000000 */ \
	52, /* /soc/sercom@43000400 */ \
	53, /* /soc/sercom@43000800 */ \
	55, /* /soc/sercom@43000c00 */ \
	56, /* /soc/tc@40003800 */ \
	57, /* /soc/tc@4101a000 */ \
	58, /* /soc/tc@42001400 */ \
	59, /* /soc/tc@43001400 */ \
	60, /* /soc/tcc@41018000 */ \
	61, /* /soc/tcc@42000c00 */ \
	62, /* /soc/tcc@42001000 */ \
	63, /* /soc/tcc@43001000 */ \
	64, /* /soc/timer@e000e010 */ \
	66, /* /soc/usb@41000000 */ \
	67, /* /soc/watchdog@40002000 */ \
	68, /* /soc/nvmctrl@41004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000
 *
 * Binding (compatible = atmel,sam0-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_PATH "/soc/pinctrl@41008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_FULL_NAME "pinctrl@41008000"
#define DT_N_S_soc_S_pinctrl_41008000_FULL_NAME_UNQUOTED pinctrl@41008000
#define DT_N_S_soc_S_pinctrl_41008000_FULL_NAME_TOKEN pinctrl_41008000
#define DT_N_S_soc_S_pinctrl_41008000_FULL_NAME_UPPER_TOKEN PINCTRL_41008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_CHILD_NUM 12
#define DT_N_S_soc_S_pinctrl_41008000_CHILD_NUM_STATUS_OKAY 12
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_HASH r7kG0ZGhOMFB2tYv1EgTk51K0opfOj_K7CimxY4YWOU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_ORD 4
#define DT_N_S_soc_S_pinctrl_41008000_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_SUPPORTS_ORDS \
	5, /* /soc/pinctrl@41008000/gpio@41008080 */ \
	11, /* /soc/pinctrl@41008000/gpio@41008100 */ \
	18, /* /soc/pinctrl@41008000/pwm_default */ \
	29, /* /soc/pinctrl@41008000/mdio_default */ \
	32, /* /soc/pinctrl@41008000/gmac_rmii */ \
	33, /* /soc/pinctrl@41008000/sercom3_i2c_default */ \
	48, /* /soc/pinctrl@41008000/sercom2_uart_default */ \
	50, /* /soc/pinctrl@41008000/sercom4_spi_default */ \
	54, /* /soc/pinctrl@41008000/sercom7_i2c_default */ \
	65, /* /soc/pinctrl@41008000/usb_dc_default */ \
	72, /* /soc/pinctrl@41008000/gpio@41008000 */ \
	73, /* /soc/pinctrl@41008000/gpio@41008180 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_pinctrl DT_N_S_soc_S_pinctrl_41008000
#define DT_N_NODELABEL_pinctrl         DT_N_S_soc_S_pinctrl_41008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_RANGES_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_RANGES_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_RANGES_IDX_0_VAL_CHILD_BUS_ADDRESS 1090551808 /* 0x41008000 */
#define DT_N_S_soc_S_pinctrl_41008000_RANGES_IDX_0_VAL_PARENT_BUS_ADDRESS 1090551808 /* 0x41008000 */
#define DT_N_S_soc_S_pinctrl_41008000_RANGES_IDX_0_VAL_LENGTH 512 /* 0x200 */
#define DT_N_S_soc_S_pinctrl_41008000_FOREACH_RANGE(fn) fn(DT_N_S_soc_S_pinctrl_41008000, 0)
#define DT_N_S_soc_S_pinctrl_41008000_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_COMPAT_MATCHES_atmel_sam0_pinctrl 1
#define DT_N_S_soc_S_pinctrl_41008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_COMPAT_MODEL_IDX_0 "sam0-pinctrl"
#define DT_N_S_soc_S_pinctrl_41008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible {"atmel,sam0-pinctrl"}
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_IDX_0 "atmel,sam0-pinctrl"
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-pinctrl
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinctrl
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINCTRL
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_41008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_41008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/gpio@41008080
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080
 *
 * Binding (compatible = atmel,sam0-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/atmel,sam0-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_PATH "/soc/pinctrl@41008000/gpio@41008080"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FULL_NAME "gpio@41008080"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FULL_NAME_UNQUOTED gpio@41008080
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FULL_NAME_TOKEN gpio_41008080
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FULL_NAME_UPPER_TOKEN GPIO_41008080

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_NODELABEL(fn) fn(portb)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_NODELABEL_VARGS(fn, ...) fn(portb, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_HASH DOhT00KF_BaaszMk6QVdIpNTuHIF7oUYvKtHOVYxC44

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_ORD 5
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_SUPPORTS_ORDS \
	6, /* /buttons */ \
	7, /* /buttons/button_0 */ \
	12, /* /leds */ \
	13, /* /leds/io1_led */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_EXISTS 1
#define DT_N_ALIAS_port_b           DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080
#define DT_N_INST_1_atmel_sam0_gpio DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080
#define DT_N_NODELABEL_portb        DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_REG_IDX_0_VAL_ADDRESS 1090551936 /* 0x41008080 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_COMPAT_MATCHES_atmel_sam0_gpio 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_COMPAT_MODEL_IDX_0 "sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_reg {1090551936 /* 0x41008080 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_reg_IDX_0 1090551936
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_ngpios 32
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible {"atmel,sam0-gpio"}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_IDX_0 "atmel,sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GPIO
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"
#define DT_N_S_buttons_FULL_NAME_UNQUOTED buttons
#define DT_N_S_buttons_FULL_NAME_TOKEN buttons
#define DT_N_S_buttons_FULL_NAME_UPPER_TOKEN BUTTONS

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_NODELABEL_NUM 0
#define DT_N_S_buttons_FOREACH_NODELABEL(fn) 
#define DT_N_S_buttons_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_buttons_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_CHILD_NUM 1
#define DT_N_S_buttons_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_buttons_HASH 5PjIhtTrOdD7xh1YVA9zDmUgeKJd76iHjBCCBzXYfdo

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 6
#define DT_N_S_buttons_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */ \
	5, /* /soc/pinctrl@41008000/gpio@41008080 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	7, /* /buttons/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_IRQ_LEVEL 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_polling_mode 0
#define DT_N_S_buttons_P_polling_mode_EXISTS 1
#define DT_N_S_buttons_P_no_disconnect 0
#define DT_N_S_buttons_P_no_disconnect_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_zephyr_deferred_init 0
#define DT_N_S_buttons_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"
#define DT_N_S_buttons_S_button_0_FULL_NAME_UNQUOTED button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_TOKEN button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_UPPER_TOKEN BUTTON_0

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_0_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL(fn) fn(button0)
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(button0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_buttons) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_0_CHILD_NUM 0
#define DT_N_S_buttons_S_button_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_buttons_S_button_0_HASH Dse5y6YeLZXYDvVJH_dSbYTpKqPf642pyShJZc0TmQ0

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 7
#define DT_N_S_buttons_S_button_0_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	5, /* /soc/pinctrl@41008000/gpio@41008080 */ \
	6, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_button0 DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 31
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "SW0"
#define DT_N_S_buttons_S_button_0_P_label_STRING_UNQUOTED SW0
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN SW0
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN SW0
#define DT_N_S_buttons_S_button_0_P_label_IDX_0 "SW0"
#define DT_N_S_buttons_S_button_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_LEN 1
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_zephyr_code 11
#define DT_N_S_buttons_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 8
#define DT_N_S_cpus_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	9, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 1
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 9
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	8, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	10, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 120000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv7m-mpu):
 *   $ZEPHYR_BASE/dts/bindings/mmu_mpu/arm,armv7m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME_UNQUOTED mpu@e000ed90
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME_TOKEN mpu_e000ed90
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME_UPPER_TOKEN MPU_E000ED90

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_NODELABEL(fn) fn(mpu)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_NODELABEL_VARGS(fn, ...) fn(mpu, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_HASH otj85KLBeEBY12eXojsCVZB1yE6Ww_J1xjGC9_C8_ok

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 10
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	9, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv7m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv7m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0 "armv7m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv7m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv7m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_MPU
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/gpio@41008100
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100
 *
 * Binding (compatible = atmel,sam0-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/atmel,sam0-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_PATH "/soc/pinctrl@41008000/gpio@41008100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FULL_NAME "gpio@41008100"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FULL_NAME_UNQUOTED gpio@41008100
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FULL_NAME_TOKEN gpio_41008100
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FULL_NAME_UPPER_TOKEN GPIO_41008100

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_NODELABEL(fn) fn(portc)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_NODELABEL_VARGS(fn, ...) fn(portc, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_HASH nCFvV3TMEnCFM0To2hfr_OHMl5drpeO5ULkgosbNnkQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_ORD 11
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_SUPPORTS_ORDS \
	12, /* /leds */ \
	14, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_EXISTS 1
#define DT_N_ALIAS_port_c           DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100
#define DT_N_INST_2_atmel_sam0_gpio DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100
#define DT_N_NODELABEL_portc        DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_REG_IDX_0_VAL_ADDRESS 1090552064 /* 0x41008100 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_COMPAT_MATCHES_atmel_sam0_gpio 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_COMPAT_MODEL_IDX_0 "sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_reg {1090552064 /* 0x41008100 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_reg_IDX_0 1090552064
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_ngpios 32
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible {"atmel,sam0-gpio"}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_IDX_0 "atmel,sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GPIO
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 2
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_io1_led)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_io1_led)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_io1_led, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_io1_led, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_io1_led)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_io1_led)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_io1_led, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_io1_led, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 12
#define DT_N_S_leds_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	5, /* /soc/pinctrl@41008000/gpio@41008080 */ \
	11, /* /soc/pinctrl@41008000/gpio@41008100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	13, /* /leds/io1_led */ \
	14, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/io1_led
 *
 * Node identifier: DT_N_S_leds_S_io1_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_io1_led_PATH "/leds/io1_led"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_io1_led_FULL_NAME "io1_led"
#define DT_N_S_leds_S_io1_led_FULL_NAME_UNQUOTED io1_led
#define DT_N_S_leds_S_io1_led_FULL_NAME_TOKEN io1_led
#define DT_N_S_leds_S_io1_led_FULL_NAME_UPPER_TOKEN IO1_LED

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_io1_led_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_io1_led_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_io1_led_NODELABEL_NUM 1
#define DT_N_S_leds_S_io1_led_FOREACH_NODELABEL(fn) fn(io1_led)
#define DT_N_S_leds_S_io1_led_FOREACH_NODELABEL_VARGS(fn, ...) fn(io1_led, __VA_ARGS__)
#define DT_N_S_leds_S_io1_led_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_io1_led_CHILD_NUM 0
#define DT_N_S_leds_S_io1_led_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_io1_led_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_io1_led_HASH xDgNLIaT51Ij5OKSOEGoNRzelVcH4__5wpg3wrKoazU

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_io1_led_ORD 13
#define DT_N_S_leds_S_io1_led_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_io1_led_REQUIRES_ORDS \
	5, /* /soc/pinctrl@41008000/gpio@41008080 */ \
	12, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_io1_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_io1_led_EXISTS 1
#define DT_N_ALIAS_io1_led     DT_N_S_leds_S_io1_led
#define DT_N_NODELABEL_io1_led DT_N_S_leds_S_io1_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_io1_led_REG_NUM 0
#define DT_N_S_leds_S_io1_led_RANGES_NUM 0
#define DT_N_S_leds_S_io1_led_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_io1_led_IRQ_NUM 0
#define DT_N_S_leds_S_io1_led_IRQ_LEVEL 0
#define DT_N_S_leds_S_io1_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_io1_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_io1_led_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_io1_led_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080
#define DT_N_S_leds_S_io1_led_P_gpios_IDX_0_VAL_pin 8
#define DT_N_S_leds_S_io1_led_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_io1_led_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_io1_led_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_io1_led_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_io1_led, gpios, 0)
#define DT_N_S_leds_S_io1_led_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_io1_led, gpios, 0)
#define DT_N_S_leds_S_io1_led_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_io1_led, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_io1_led_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_io1_led, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_io1_led_P_gpios_LEN 1
#define DT_N_S_leds_S_io1_led_P_gpios_EXISTS 1
#define DT_N_S_leds_S_io1_led_P_label "IO1 Yellow LED"
#define DT_N_S_leds_S_io1_led_P_label_STRING_UNQUOTED IO1 Yellow LED
#define DT_N_S_leds_S_io1_led_P_label_STRING_TOKEN IO1_Yellow_LED
#define DT_N_S_leds_S_io1_led_P_label_STRING_UPPER_TOKEN IO1_YELLOW_LED
#define DT_N_S_leds_S_io1_led_P_label_IDX_0 "IO1 Yellow LED"
#define DT_N_S_leds_S_io1_led_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_io1_led_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_io1_led, label, 0)
#define DT_N_S_leds_S_io1_led_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_io1_led, label, 0)
#define DT_N_S_leds_S_io1_led_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_io1_led, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_io1_led_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_io1_led, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_io1_led_P_label_LEN 1
#define DT_N_S_leds_S_io1_led_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"
#define DT_N_S_leds_S_led_0_FULL_NAME_UNQUOTED led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_TOKEN led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_UPPER_TOKEN LED_0

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_0_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL(fn) fn(led0)
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(led0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_CHILD_NUM 0
#define DT_N_S_leds_S_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_0_HASH kqSZv01Dnr_1hPdmxPVlr9u8kLMk_UWHIyVHG3GknSY

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 14
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	11, /* /soc/pinctrl@41008000/gpio@41008100 */ \
	12, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led0 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 18
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Yellow LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED Yellow LED
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN Yellow_LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN YELLOW_LED
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "Yellow LED"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/gclk@40001c00
 *
 * Node identifier: DT_N_S_soc_S_gclk_40001c00
 *
 * Binding (compatible = atmel,sam0-gclk):
 *   $ZEPHYR_BASE/dts/bindings/clock/atmel,sam0-gclk.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gclk_40001c00_PATH "/soc/gclk@40001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gclk_40001c00_FULL_NAME "gclk@40001c00"
#define DT_N_S_soc_S_gclk_40001c00_FULL_NAME_UNQUOTED gclk@40001c00
#define DT_N_S_soc_S_gclk_40001c00_FULL_NAME_TOKEN gclk_40001c00
#define DT_N_S_soc_S_gclk_40001c00_FULL_NAME_UPPER_TOKEN GCLK_40001C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gclk_40001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gclk_40001c00_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gclk_40001c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_NODELABEL(fn) fn(gclk)
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(gclk, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gclk_40001c00_CHILD_NUM 0
#define DT_N_S_soc_S_gclk_40001c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gclk_40001c00_HASH D4NkJ_9kG6qPtzu1MkGBwiJXpezgDr72wK32iNA1AnQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gclk_40001c00_ORD 15
#define DT_N_S_soc_S_gclk_40001c00_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gclk_40001c00_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gclk_40001c00_SUPPORTS_ORDS \
	19, /* /soc/tcc@41016000 */ \
	22, /* /soc/adc@43001c00 */ \
	23, /* /soc/adc@43002000 */ \
	24, /* /soc/can@42000000 */ \
	25, /* /soc/can@42000400 */ \
	34, /* /soc/sercom@41014000 */ \
	46, /* /soc/sercom@40003000 */ \
	47, /* /soc/sercom@40003400 */ \
	49, /* /soc/sercom@41012000 */ \
	51, /* /soc/sercom@43000000 */ \
	52, /* /soc/sercom@43000400 */ \
	53, /* /soc/sercom@43000800 */ \
	55, /* /soc/sercom@43000c00 */ \
	56, /* /soc/tc@40003800 */ \
	57, /* /soc/tc@4101a000 */ \
	58, /* /soc/tc@42001400 */ \
	59, /* /soc/tc@43001400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gclk_40001c00_EXISTS 1
#define DT_N_INST_0_atmel_sam0_gclk DT_N_S_soc_S_gclk_40001c00
#define DT_N_NODELABEL_gclk         DT_N_S_soc_S_gclk_40001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gclk_40001c00_REG_NUM 1
#define DT_N_S_soc_S_gclk_40001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_REG_IDX_0_VAL_ADDRESS 1073748992 /* 0x40001c00 */
#define DT_N_S_soc_S_gclk_40001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_gclk_40001c00_RANGES_NUM 0
#define DT_N_S_soc_S_gclk_40001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gclk_40001c00_IRQ_NUM 0
#define DT_N_S_soc_S_gclk_40001c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_gclk_40001c00_COMPAT_MATCHES_atmel_sam0_gclk 1
#define DT_N_S_soc_S_gclk_40001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_gclk_40001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_COMPAT_MODEL_IDX_0 "sam0-gclk"
#define DT_N_S_soc_S_gclk_40001c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gclk_40001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gclk_40001c00_P_reg {1073748992 /* 0x40001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_gclk_40001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_reg_IDX_0 1073748992
#define DT_N_S_soc_S_gclk_40001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_gclk_40001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_compatible {"atmel,sam0-gclk"}
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_IDX_0 "atmel,sam0-gclk"
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-gclk
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gclk
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GCLK
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gclk_40001c00, compatible, 0)
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gclk_40001c00, compatible, 0)
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gclk_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gclk_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_gclk_40001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gclk_40001c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_wakeup_source 0
#define DT_N_S_soc_S_gclk_40001c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gclk_40001c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gclk_40001c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 16
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	19, /* /soc/tcc@41016000 */ \
	22, /* /soc/adc@43001c00 */ \
	23, /* /soc/adc@43002000 */ \
	24, /* /soc/can@42000000 */ \
	25, /* /soc/can@42000400 */ \
	27, /* /soc/dmac@4100a000 */ \
	28, /* /soc/eic@40002800 */ \
	34, /* /soc/sercom@41014000 */ \
	36, /* /soc/ethernet@42000800 */ \
	43, /* /soc/random@42002800 */ \
	45, /* /soc/rtc@40002400 */ \
	46, /* /soc/sercom@40003000 */ \
	47, /* /soc/sercom@40003400 */ \
	49, /* /soc/sercom@41012000 */ \
	51, /* /soc/sercom@43000000 */ \
	52, /* /soc/sercom@43000400 */ \
	53, /* /soc/sercom@43000800 */ \
	55, /* /soc/sercom@43000c00 */ \
	56, /* /soc/tc@40003800 */ \
	57, /* /soc/tc@4101a000 */ \
	58, /* /soc/tc@42001400 */ \
	59, /* /soc/tc@43001400 */ \
	60, /* /soc/tcc@41018000 */ \
	61, /* /soc/tcc@42000c00 */ \
	62, /* /soc/tcc@42001000 */ \
	63, /* /soc/tcc@43001000 */ \
	66, /* /soc/usb@41000000 */ \
	67, /* /soc/watchdog@40002000 */ \
	68, /* /soc/nvmctrl@41004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mclk@40000800
 *
 * Node identifier: DT_N_S_soc_S_mclk_40000800
 *
 * Binding (compatible = atmel,sam0-mclk):
 *   $ZEPHYR_BASE/dts/bindings/clock/atmel,sam0-mclk.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mclk_40000800_PATH "/soc/mclk@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mclk_40000800_FULL_NAME "mclk@40000800"
#define DT_N_S_soc_S_mclk_40000800_FULL_NAME_UNQUOTED mclk@40000800
#define DT_N_S_soc_S_mclk_40000800_FULL_NAME_TOKEN mclk_40000800
#define DT_N_S_soc_S_mclk_40000800_FULL_NAME_UPPER_TOKEN MCLK_40000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mclk_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mclk_40000800_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mclk_40000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_mclk_40000800_FOREACH_NODELABEL(fn) fn(mclk)
#define DT_N_S_soc_S_mclk_40000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(mclk, __VA_ARGS__)
#define DT_N_S_soc_S_mclk_40000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mclk_40000800_CHILD_NUM 0
#define DT_N_S_soc_S_mclk_40000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mclk_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mclk_40000800_HASH 0noJCOl5xxYo4v3X85yJFezHsf4FUY_g_rveDI4qwgU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mclk_40000800_ORD 17
#define DT_N_S_soc_S_mclk_40000800_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mclk_40000800_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mclk_40000800_SUPPORTS_ORDS \
	19, /* /soc/tcc@41016000 */ \
	22, /* /soc/adc@43001c00 */ \
	23, /* /soc/adc@43002000 */ \
	24, /* /soc/can@42000000 */ \
	25, /* /soc/can@42000400 */ \
	34, /* /soc/sercom@41014000 */ \
	45, /* /soc/rtc@40002400 */ \
	46, /* /soc/sercom@40003000 */ \
	47, /* /soc/sercom@40003400 */ \
	49, /* /soc/sercom@41012000 */ \
	51, /* /soc/sercom@43000000 */ \
	52, /* /soc/sercom@43000400 */ \
	53, /* /soc/sercom@43000800 */ \
	55, /* /soc/sercom@43000c00 */ \
	56, /* /soc/tc@40003800 */ \
	57, /* /soc/tc@4101a000 */ \
	58, /* /soc/tc@42001400 */ \
	59, /* /soc/tc@43001400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mclk_40000800_EXISTS 1
#define DT_N_INST_0_atmel_sam0_mclk DT_N_S_soc_S_mclk_40000800
#define DT_N_NODELABEL_mclk         DT_N_S_soc_S_mclk_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mclk_40000800_REG_NUM 1
#define DT_N_S_soc_S_mclk_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_mclk_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_mclk_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_mclk_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mclk_40000800_IRQ_NUM 0
#define DT_N_S_soc_S_mclk_40000800_IRQ_LEVEL 0
#define DT_N_S_soc_S_mclk_40000800_COMPAT_MATCHES_atmel_sam0_mclk 1
#define DT_N_S_soc_S_mclk_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_mclk_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_COMPAT_MODEL_IDX_0 "sam0-mclk"
#define DT_N_S_soc_S_mclk_40000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mclk_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mclk_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_mclk_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_mclk_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_mclk_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_compatible {"atmel,sam0-mclk"}
#define DT_N_S_soc_S_mclk_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_compatible_IDX_0 "atmel,sam0-mclk"
#define DT_N_S_soc_S_mclk_40000800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-mclk
#define DT_N_S_soc_S_mclk_40000800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_mclk
#define DT_N_S_soc_S_mclk_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_MCLK
#define DT_N_S_soc_S_mclk_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mclk_40000800, compatible, 0)
#define DT_N_S_soc_S_mclk_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mclk_40000800, compatible, 0)
#define DT_N_S_soc_S_mclk_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mclk_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mclk_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mclk_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mclk_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_mclk_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mclk_40000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_mclk_40000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mclk_40000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mclk_40000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/pwm_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_pwm_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_PATH "/soc/pinctrl@41008000/pwm_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FULL_NAME "pwm_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FULL_NAME_UNQUOTED pwm_default
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FULL_NAME_TOKEN pwm_default
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FULL_NAME_UPPER_TOKEN PWM_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_NODELABEL(fn) fn(pwm_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_HASH _2sHH9SDrV6SxEMCZeyhHblr_dE0utRH3w3q3JXqiC8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_ORD 18
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_SUPPORTS_ORDS \
	19, /* /soc/tcc@41016000 */ \
	76, /* /soc/pinctrl@41008000/pwm_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_EXISTS 1
#define DT_N_NODELABEL_pwm_default DT_N_S_soc_S_pinctrl_41008000_S_pwm_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/tcc@41016000
 *
 * Node identifier: DT_N_S_soc_S_tcc_41016000
 *
 * Binding (compatible = atmel,sam0-tcc-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/atmel,sam0-tcc-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_41016000_PATH "/soc/tcc@41016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_41016000_FULL_NAME "tcc@41016000"
#define DT_N_S_soc_S_tcc_41016000_FULL_NAME_UNQUOTED tcc@41016000
#define DT_N_S_soc_S_tcc_41016000_FULL_NAME_TOKEN tcc_41016000
#define DT_N_S_soc_S_tcc_41016000_FULL_NAME_UPPER_TOKEN TCC_41016000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_41016000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_41016000_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tcc_41016000_NODELABEL_NUM 1
#define DT_N_S_soc_S_tcc_41016000_FOREACH_NODELABEL(fn) fn(tcc0)
#define DT_N_S_soc_S_tcc_41016000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tcc0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_41016000_CHILD_NUM 0
#define DT_N_S_soc_S_tcc_41016000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_41016000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tcc_41016000_HASH QeoDrUsEz5D2OeHtc3wA82UcO_rXmfTPTivQO2KNrjI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_41016000_ORD 19
#define DT_N_S_soc_S_tcc_41016000_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_41016000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	18, /* /soc/pinctrl@41008000/pwm_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_41016000_SUPPORTS_ORDS \
	20, /* /pwmleds */ \
	21, /* /pwmleds/pwm_led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_41016000_EXISTS 1
#define DT_N_ALIAS_tcc_0               DT_N_S_soc_S_tcc_41016000
#define DT_N_INST_0_atmel_sam0_tcc_pwm DT_N_S_soc_S_tcc_41016000
#define DT_N_NODELABEL_tcc0            DT_N_S_soc_S_tcc_41016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_41016000_REG_NUM 1
#define DT_N_S_soc_S_tcc_41016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_REG_IDX_0_VAL_ADDRESS 1090609152 /* 0x41016000 */
#define DT_N_S_soc_S_tcc_41016000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_tcc_41016000_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_41016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_41016000_IRQ_NUM 7
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_VAL_irq 86
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_VAL_irq 87
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_VAL_irq 88
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_VAL_irq 89
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_VAL_irq 90
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_VAL_irq 91
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41016000_IRQ_LEVEL 1
#define DT_N_S_soc_S_tcc_41016000_COMPAT_MATCHES_atmel_sam0_tcc_pwm 1
#define DT_N_S_soc_S_tcc_41016000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_41016000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_COMPAT_MODEL_IDX_0 "sam0-tcc-pwm"
#define DT_N_S_soc_S_tcc_41016000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_NUM 1
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_tcc_41016000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_pwm_default

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_41016000_P_reg {1090609152 /* 0x41016000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_tcc_41016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_reg_IDX_0 1090609152
#define DT_N_S_soc_S_tcc_41016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_tcc_41016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts {85 /* 0x55 */, 0 /* 0x0 */, 86 /* 0x56 */, 0 /* 0x0 */, 87 /* 0x57 */, 0 /* 0x0 */, 88 /* 0x58 */, 0 /* 0x0 */, 89 /* 0x59 */, 0 /* 0x0 */, 90 /* 0x5a */, 0 /* 0x0 */, 91 /* 0x5b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_2 86
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_4 87
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_6 88
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_8 89
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_10 90
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_12 91
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_tcc_41016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_0_VAL_id 25
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_VAL_offset 24
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_VAL_bit 11
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_tcc_41016000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tcc_41016000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, clocks, 0) \
	fn(DT_N_S_soc_S_tcc_41016000, clocks, 1)
#define DT_N_S_soc_S_tcc_41016000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_41016000, clocks, 1)
#define DT_N_S_soc_S_tcc_41016000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_41016000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_41016000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_clocks_LEN 2
#define DT_N_S_soc_S_tcc_41016000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, clock_names, 0) \
	fn(DT_N_S_soc_S_tcc_41016000, clock_names, 1)
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_41016000, clock_names, 1)
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tcc_41016000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tcc_41016000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_LEN 2
#define DT_N_S_soc_S_tcc_41016000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_tcc_41016000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_channels 6
#define DT_N_S_soc_S_tcc_41016000_P_channels_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_tcc_41016000_P_channels_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_channels_IDX_0_ENUM_VAL_6_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_channels_ENUM_VAL_6_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_channels_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_counter_size 24
#define DT_N_S_soc_S_tcc_41016000_P_counter_size_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_tcc_41016000_P_counter_size_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_counter_size_IDX_0_ENUM_VAL_24_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_counter_size_ENUM_VAL_24_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_counter_size_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_prescaler 8
#define DT_N_S_soc_S_tcc_41016000_P_prescaler_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_tcc_41016000_P_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_prescaler_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_prescaler_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_status "okay"
#define DT_N_S_soc_S_tcc_41016000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_tcc_41016000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_tcc_41016000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_tcc_41016000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_tcc_41016000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_tcc_41016000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, status, 0)
#define DT_N_S_soc_S_tcc_41016000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, status, 0)
#define DT_N_S_soc_S_tcc_41016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_status_LEN 1
#define DT_N_S_soc_S_tcc_41016000_P_status_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_compatible {"atmel,sam0-tcc-pwm"}
#define DT_N_S_soc_S_tcc_41016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_compatible_IDX_0 "atmel,sam0-tcc-pwm"
#define DT_N_S_soc_S_tcc_41016000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tcc-pwm
#define DT_N_S_soc_S_tcc_41016000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc_pwm
#define DT_N_S_soc_S_tcc_41016000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC_PWM
#define DT_N_S_soc_S_tcc_41016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, compatible, 0)
#define DT_N_S_soc_S_tcc_41016000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, compatible, 0)
#define DT_N_S_soc_S_tcc_41016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_41016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tcc_41016000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_wakeup_source 0
#define DT_N_S_soc_S_tcc_41016000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tcc_41016000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_pwm_default
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_pwm_default
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_0, 0)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_0, 0)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_names, 0)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_names, 0)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41016000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_tcc_41016000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"
#define DT_N_S_pwmleds_FULL_NAME_UNQUOTED pwmleds
#define DT_N_S_pwmleds_FULL_NAME_TOKEN pwmleds
#define DT_N_S_pwmleds_FULL_NAME_UPPER_TOKEN PWMLEDS

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_NODELABEL_NUM 0
#define DT_N_S_pwmleds_FOREACH_NODELABEL(fn) 
#define DT_N_S_pwmleds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pwmleds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_CHILD_NUM 1
#define DT_N_S_pwmleds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pwmleds_HASH LAVLDxln4k2d8rWkHY5gWY_V_wbRKRVUOItR1NgXPw4

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 20
#define DT_N_S_pwmleds_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */ \
	19, /* /soc/tcc@41016000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	21, /* /pwmleds/pwm_led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_IRQ_LEVEL 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_P_compatible {"pwm-leds"}
#define DT_N_S_pwmleds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_LEN 1
#define DT_N_S_pwmleds_P_compatible_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_0
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_0_PATH "/pwmleds/pwm_led_0"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME "pwm_led_0"
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME_UNQUOTED pwm_led_0
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME_TOKEN pwm_led_0
#define DT_N_S_pwmleds_S_pwm_led_0_FULL_NAME_UPPER_TOKEN PWM_LED_0

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_0_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_0_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_NODELABEL(fn) fn(pwm_led0)
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm_led0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_pwmleds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pwmleds_S_pwm_led_0_HASH 9AazpJGoUz9iIo_1AZ3WD6yneQZjjssfQisq6_rbYq0

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_0_ORD 21
#define DT_N_S_pwmleds_S_pwm_led_0_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_0_REQUIRES_ORDS \
	19, /* /soc/tcc@41016000 */ \
	20, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_0_EXISTS 1
#define DT_N_ALIAS_pwm_led0     DT_N_S_pwmleds_S_pwm_led_0
#define DT_N_NODELABEL_pwm_led0 DT_N_S_pwmleds_S_pwm_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_0_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_0_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_0_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_PH DT_N_S_soc_S_tcc_41016000
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel 2
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_0_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/adc@43001c00
 *
 * Node identifier: DT_N_S_soc_S_adc_43001c00
 *
 * Binding (compatible = atmel,sam0-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/atmel,sam0-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_43001c00_PATH "/soc/adc@43001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_43001c00_FULL_NAME "adc@43001c00"
#define DT_N_S_soc_S_adc_43001c00_FULL_NAME_UNQUOTED adc@43001c00
#define DT_N_S_soc_S_adc_43001c00_FULL_NAME_TOKEN adc_43001c00
#define DT_N_S_soc_S_adc_43001c00_FULL_NAME_UPPER_TOKEN ADC_43001C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_43001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_43001c00_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_43001c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_43001c00_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_43001c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_43001c00_CHILD_NUM 0
#define DT_N_S_soc_S_adc_43001c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_43001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_43001c00_HASH NTf8Iw_m4OO358Iswry5REnyOjH7QaZ4y7xmsAZNF_M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_43001c00_ORD 22
#define DT_N_S_soc_S_adc_43001c00_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_43001c00_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_43001c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_43001c00_EXISTS 1
#define DT_N_ALIAS_adc_0           DT_N_S_soc_S_adc_43001c00
#define DT_N_INST_0_atmel_sam0_adc DT_N_S_soc_S_adc_43001c00
#define DT_N_NODELABEL_adc0        DT_N_S_soc_S_adc_43001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_43001c00_REG_NUM 1
#define DT_N_S_soc_S_adc_43001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_REG_IDX_0_VAL_ADDRESS 1124080640 /* 0x43001c00 */
#define DT_N_S_soc_S_adc_43001c00_REG_IDX_0_VAL_SIZE 74 /* 0x4a */
#define DT_N_S_soc_S_adc_43001c00_RANGES_NUM 0
#define DT_N_S_soc_S_adc_43001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_43001c00_IRQ_NUM 2
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_VAL_irq 118
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_VAL_irq 119
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_43001c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_overrun_VAL_irq DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_overrun_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_overrun_VAL_priority DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_overrun_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_overrun_CONTROLLER DT_N_S_soc_S_adc_43001c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_resrdy_VAL_irq DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_resrdy_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_resrdy_VAL_priority DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_resrdy_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_IRQ_NAME_resrdy_CONTROLLER DT_N_S_soc_S_adc_43001c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_adc_43001c00_COMPAT_MATCHES_atmel_sam0_adc 1
#define DT_N_S_soc_S_adc_43001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_adc_43001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_COMPAT_MODEL_IDX_0 "sam0-adc"
#define DT_N_S_soc_S_adc_43001c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_43001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_43001c00_P_reg {1124080640 /* 0x43001c00 */, 74 /* 0x4a */}
#define DT_N_S_soc_S_adc_43001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_reg_IDX_0 1124080640
#define DT_N_S_soc_S_adc_43001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_reg_IDX_1 74
#define DT_N_S_soc_S_adc_43001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupts {118 /* 0x76 */, 0 /* 0x0 */, 119 /* 0x77 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_0 118
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_2 119
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_adc_43001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_0_VAL_id 40
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_VAL_bit 7
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_adc_43001c00_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_adc_43001c00_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, clocks, 0) \
	fn(DT_N_S_soc_S_adc_43001c00, clocks, 1)
#define DT_N_S_soc_S_adc_43001c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43001c00, clocks, 1)
#define DT_N_S_soc_S_adc_43001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_43001c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43001c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_clocks_LEN 2
#define DT_N_S_soc_S_adc_43001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, clock_names, 0) \
	fn(DT_N_S_soc_S_adc_43001c00, clock_names, 1)
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43001c00, clock_names, 1)
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_43001c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43001c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_LEN 2
#define DT_N_S_soc_S_adc_43001c00_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_IDX_0_VAL_gen 2
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_adc_43001c00_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_prescaler 4
#define DT_N_S_soc_S_adc_43001c00_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_calib_offset 0
#define DT_N_S_soc_S_adc_43001c00_P_calib_offset_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_adc_43001c00_P_calib_offset_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_calib_offset_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_calib_offset_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_calib_offset_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_status "okay"
#define DT_N_S_soc_S_adc_43001c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_43001c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_43001c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_43001c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_43001c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_43001c00_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, status, 0)
#define DT_N_S_soc_S_adc_43001c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, status, 0)
#define DT_N_S_soc_S_adc_43001c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_status_LEN 1
#define DT_N_S_soc_S_adc_43001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_compatible {"atmel,sam0-adc"}
#define DT_N_S_soc_S_adc_43001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_compatible_IDX_0 "atmel,sam0-adc"
#define DT_N_S_soc_S_adc_43001c00_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-adc
#define DT_N_S_soc_S_adc_43001c00_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_adc
#define DT_N_S_soc_S_adc_43001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_ADC
#define DT_N_S_soc_S_adc_43001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, compatible, 0)
#define DT_N_S_soc_S_adc_43001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, compatible, 0)
#define DT_N_S_soc_S_adc_43001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_43001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names {"overrun", "resrdy"}
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_0 "overrun"
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_0_STRING_UNQUOTED overrun
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_0_STRING_TOKEN overrun
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN OVERRUN
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_1 "resrdy"
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_1_STRING_UNQUOTED resrdy
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_1_STRING_TOKEN resrdy
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN RESRDY
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 1)
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 1)
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43001c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_adc_43001c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_43001c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_wakeup_source 0
#define DT_N_S_soc_S_adc_43001c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_43001c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_43001c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@43002000
 *
 * Node identifier: DT_N_S_soc_S_adc_43002000
 *
 * Binding (compatible = atmel,sam0-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/atmel,sam0-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_43002000_PATH "/soc/adc@43002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_43002000_FULL_NAME "adc@43002000"
#define DT_N_S_soc_S_adc_43002000_FULL_NAME_UNQUOTED adc@43002000
#define DT_N_S_soc_S_adc_43002000_FULL_NAME_TOKEN adc_43002000
#define DT_N_S_soc_S_adc_43002000_FULL_NAME_UPPER_TOKEN ADC_43002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_43002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_43002000_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_43002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_43002000_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_43002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_43002000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_43002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_43002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_43002000_HASH CRJlcYkUhO97aJXZHLNZTjrYBOq5rP1dqqQFUh_Nflg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_43002000_ORD 23
#define DT_N_S_soc_S_adc_43002000_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_43002000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_43002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_43002000_EXISTS 1
#define DT_N_ALIAS_adc_1           DT_N_S_soc_S_adc_43002000
#define DT_N_INST_1_atmel_sam0_adc DT_N_S_soc_S_adc_43002000
#define DT_N_NODELABEL_adc1        DT_N_S_soc_S_adc_43002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_43002000_REG_NUM 1
#define DT_N_S_soc_S_adc_43002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_REG_IDX_0_VAL_ADDRESS 1124081664 /* 0x43002000 */
#define DT_N_S_soc_S_adc_43002000_REG_IDX_0_VAL_SIZE 74 /* 0x4a */
#define DT_N_S_soc_S_adc_43002000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_43002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_43002000_IRQ_NUM 2
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_VAL_irq 120
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_VAL_irq 121
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_43002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_overrun_VAL_irq DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_overrun_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_overrun_VAL_priority DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_overrun_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_overrun_CONTROLLER DT_N_S_soc_S_adc_43002000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_resrdy_VAL_irq DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_resrdy_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_resrdy_VAL_priority DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_resrdy_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_IRQ_NAME_resrdy_CONTROLLER DT_N_S_soc_S_adc_43002000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_adc_43002000_COMPAT_MATCHES_atmel_sam0_adc 1
#define DT_N_S_soc_S_adc_43002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_adc_43002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_COMPAT_MODEL_IDX_0 "sam0-adc"
#define DT_N_S_soc_S_adc_43002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_43002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_43002000_P_reg {1124081664 /* 0x43002000 */, 74 /* 0x4a */}
#define DT_N_S_soc_S_adc_43002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_reg_IDX_0 1124081664
#define DT_N_S_soc_S_adc_43002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_reg_IDX_1 74
#define DT_N_S_soc_S_adc_43002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupts {120 /* 0x78 */, 0 /* 0x0 */, 121 /* 0x79 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_0 120
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_2 121
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_adc_43002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_0_VAL_id 41
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_adc_43002000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_VAL_bit 8
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_adc_43002000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_adc_43002000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, clocks, 0) \
	fn(DT_N_S_soc_S_adc_43002000, clocks, 1)
#define DT_N_S_soc_S_adc_43002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43002000, clocks, 1)
#define DT_N_S_soc_S_adc_43002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_43002000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43002000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_clocks_LEN 2
#define DT_N_S_soc_S_adc_43002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_adc_43002000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_adc_43002000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, clock_names, 0) \
	fn(DT_N_S_soc_S_adc_43002000, clock_names, 1)
#define DT_N_S_soc_S_adc_43002000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43002000, clock_names, 1)
#define DT_N_S_soc_S_adc_43002000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_43002000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43002000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_clock_names_LEN 2
#define DT_N_S_soc_S_adc_43002000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_IDX_0_VAL_gen 2
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_adc_43002000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_prescaler 4
#define DT_N_S_soc_S_adc_43002000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_calib_offset 14
#define DT_N_S_soc_S_adc_43002000_P_calib_offset_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_43002000_P_calib_offset_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_calib_offset_IDX_0_ENUM_VAL_14_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_calib_offset_ENUM_VAL_14_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_calib_offset_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_status "disabled"
#define DT_N_S_soc_S_adc_43002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_43002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_43002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_43002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_43002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_43002000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, status, 0)
#define DT_N_S_soc_S_adc_43002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, status, 0)
#define DT_N_S_soc_S_adc_43002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_status_LEN 1
#define DT_N_S_soc_S_adc_43002000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_compatible {"atmel,sam0-adc"}
#define DT_N_S_soc_S_adc_43002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_compatible_IDX_0 "atmel,sam0-adc"
#define DT_N_S_soc_S_adc_43002000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-adc
#define DT_N_S_soc_S_adc_43002000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_adc
#define DT_N_S_soc_S_adc_43002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_ADC
#define DT_N_S_soc_S_adc_43002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, compatible, 0)
#define DT_N_S_soc_S_adc_43002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, compatible, 0)
#define DT_N_S_soc_S_adc_43002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_43002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names {"overrun", "resrdy"}
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_0 "overrun"
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_0_STRING_UNQUOTED overrun
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_0_STRING_TOKEN overrun
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN OVERRUN
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_1 "resrdy"
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_1_STRING_UNQUOTED resrdy
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_1_STRING_TOKEN resrdy
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN RESRDY
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 1)
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 1)
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_43002000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_adc_43002000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_43002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_43002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_43002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_43002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/can@42000000
 *
 * Node identifier: DT_N_S_soc_S_can_42000000
 *
 * Binding (compatible = atmel,sam0-can):
 *   $ZEPHYR_BASE/dts/bindings/can/atmel,sam0-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_42000000_PATH "/soc/can@42000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_42000000_FULL_NAME "can@42000000"
#define DT_N_S_soc_S_can_42000000_FULL_NAME_UNQUOTED can@42000000
#define DT_N_S_soc_S_can_42000000_FULL_NAME_TOKEN can_42000000
#define DT_N_S_soc_S_can_42000000_FULL_NAME_UPPER_TOKEN CAN_42000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_42000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_42000000_CHILD_IDX 41

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_42000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_42000000_FOREACH_NODELABEL(fn) fn(can0)
#define DT_N_S_soc_S_can_42000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(can0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_42000000_CHILD_NUM 0
#define DT_N_S_soc_S_can_42000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_42000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_can_42000000_HASH c142eZyYxYIqv8MDJKgqLOQw6wGhpqgw3C4a7ggy_ac

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_42000000_ORD 24
#define DT_N_S_soc_S_can_42000000_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_42000000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_42000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_42000000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_can DT_N_S_soc_S_can_42000000
#define DT_N_NODELABEL_can0        DT_N_S_soc_S_can_42000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_42000000_REG_NUM 1
#define DT_N_S_soc_S_can_42000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_REG_IDX_0_VAL_ADDRESS 1107296256 /* 0x42000000 */
#define DT_N_S_soc_S_can_42000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_42000000_RANGES_NUM 0
#define DT_N_S_soc_S_can_42000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_42000000_IRQ_NUM 2
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_VAL_irq 78
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_VAL_irq 78
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_42000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int0_VAL_irq DT_N_S_soc_S_can_42000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int0_VAL_priority DT_N_S_soc_S_can_42000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int0_CONTROLLER DT_N_S_soc_S_can_42000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int1_VAL_irq DT_N_S_soc_S_can_42000000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int1_VAL_priority DT_N_S_soc_S_can_42000000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000000_IRQ_NAME_int1_CONTROLLER DT_N_S_soc_S_can_42000000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_can_42000000_COMPAT_MATCHES_atmel_sam0_can 1
#define DT_N_S_soc_S_can_42000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_can_42000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_COMPAT_MODEL_IDX_0 "sam0-can"
#define DT_N_S_soc_S_can_42000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_42000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_42000000_P_reg {1107296256 /* 0x42000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_42000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_reg_IDX_0 1107296256
#define DT_N_S_soc_S_can_42000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_42000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupts {78 /* 0x4e */, 0 /* 0x0 */, 78 /* 0x4e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_0 78
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_2 78
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_42000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupt_names {"int0", "int1"}
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_0 "int0"
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_0_STRING_UNQUOTED int0
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_0_STRING_TOKEN int0
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN INT0
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_1 "int1"
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_1_STRING_UNQUOTED int1
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_1_STRING_TOKEN int1
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN INT1
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_42000000, interrupt_names, 1)
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, interrupt_names, 1)
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_can_42000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_0_VAL_id 27
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_can_42000000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_VAL_offset 16
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_VAL_bit 17
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_can_42000000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_can_42000000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, clocks, 0) \
	fn(DT_N_S_soc_S_can_42000000, clocks, 1)
#define DT_N_S_soc_S_can_42000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, clocks, 1)
#define DT_N_S_soc_S_can_42000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_clocks_LEN 2
#define DT_N_S_soc_S_can_42000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_can_42000000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_can_42000000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, clock_names, 0) \
	fn(DT_N_S_soc_S_can_42000000, clock_names, 1)
#define DT_N_S_soc_S_can_42000000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, clock_names, 1)
#define DT_N_S_soc_S_can_42000000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_clock_names_LEN 2
#define DT_N_S_soc_S_can_42000000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_IDX_0_VAL_gen 7
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_can_42000000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_divider 1
#define DT_N_S_soc_S_can_42000000_P_divider_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg {0 /* 0x0 */, 128 /* 0x80 */, 64 /* 0x40 */, 64 /* 0x40 */, 64 /* 0x40 */, 64 /* 0x40 */, 32 /* 0x20 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_0 0
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_1 128
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_2 64
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_3 64
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_4 64
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_5 64
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_6 32
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_IDX_7 32
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 0) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 1) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 2) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 3) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 4) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 5) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 6) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000000, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_LEN 8
#define DT_N_S_soc_S_can_42000000_P_bosch_mram_cfg_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_status "disabled"
#define DT_N_S_soc_S_can_42000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_42000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_42000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_42000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_42000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_can_42000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, status, 0)
#define DT_N_S_soc_S_can_42000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, status, 0)
#define DT_N_S_soc_S_can_42000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_status_LEN 1
#define DT_N_S_soc_S_can_42000000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_compatible {"atmel,sam0-can"}
#define DT_N_S_soc_S_can_42000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_compatible_IDX_0 "atmel,sam0-can"
#define DT_N_S_soc_S_can_42000000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-can
#define DT_N_S_soc_S_can_42000000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_can
#define DT_N_S_soc_S_can_42000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_CAN
#define DT_N_S_soc_S_can_42000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000000, compatible, 0)
#define DT_N_S_soc_S_can_42000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000000, compatible, 0)
#define DT_N_S_soc_S_can_42000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_42000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_42000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_wakeup_source 0
#define DT_N_S_soc_S_can_42000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_42000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_42000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/can@42000400
 *
 * Node identifier: DT_N_S_soc_S_can_42000400
 *
 * Binding (compatible = atmel,sam0-can):
 *   $ZEPHYR_BASE/dts/bindings/can/atmel,sam0-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_42000400_PATH "/soc/can@42000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_42000400_FULL_NAME "can@42000400"
#define DT_N_S_soc_S_can_42000400_FULL_NAME_UNQUOTED can@42000400
#define DT_N_S_soc_S_can_42000400_FULL_NAME_TOKEN can_42000400
#define DT_N_S_soc_S_can_42000400_FULL_NAME_UPPER_TOKEN CAN_42000400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_42000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_42000400_CHILD_IDX 42

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_42000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_42000400_FOREACH_NODELABEL(fn) fn(can1)
#define DT_N_S_soc_S_can_42000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(can1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_42000400_CHILD_NUM 0
#define DT_N_S_soc_S_can_42000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_42000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_can_42000400_HASH wnsiLmTc41PQ6_nra1DqXEr6tA9MiP5HSlGz_MwVGNk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_42000400_ORD 25
#define DT_N_S_soc_S_can_42000400_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_42000400_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_42000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_42000400_EXISTS 1
#define DT_N_INST_1_atmel_sam0_can DT_N_S_soc_S_can_42000400
#define DT_N_NODELABEL_can1        DT_N_S_soc_S_can_42000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_42000400_REG_NUM 1
#define DT_N_S_soc_S_can_42000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_REG_IDX_0_VAL_ADDRESS 1107297280 /* 0x42000400 */
#define DT_N_S_soc_S_can_42000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_42000400_RANGES_NUM 0
#define DT_N_S_soc_S_can_42000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_42000400_IRQ_NUM 2
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_VAL_irq 79
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_VAL_irq 79
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_42000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int0_VAL_irq DT_N_S_soc_S_can_42000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int0_VAL_priority DT_N_S_soc_S_can_42000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int0_CONTROLLER DT_N_S_soc_S_can_42000400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int1_VAL_irq DT_N_S_soc_S_can_42000400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int1_VAL_priority DT_N_S_soc_S_can_42000400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_42000400_IRQ_NAME_int1_CONTROLLER DT_N_S_soc_S_can_42000400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_can_42000400_COMPAT_MATCHES_atmel_sam0_can 1
#define DT_N_S_soc_S_can_42000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_can_42000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_COMPAT_MODEL_IDX_0 "sam0-can"
#define DT_N_S_soc_S_can_42000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_42000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_42000400_P_reg {1107297280 /* 0x42000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_42000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_reg_IDX_0 1107297280
#define DT_N_S_soc_S_can_42000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_42000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupts {79 /* 0x4f */, 0 /* 0x0 */, 79 /* 0x4f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_0 79
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_2 79
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_42000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupt_names {"int0", "int1"}
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_0 "int0"
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_0_STRING_UNQUOTED int0
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_0_STRING_TOKEN int0
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN INT0
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_1 "int1"
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_1_STRING_UNQUOTED int1
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_1_STRING_TOKEN int1
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN INT1
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_42000400, interrupt_names, 1)
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, interrupt_names, 1)
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_can_42000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_0_VAL_id 28
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_can_42000400_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_VAL_offset 16
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_VAL_bit 18
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_can_42000400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_can_42000400_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, clocks, 0) \
	fn(DT_N_S_soc_S_can_42000400, clocks, 1)
#define DT_N_S_soc_S_can_42000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, clocks, 1)
#define DT_N_S_soc_S_can_42000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_clocks_LEN 2
#define DT_N_S_soc_S_can_42000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_can_42000400_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_can_42000400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, clock_names, 0) \
	fn(DT_N_S_soc_S_can_42000400, clock_names, 1)
#define DT_N_S_soc_S_can_42000400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, clock_names, 1)
#define DT_N_S_soc_S_can_42000400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_clock_names_LEN 2
#define DT_N_S_soc_S_can_42000400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_IDX_0_VAL_gen 7
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_can_42000400_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_divider 1
#define DT_N_S_soc_S_can_42000400_P_divider_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg {0 /* 0x0 */, 128 /* 0x80 */, 64 /* 0x40 */, 64 /* 0x40 */, 64 /* 0x40 */, 64 /* 0x40 */, 32 /* 0x20 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_0 0
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_1 128
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_2 64
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_3 64
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_4 64
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_5 64
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_6 32
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_IDX_7 32
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 0) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 1) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 2) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 3) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 4) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 5) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 6) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_42000400, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_LEN 8
#define DT_N_S_soc_S_can_42000400_P_bosch_mram_cfg_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_status "disabled"
#define DT_N_S_soc_S_can_42000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_42000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_42000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_42000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_42000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_can_42000400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, status, 0)
#define DT_N_S_soc_S_can_42000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, status, 0)
#define DT_N_S_soc_S_can_42000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_status_LEN 1
#define DT_N_S_soc_S_can_42000400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_compatible {"atmel,sam0-can"}
#define DT_N_S_soc_S_can_42000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_compatible_IDX_0 "atmel,sam0-can"
#define DT_N_S_soc_S_can_42000400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-can
#define DT_N_S_soc_S_can_42000400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_can
#define DT_N_S_soc_S_can_42000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_CAN
#define DT_N_S_soc_S_can_42000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_42000400, compatible, 0)
#define DT_N_S_soc_S_can_42000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_42000400, compatible, 0)
#define DT_N_S_soc_S_can_42000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_42000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_42000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_42000400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_42000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_42000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_wakeup_source 0
#define DT_N_S_soc_S_can_42000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_42000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_42000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/device_id@8061fc
 *
 * Node identifier: DT_N_S_soc_S_device_id_8061fc
 *
 * Binding (compatible = atmel,sam0-id):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-id.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_device_id_8061fc_PATH "/soc/device_id@8061fc"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_device_id_8061fc_FULL_NAME "device_id@8061fc"
#define DT_N_S_soc_S_device_id_8061fc_FULL_NAME_UNQUOTED device_id@8061fc
#define DT_N_S_soc_S_device_id_8061fc_FULL_NAME_TOKEN device_id_8061fc
#define DT_N_S_soc_S_device_id_8061fc_FULL_NAME_UPPER_TOKEN DEVICE_ID_8061FC

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_device_id_8061fc_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_device_id_8061fc_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_device_id_8061fc_NODELABEL_NUM 1
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_NODELABEL(fn) fn(id)
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_NODELABEL_VARGS(fn, ...) fn(id, __VA_ARGS__)
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_device_id_8061fc_CHILD_NUM 0
#define DT_N_S_soc_S_device_id_8061fc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_device_id_8061fc_HASH VaoW7o86toLDffPBf33vyrO5JPSxbqa3IYHK15rRBUc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_device_id_8061fc_ORD 26
#define DT_N_S_soc_S_device_id_8061fc_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_device_id_8061fc_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_device_id_8061fc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_device_id_8061fc_EXISTS 1
#define DT_N_INST_0_atmel_sam0_id DT_N_S_soc_S_device_id_8061fc
#define DT_N_NODELABEL_id         DT_N_S_soc_S_device_id_8061fc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_device_id_8061fc_REG_NUM 4
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_0_VAL_ADDRESS 8413692 /* 0x8061fc */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_1_VAL_ADDRESS 8413200 /* 0x806010 */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_2_VAL_ADDRESS 8413204 /* 0x806014 */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_3_VAL_ADDRESS 8413208 /* 0x806018 */
#define DT_N_S_soc_S_device_id_8061fc_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_device_id_8061fc_RANGES_NUM 0
#define DT_N_S_soc_S_device_id_8061fc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_device_id_8061fc_IRQ_NUM 0
#define DT_N_S_soc_S_device_id_8061fc_IRQ_LEVEL 0
#define DT_N_S_soc_S_device_id_8061fc_COMPAT_MATCHES_atmel_sam0_id 1
#define DT_N_S_soc_S_device_id_8061fc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_device_id_8061fc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_COMPAT_MODEL_IDX_0 "sam0-id"
#define DT_N_S_soc_S_device_id_8061fc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_device_id_8061fc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_device_id_8061fc_P_reg {8413692 /* 0x8061fc */, 4 /* 0x4 */, 8413200 /* 0x806010 */, 4 /* 0x4 */, 8413204 /* 0x806014 */, 4 /* 0x4 */, 8413208 /* 0x806018 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_0 8413692
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_1 4
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_2 8413200
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_3 4
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_4 8413204
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_5 4
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_6 8413208
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_reg_IDX_7 4
#define DT_N_S_soc_S_device_id_8061fc_P_reg_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_compatible {"atmel,sam0-id"}
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_IDX_0 "atmel,sam0-id"
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-id
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_id
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_ID
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_device_id_8061fc, compatible, 0)
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_device_id_8061fc, compatible, 0)
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_device_id_8061fc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_device_id_8061fc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_LEN 1
#define DT_N_S_soc_S_device_id_8061fc_P_compatible_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_device_id_8061fc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_wakeup_source 0
#define DT_N_S_soc_S_device_id_8061fc_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_device_id_8061fc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_device_id_8061fc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dmac@4100a000
 *
 * Node identifier: DT_N_S_soc_S_dmac_4100a000
 *
 * Binding (compatible = atmel,sam0-dmac):
 *   $ZEPHYR_BASE/dts/bindings/dma/atmel,sam0-dmac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dmac_4100a000_PATH "/soc/dmac@4100a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dmac_4100a000_FULL_NAME "dmac@4100a000"
#define DT_N_S_soc_S_dmac_4100a000_FULL_NAME_UNQUOTED dmac@4100a000
#define DT_N_S_soc_S_dmac_4100a000_FULL_NAME_TOKEN dmac_4100a000
#define DT_N_S_soc_S_dmac_4100a000_FULL_NAME_UPPER_TOKEN DMAC_4100A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dmac_4100a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dmac_4100a000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dmac_4100a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_NODELABEL(fn) fn(dmac)
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dmac, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dmac_4100a000_CHILD_NUM 0
#define DT_N_S_soc_S_dmac_4100a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dmac_4100a000_HASH d1DK3S15RT_FGUP4clhMwBQfUY9OAkz5MVitQGrtbhk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dmac_4100a000_ORD 27
#define DT_N_S_soc_S_dmac_4100a000_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dmac_4100a000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dmac_4100a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dmac_4100a000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_dmac DT_N_S_soc_S_dmac_4100a000
#define DT_N_NODELABEL_dmac         DT_N_S_soc_S_dmac_4100a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dmac_4100a000_REG_NUM 1
#define DT_N_S_soc_S_dmac_4100a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_REG_IDX_0_VAL_ADDRESS 1090560000 /* 0x4100a000 */
#define DT_N_S_soc_S_dmac_4100a000_REG_IDX_0_VAL_SIZE 80 /* 0x50 */
#define DT_N_S_soc_S_dmac_4100a000_RANGES_NUM 0
#define DT_N_S_soc_S_dmac_4100a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dmac_4100a000_IRQ_NUM 5
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_VAL_irq 33
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_VAL_irq 34
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_VAL_irq 35
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dmac_4100a000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dmac_4100a000_COMPAT_MATCHES_atmel_sam0_dmac 1
#define DT_N_S_soc_S_dmac_4100a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_dmac_4100a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_COMPAT_MODEL_IDX_0 "sam0-dmac"
#define DT_N_S_soc_S_dmac_4100a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dmac_4100a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dmac_4100a000_P_reg {1090560000 /* 0x4100a000 */, 80 /* 0x50 */}
#define DT_N_S_soc_S_dmac_4100a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_reg_IDX_0 1090560000
#define DT_N_S_soc_S_dmac_4100a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_reg_IDX_1 80
#define DT_N_S_soc_S_dmac_4100a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */, 33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */, 35 /* 0x23 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_4 33
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_6 34
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_8 35
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dmac_4100a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_status "disabled"
#define DT_N_S_soc_S_dmac_4100a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dmac_4100a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dmac_4100a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dmac_4100a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dmac_4100a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dmac_4100a000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmac_4100a000, status, 0)
#define DT_N_S_soc_S_dmac_4100a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmac_4100a000, status, 0)
#define DT_N_S_soc_S_dmac_4100a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmac_4100a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_4100a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmac_4100a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_4100a000_P_status_LEN 1
#define DT_N_S_soc_S_dmac_4100a000_P_status_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_compatible {"atmel,sam0-dmac"}
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_IDX_0 "atmel,sam0-dmac"
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-dmac
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_dmac
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_DMAC
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmac_4100a000, compatible, 0)
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dmac_4100a000, compatible, 0)
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmac_4100a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dmac_4100a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_LEN 1
#define DT_N_S_soc_S_dmac_4100a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dmac_4100a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_wakeup_source 0
#define DT_N_S_soc_S_dmac_4100a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dmac_4100a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dmac_4100a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/eic@40002800
 *
 * Node identifier: DT_N_S_soc_S_eic_40002800
 *
 * Binding (compatible = atmel,sam0-eic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/atmel,sam0-eic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_eic_40002800_PATH "/soc/eic@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_eic_40002800_FULL_NAME "eic@40002800"
#define DT_N_S_soc_S_eic_40002800_FULL_NAME_UNQUOTED eic@40002800
#define DT_N_S_soc_S_eic_40002800_FULL_NAME_TOKEN eic_40002800
#define DT_N_S_soc_S_eic_40002800_FULL_NAME_UPPER_TOKEN EIC_40002800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_eic_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_eic_40002800_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_eic_40002800_NODELABEL_NUM 1
#define DT_N_S_soc_S_eic_40002800_FOREACH_NODELABEL(fn) fn(eic)
#define DT_N_S_soc_S_eic_40002800_FOREACH_NODELABEL_VARGS(fn, ...) fn(eic, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40002800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_eic_40002800_CHILD_NUM 0
#define DT_N_S_soc_S_eic_40002800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_eic_40002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_eic_40002800_HASH xzPNmiUrGHJjXsrZm0moVx11KsYFkZF8V4K5IsOQiP8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_eic_40002800_ORD 28
#define DT_N_S_soc_S_eic_40002800_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_eic_40002800_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_eic_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_eic_40002800_EXISTS 1
#define DT_N_INST_0_atmel_sam0_eic DT_N_S_soc_S_eic_40002800
#define DT_N_NODELABEL_eic         DT_N_S_soc_S_eic_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_eic_40002800_REG_NUM 1
#define DT_N_S_soc_S_eic_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_eic_40002800_REG_IDX_0_VAL_SIZE 56 /* 0x38 */
#define DT_N_S_soc_S_eic_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_eic_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_eic_40002800_IRQ_NUM 16
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_VAL_irq 13
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_VAL_irq 14
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_VAL_irq 15
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_VAL_irq 16
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_VAL_irq 17
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_VAL_irq 18
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_VAL_irq 19
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_VAL_irq 20
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_8_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_VAL_irq 21
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_9_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_VAL_irq 22
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_10_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_VAL_irq 23
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_11_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_VAL_irq 24
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_12_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_VAL_irq 25
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_13_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_VAL_irq 26
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_14_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_VAL_irq 27
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_VAL_priority 0
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_IRQ_IDX_15_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eic_40002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_eic_40002800_COMPAT_MATCHES_atmel_sam0_eic 1
#define DT_N_S_soc_S_eic_40002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_eic_40002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_COMPAT_MODEL_IDX_0 "sam0-eic"
#define DT_N_S_soc_S_eic_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_eic_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_eic_40002800_P_reg {1073752064 /* 0x40002800 */, 56 /* 0x38 */}
#define DT_N_S_soc_S_eic_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_eic_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_reg_IDX_1 56
#define DT_N_S_soc_S_eic_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts {12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 18 /* 0x12 */, 0 /* 0x0 */, 19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_2 13
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_4 14
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_6 15
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_8 16
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_10 17
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_12 18
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_14 19
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_16 20
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_17 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_18 21
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_20 22
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_21 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_22 23
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_23 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_24 24
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_26 25
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_27 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_28 26
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_29 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_30_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_30 27
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_31_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_interrupts_IDX_31 0
#define DT_N_S_soc_S_eic_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_compatible {"atmel,sam0-eic"}
#define DT_N_S_soc_S_eic_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_compatible_IDX_0 "atmel,sam0-eic"
#define DT_N_S_soc_S_eic_40002800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-eic
#define DT_N_S_soc_S_eic_40002800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_eic
#define DT_N_S_soc_S_eic_40002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_EIC
#define DT_N_S_soc_S_eic_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eic_40002800, compatible, 0)
#define DT_N_S_soc_S_eic_40002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eic_40002800, compatible, 0)
#define DT_N_S_soc_S_eic_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eic_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eic_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eic_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_eic_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_eic_40002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_eic_40002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_eic_40002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_eic_40002800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/mdio_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_mdio_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_PATH "/soc/pinctrl@41008000/mdio_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FULL_NAME "mdio_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FULL_NAME_UNQUOTED mdio_default
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FULL_NAME_TOKEN mdio_default
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FULL_NAME_UPPER_TOKEN MDIO_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_NODELABEL(fn) fn(mdio_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(mdio_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_HASH R4RchxEOAqcLIa6w1_y_3be0Fqmeq7VrY0VkCoCdCuQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_ORD 29
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_SUPPORTS_ORDS \
	30, /* /soc/mdio@42000800 */ \
	75, /* /soc/pinctrl@41008000/mdio_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_EXISTS 1
#define DT_N_NODELABEL_mdio_default DT_N_S_soc_S_pinctrl_41008000_S_mdio_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/mdio@42000800
 *
 * Node identifier: DT_N_S_soc_S_mdio_42000800
 *
 * Binding (compatible = atmel,sam-mdio):
 *   $ZEPHYR_BASE/dts/bindings/mdio/atmel,sam-mdio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mdio_42000800_PATH "/soc/mdio@42000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mdio_42000800_FULL_NAME "mdio@42000800"
#define DT_N_S_soc_S_mdio_42000800_FULL_NAME_UNQUOTED mdio@42000800
#define DT_N_S_soc_S_mdio_42000800_FULL_NAME_TOKEN mdio_42000800
#define DT_N_S_soc_S_mdio_42000800_FULL_NAME_UPPER_TOKEN MDIO_42000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mdio_42000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mdio_42000800_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mdio_42000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_mdio_42000800_FOREACH_NODELABEL(fn) fn(mdio)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(mdio, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mdio_42000800_CHILD_NUM 1
#define DT_N_S_soc_S_mdio_42000800_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_mdio_42000800_HASH 10Vu9hvbUgQ4g7VMQBaVuKp1P_vHbVEWf6t5ZKq_0Rg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mdio_42000800_ORD 30
#define DT_N_S_soc_S_mdio_42000800_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mdio_42000800_REQUIRES_ORDS \
	3, /* /soc */ \
	29, /* /soc/pinctrl@41008000/mdio_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mdio_42000800_SUPPORTS_ORDS \
	31, /* /soc/mdio@42000800/ethernet-phy@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mdio_42000800_EXISTS 1
#define DT_N_INST_0_atmel_sam_mdio DT_N_S_soc_S_mdio_42000800
#define DT_N_NODELABEL_mdio        DT_N_S_soc_S_mdio_42000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mdio_42000800_REG_NUM 1
#define DT_N_S_soc_S_mdio_42000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_REG_IDX_0_VAL_ADDRESS 1107298304 /* 0x42000800 */
#define DT_N_S_soc_S_mdio_42000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_mdio_42000800_RANGES_NUM 0
#define DT_N_S_soc_S_mdio_42000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mdio_42000800_IRQ_NUM 0
#define DT_N_S_soc_S_mdio_42000800_IRQ_LEVEL 0
#define DT_N_S_soc_S_mdio_42000800_COMPAT_MATCHES_atmel_sam_mdio 1
#define DT_N_S_soc_S_mdio_42000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_mdio_42000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_COMPAT_MODEL_IDX_0 "sam-mdio"
#define DT_N_S_soc_S_mdio_42000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_NUM 1
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_mdio_42000800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_mdio_default

/* Generic property macros: */
#define DT_N_S_soc_S_mdio_42000800_P_suppress_preamble 0
#define DT_N_S_soc_S_mdio_42000800_P_suppress_preamble_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_clock_frequency 2500000
#define DT_N_S_soc_S_mdio_42000800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_status "okay"
#define DT_N_S_soc_S_mdio_42000800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mdio_42000800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mdio_42000800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mdio_42000800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mdio_42000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mdio_42000800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800, status, 0)
#define DT_N_S_soc_S_mdio_42000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800, status, 0)
#define DT_N_S_soc_S_mdio_42000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_status_LEN 1
#define DT_N_S_soc_S_mdio_42000800_P_status_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_compatible {"atmel,sam-mdio"}
#define DT_N_S_soc_S_mdio_42000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_compatible_IDX_0 "atmel,sam-mdio"
#define DT_N_S_soc_S_mdio_42000800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam-mdio
#define DT_N_S_soc_S_mdio_42000800_P_compatible_IDX_0_STRING_TOKEN atmel_sam_mdio
#define DT_N_S_soc_S_mdio_42000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM_MDIO
#define DT_N_S_soc_S_mdio_42000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800, compatible, 0)
#define DT_N_S_soc_S_mdio_42000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800, compatible, 0)
#define DT_N_S_soc_S_mdio_42000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_compatible_LEN 1
#define DT_N_S_soc_S_mdio_42000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_reg {1107298304 /* 0x42000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_mdio_42000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_reg_IDX_0 1107298304
#define DT_N_S_soc_S_mdio_42000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_mdio_42000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mdio_42000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_wakeup_source 0
#define DT_N_S_soc_S_mdio_42000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mdio_42000800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_mdio_default
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_mdio_default
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_0, 0)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_0, 0)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_names, 0)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_names, 0)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_mdio_42000800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/mdio@42000800/ethernet-phy@0
 *
 * Node identifier: DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0
 *
 * Binding (compatible = ethernet-phy):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/phy/ethernet-phy.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_PATH "/soc/mdio@42000800/ethernet-phy@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FULL_NAME "ethernet-phy@0"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FULL_NAME_UNQUOTED ethernet-phy@0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FULL_NAME_TOKEN ethernet_phy_0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FULL_NAME_UPPER_TOKEN ETHERNET_PHY_0

/* Node parent (/soc/mdio@42000800) identifier: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_PARENT DT_N_S_soc_S_mdio_42000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_NODELABEL(fn) fn(phy)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(phy, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_mdio_42000800) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_CHILD_NUM 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_HASH _HOC75qgfpFONmoHa9fWRFyfYE4dwCw6zlklvnp7Dlc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_ORD 31
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_REQUIRES_ORDS \
	30, /* /soc/mdio@42000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_SUPPORTS_ORDS \
	36, /* /soc/ethernet@42000800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_EXISTS 1
#define DT_N_INST_0_ethernet_phy DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0
#define DT_N_NODELABEL_phy       DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0

/* Bus info (controller: '/soc/mdio@42000800', type: '['mdio']') */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_BUS_mdio 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_BUS DT_N_S_soc_S_mdio_42000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_REG_NUM 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_RANGES_NUM 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_IRQ_NUM 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_COMPAT_MATCHES_ethernet_phy 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_no_reset 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_no_reset_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds {"10BASE Half-Duplex", "10BASE Full-Duplex", "100BASE Half-Duplex", "100BASE Full-Duplex", "1000BASE Half-Duplex", "1000BASE Full-Duplex"}
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1_ENUM_IDX 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2_ENUM_IDX 2
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3_ENUM_IDX 3
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4_ENUM_IDX 4
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5_ENUM_IDX 5
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0_ENUM_VAL_10base_half_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_ENUM_VAL_10base_half_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1_ENUM_VAL_10base_full_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_ENUM_VAL_10base_full_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2_ENUM_VAL_100base_half_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_ENUM_VAL_100base_half_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3_ENUM_VAL_100base_full_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_ENUM_VAL_100base_full_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4_ENUM_VAL_1000base_half_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_ENUM_VAL_1000base_half_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5_ENUM_VAL_1000base_full_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_ENUM_VAL_1000base_full_duplex_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0 "10BASE Half-Duplex"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0_STRING_UNQUOTED 10BASE Half-Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0_STRING_TOKEN 10BASE_Half_Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_0_STRING_UPPER_TOKEN 10BASE_HALF_DUPLEX
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1 "10BASE Full-Duplex"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1_STRING_UNQUOTED 10BASE Full-Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1_STRING_TOKEN 10BASE_Full_Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_1_STRING_UPPER_TOKEN 10BASE_FULL_DUPLEX
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2 "100BASE Half-Duplex"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2_STRING_UNQUOTED 100BASE Half-Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2_STRING_TOKEN 100BASE_Half_Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_2_STRING_UPPER_TOKEN 100BASE_HALF_DUPLEX
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3 "100BASE Full-Duplex"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3_STRING_UNQUOTED 100BASE Full-Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3_STRING_TOKEN 100BASE_Full_Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_3_STRING_UPPER_TOKEN 100BASE_FULL_DUPLEX
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4 "1000BASE Half-Duplex"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4_STRING_UNQUOTED 1000BASE Half-Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4_STRING_TOKEN 1000BASE_Half_Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_4_STRING_UPPER_TOKEN 1000BASE_HALF_DUPLEX
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5 "1000BASE Full-Duplex"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5_STRING_UNQUOTED 1000BASE Full-Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5_STRING_TOKEN 1000BASE_Full_Duplex
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_IDX_5_STRING_UPPER_TOKEN 1000BASE_FULL_DUPLEX
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 0) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 1) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 2) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 3) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 4) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 5)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 5)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 5, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, default_speeds, 5, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_LEN 6
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_default_speeds_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status "okay"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, status, 0)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, status, 0)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_LEN 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_status_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible {"ethernet-phy"}
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_IDX_0 "ethernet-phy"
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_IDX_0_STRING_UNQUOTED ethernet-phy
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_IDX_0_STRING_TOKEN ethernet_phy
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ETHERNET_PHY
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, compatible, 0)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, compatible, 0)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_LEN 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_wakeup_source 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/gmac_rmii
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_PATH "/soc/pinctrl@41008000/gmac_rmii"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FULL_NAME "gmac_rmii"
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FULL_NAME_UNQUOTED gmac_rmii
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FULL_NAME_TOKEN gmac_rmii
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FULL_NAME_UPPER_TOKEN GMAC_RMII

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_NODELABEL(fn) fn(gmac_rmii)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_NODELABEL_VARGS(fn, ...) fn(gmac_rmii, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_HASH 7G_WhwiZj1VIW2qHDMwHWD7mG0MMGPzwo6Nh4PzRH9o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_ORD 32
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_SUPPORTS_ORDS \
	36, /* /soc/ethernet@42000800 */ \
	74, /* /soc/pinctrl@41008000/gmac_rmii/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_EXISTS 1
#define DT_N_NODELABEL_gmac_rmii DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom3_i2c_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_PATH "/soc/pinctrl@41008000/sercom3_i2c_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FULL_NAME "sercom3_i2c_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FULL_NAME_UNQUOTED sercom3_i2c_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FULL_NAME_TOKEN sercom3_i2c_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FULL_NAME_UPPER_TOKEN SERCOM3_I2C_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_NODELABEL(fn) fn(sercom3_i2c_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom3_i2c_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_HASH XqXdfPLqn645A2jxrpoitPiu9w9oEjPqlNtB_QgeUs0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_ORD 33
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_SUPPORTS_ORDS \
	34, /* /soc/sercom@41014000 */ \
	78, /* /soc/pinctrl@41008000/sercom3_i2c_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_EXISTS 1
#define DT_N_NODELABEL_sercom3_i2c_default DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@41014000
 *
 * Node identifier: DT_N_S_soc_S_sercom_41014000
 *
 * Binding (compatible = atmel,sam0-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/atmel,sam0-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_41014000_PATH "/soc/sercom@41014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_41014000_FULL_NAME "sercom@41014000"
#define DT_N_S_soc_S_sercom_41014000_FULL_NAME_UNQUOTED sercom@41014000
#define DT_N_S_soc_S_sercom_41014000_FULL_NAME_TOKEN sercom_41014000
#define DT_N_S_soc_S_sercom_41014000_FULL_NAME_UPPER_TOKEN SERCOM_41014000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_41014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_41014000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_41014000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_41014000_FOREACH_NODELABEL(fn) fn(sercom3)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom3, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_41014000_CHILD_NUM 2
#define DT_N_S_soc_S_sercom_41014000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_sercom_41014000_HASH _6tpYGMS_FE0RsjHlHDOqeSMeLk2Asuk7ay0hET1IzM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_41014000_ORD 34
#define DT_N_S_soc_S_sercom_41014000_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_41014000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	33, /* /soc/pinctrl@41008000/sercom3_i2c_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_41014000_SUPPORTS_ORDS \
	35, /* /soc/sercom@41014000/eeprom@5e */ \
	82, /* /soc/sercom@41014000/at30tse75x@4F */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_41014000_EXISTS 1
#define DT_N_ALIAS_sercom_3        DT_N_S_soc_S_sercom_41014000
#define DT_N_ALIAS_i2c_0           DT_N_S_soc_S_sercom_41014000
#define DT_N_INST_0_atmel_sam0_i2c DT_N_S_soc_S_sercom_41014000
#define DT_N_NODELABEL_sercom3     DT_N_S_soc_S_sercom_41014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_41014000_REG_NUM 1
#define DT_N_S_soc_S_sercom_41014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_REG_IDX_0_VAL_ADDRESS 1090600960 /* 0x41014000 */
#define DT_N_S_soc_S_sercom_41014000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_41014000_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_41014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_41014000_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_VAL_irq 58
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_VAL_irq 59
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_VAL_irq 60
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_VAL_irq 61
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41014000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_41014000_COMPAT_MATCHES_atmel_sam0_i2c 1
#define DT_N_S_soc_S_sercom_41014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_41014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_COMPAT_MODEL_IDX_0 "sam0-i2c"
#define DT_N_S_soc_S_sercom_41014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_41014000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_41014000_P_reg {1090600960 /* 0x41014000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_41014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_reg_IDX_0 1090600960
#define DT_N_S_soc_S_sercom_41014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_41014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts {58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 61 /* 0x3d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_0 58
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_2 59
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_4 60
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_6 61
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_41014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_0_VAL_id 24
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_VAL_offset 24
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_VAL_bit 10
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_41014000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_41014000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_41014000, clocks, 1)
#define DT_N_S_soc_S_sercom_41014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41014000, clocks, 1)
#define DT_N_S_soc_S_sercom_41014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_41014000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41014000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_41014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_41014000, clock_names, 1)
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41014000, clock_names, 1)
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_41014000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41014000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_41014000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_41014000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_clock_frequency 400000
#define DT_N_S_soc_S_sercom_41014000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_sq_size 4
#define DT_N_S_soc_S_sercom_41014000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_cq_size 4
#define DT_N_S_soc_S_sercom_41014000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_status "okay"
#define DT_N_S_soc_S_sercom_41014000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sercom_41014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_41014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_41014000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sercom_41014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_41014000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, status, 0)
#define DT_N_S_soc_S_sercom_41014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, status, 0)
#define DT_N_S_soc_S_sercom_41014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_status_LEN 1
#define DT_N_S_soc_S_sercom_41014000_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_compatible {"atmel,sam0-i2c"}
#define DT_N_S_soc_S_sercom_41014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_compatible_IDX_0 "atmel,sam0-i2c"
#define DT_N_S_soc_S_sercom_41014000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-i2c
#define DT_N_S_soc_S_sercom_41014000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_i2c
#define DT_N_S_soc_S_sercom_41014000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_I2C
#define DT_N_S_soc_S_sercom_41014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, compatible, 0)
#define DT_N_S_soc_S_sercom_41014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, compatible, 0)
#define DT_N_S_soc_S_sercom_41014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_41014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_41014000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_41014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_41014000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_41014000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/sercom@41014000/eeprom@5e
 *
 * Node identifier: DT_N_S_soc_S_sercom_41014000_S_eeprom_5e
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_PATH "/soc/sercom@41014000/eeprom@5e"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FULL_NAME "eeprom@5e"
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FULL_NAME_UNQUOTED eeprom@5e
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FULL_NAME_TOKEN eeprom_5e
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FULL_NAME_UPPER_TOKEN EEPROM_5E

/* Node parent (/soc/sercom@41014000) identifier: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_PARENT DT_N_S_soc_S_sercom_41014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_NODELABEL(fn) fn(eeprom)
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_NODELABEL_VARGS(fn, ...) fn(eeprom, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sercom_41014000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_HASH ReqOt0IQ9h1sDdQa9xpn88JM8Hjg4Ju7swh6zPkMNvE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_ORD 35
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_REQUIRES_ORDS \
	34, /* /soc/sercom@41014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_SUPPORTS_ORDS \
	36, /* /soc/ethernet@42000800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_EXISTS 1
#define DT_N_INST_0_atmel_24mac402 DT_N_S_soc_S_sercom_41014000_S_eeprom_5e
#define DT_N_NODELABEL_eeprom      DT_N_S_soc_S_sercom_41014000_S_eeprom_5e

/* Bus info (controller: '/soc/sercom@41014000', type: '['i2c']') */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_BUS_i2c 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_BUS DT_N_S_soc_S_sercom_41014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_REG_NUM 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_REG_IDX_0_VAL_ADDRESS 94 /* 0x5e */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_IRQ_NUM 0
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_IRQ_LEVEL 0
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_COMPAT_MATCHES_atmel_24mac402 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_COMPAT_MODEL_IDX_0 "24mac402"
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible {"atmel,24mac402"}
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_IDX_0 "atmel,24mac402"
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_IDX_0_STRING_UNQUOTED atmel,24mac402
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_IDX_0_STRING_TOKEN atmel_24mac402
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_24MAC402
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, compatible, 0)
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, compatible, 0)
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_reg {94 /* 0x5e */}
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_reg_IDX_0 94
#define DT_N_S_soc_S_sercom_41014000_S_eeprom_5e_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/ethernet@42000800
 *
 * Node identifier: DT_N_S_soc_S_ethernet_42000800
 *
 * Binding (compatible = atmel,sam0-gmac):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/atmel,sam0-gmac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_42000800_PATH "/soc/ethernet@42000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_42000800_FULL_NAME "ethernet@42000800"
#define DT_N_S_soc_S_ethernet_42000800_FULL_NAME_UNQUOTED ethernet@42000800
#define DT_N_S_soc_S_ethernet_42000800_FULL_NAME_TOKEN ethernet_42000800
#define DT_N_S_soc_S_ethernet_42000800_FULL_NAME_UPPER_TOKEN ETHERNET_42000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ethernet_42000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_42000800_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ethernet_42000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_NODELABEL(fn) fn(gmac)
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gmac, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ethernet_42000800_CHILD_NUM 0
#define DT_N_S_soc_S_ethernet_42000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ethernet_42000800_HASH aFMyqVLLbEKhykB_Hrs00r4DH_9lVqA9E5CszJMkDrk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_42000800_ORD 36
#define DT_N_S_soc_S_ethernet_42000800_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_42000800_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	31, /* /soc/mdio@42000800/ethernet-phy@0 */ \
	32, /* /soc/pinctrl@41008000/gmac_rmii */ \
	35, /* /soc/sercom@41014000/eeprom@5e */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_42000800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_42000800_EXISTS 1
#define DT_N_INST_0_atmel_sam0_gmac DT_N_S_soc_S_ethernet_42000800
#define DT_N_NODELABEL_gmac         DT_N_S_soc_S_ethernet_42000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_42000800_REG_NUM 1
#define DT_N_S_soc_S_ethernet_42000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_REG_IDX_0_VAL_ADDRESS 1107298304 /* 0x42000800 */
#define DT_N_S_soc_S_ethernet_42000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_ethernet_42000800_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_42000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_42000800_IRQ_NUM 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ethernet_42000800_IRQ_LEVEL 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_NAME_gmac_VAL_irq DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_ethernet_42000800_IRQ_NAME_gmac_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_NAME_gmac_VAL_priority DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_ethernet_42000800_IRQ_NAME_gmac_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_IRQ_NAME_gmac_CONTROLLER DT_N_S_soc_S_ethernet_42000800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_ethernet_42000800_COMPAT_MATCHES_atmel_sam0_gmac 1
#define DT_N_S_soc_S_ethernet_42000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_ethernet_42000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_COMPAT_MODEL_IDX_0 "sam0-gmac"
#define DT_N_S_soc_S_ethernet_42000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_NUM 1
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ethernet_42000800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_42000800_P_reg {1107298304 /* 0x42000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_ethernet_42000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_reg_IDX_0 1107298304
#define DT_N_S_soc_S_ethernet_42000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_ethernet_42000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_IDX_0 DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_IDX_0_PH DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, phy_handle, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, phy_handle, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, phy_handle, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, phy_handle, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_handle_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_num_queues 1
#define DT_N_S_soc_S_ethernet_42000800_P_num_queues_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_max_frame_size 1518
#define DT_N_S_soc_S_ethernet_42000800_P_max_frame_size_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_max_speed 100
#define DT_N_S_soc_S_ethernet_42000800_P_max_speed_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom DT_N_S_soc_S_sercom_41014000_S_eeprom_5e
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_IDX_0 DT_N_S_soc_S_sercom_41014000_S_eeprom_5e
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_IDX_0_PH DT_N_S_soc_S_sercom_41014000_S_eeprom_5e
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, mac_eeprom, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, mac_eeprom, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, mac_eeprom, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, mac_eeprom, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_mac_eeprom_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type "rmii"
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_STRING_UNQUOTED rmii
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_STRING_TOKEN rmii
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_STRING_UPPER_TOKEN RMII
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_IDX_0 "rmii"
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_IDX_0_ENUM_VAL_rmii_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_ENUM_VAL_rmii_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, phy_connection_type, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, phy_connection_type, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, phy_connection_type, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, phy_connection_type, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_phy_connection_type_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address {0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_0 0
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_1 0
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_2 0
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_3 0
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_4_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_4 0
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_5_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_IDX_5 0
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 0) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 1) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 2) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 3) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 4) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 5)
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 5)
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 5, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_42000800, local_mac_address, 5, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_LEN 6
#define DT_N_S_soc_S_ethernet_42000800_P_local_mac_address_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_zephyr_random_mac_address 0
#define DT_N_S_soc_S_ethernet_42000800_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_status "okay"
#define DT_N_S_soc_S_ethernet_42000800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ethernet_42000800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ethernet_42000800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_42000800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ethernet_42000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_42000800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, status, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, status, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_status_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_compatible {"atmel,sam0-gmac"}
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_IDX_0 "atmel,sam0-gmac"
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-gmac
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gmac
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GMAC
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, compatible, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, compatible, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_interrupts {84 /* 0x54 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_42000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_ethernet_42000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ethernet_42000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names {"gmac"}
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_IDX_0 "gmac"
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_IDX_0_STRING_UNQUOTED gmac
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_IDX_0_STRING_TOKEN gmac
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GMAC
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, interrupt_names, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, interrupt_names, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ethernet_42000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_42000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ethernet_42000800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_0, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_0, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_42000800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_ethernet_42000800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_20000000_HASH 5mk6hI_a0RgTbSaRk0MwzSvPe_XVqQpqtmpmf4tdmFg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 37
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@47000000
 *
 * Node identifier: DT_N_S_soc_S_memory_47000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_47000000_PATH "/soc/memory@47000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_47000000_FULL_NAME "memory@47000000"
#define DT_N_S_soc_S_memory_47000000_FULL_NAME_UNQUOTED memory@47000000
#define DT_N_S_soc_S_memory_47000000_FULL_NAME_TOKEN memory_47000000
#define DT_N_S_soc_S_memory_47000000_FULL_NAME_UPPER_TOKEN MEMORY_47000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_47000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_47000000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_47000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_47000000_FOREACH_NODELABEL(fn) fn(backup0)
#define DT_N_S_soc_S_memory_47000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(backup0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_47000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_47000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_47000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_47000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_47000000_HASH vzsvnrxT5nYCp_p2NN0pMQaJiwl6_BKpk1wtKl2j2a0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_47000000_ORD 38
#define DT_N_S_soc_S_memory_47000000_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_47000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_47000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_47000000_EXISTS 1
#define DT_N_INST_1_mmio_sram  DT_N_S_soc_S_memory_47000000
#define DT_N_NODELABEL_backup0 DT_N_S_soc_S_memory_47000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_47000000_REG_NUM 1
#define DT_N_S_soc_S_memory_47000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_REG_IDX_0_VAL_ADDRESS 1191182336 /* 0x47000000 */
#define DT_N_S_soc_S_memory_47000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_memory_47000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_47000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_47000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_47000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_47000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_47000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_47000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_47000000_P_reg {1191182336 /* 0x47000000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_memory_47000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_reg_IDX_0 1191182336
#define DT_N_S_soc_S_memory_47000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_memory_47000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_47000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_47000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_47000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_47000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_47000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_47000000, compatible, 0)
#define DT_N_S_soc_S_memory_47000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_47000000, compatible, 0)
#define DT_N_S_soc_S_memory_47000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_47000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_47000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_47000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_47000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_47000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_47000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_47000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_47000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_47000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@41008000
 *
 * Node identifier: DT_N_S_soc_S_pinmux_41008000
 *
 * Binding (compatible = atmel,sam0-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_41008000_PATH "/soc/pinmux@41008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_41008000_FULL_NAME "pinmux@41008000"
#define DT_N_S_soc_S_pinmux_41008000_FULL_NAME_UNQUOTED pinmux@41008000
#define DT_N_S_soc_S_pinmux_41008000_FULL_NAME_TOKEN pinmux_41008000
#define DT_N_S_soc_S_pinmux_41008000_FULL_NAME_UPPER_TOKEN PINMUX_41008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_41008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_41008000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_41008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_NODELABEL(fn) fn(pinmux_a)
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_a, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_41008000_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_41008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_41008000_HASH 9t2iADf6htrUfoj0LWVdRS0bOvOQDd34TGjtJem_0L0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_41008000_ORD 39
#define DT_N_S_soc_S_pinmux_41008000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_41008000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_41008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_41008000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_pinmux DT_N_S_soc_S_pinmux_41008000
#define DT_N_NODELABEL_pinmux_a       DT_N_S_soc_S_pinmux_41008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_41008000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_41008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_REG_IDX_0_VAL_ADDRESS 1090551808 /* 0x41008000 */
#define DT_N_S_soc_S_pinmux_41008000_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinmux_41008000_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_41008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_41008000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_41008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_41008000_COMPAT_MATCHES_atmel_sam0_pinmux 1
#define DT_N_S_soc_S_pinmux_41008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinmux_41008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_COMPAT_MODEL_IDX_0 "sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_41008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_41008000_P_reg {1090551808 /* 0x41008000 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinmux_41008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_reg_IDX_0 1090551808
#define DT_N_S_soc_S_pinmux_41008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinmux_41008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_compatible {"atmel,sam0-pinmux"}
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_IDX_0 "atmel,sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-pinmux
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinmux
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINMUX
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41008000, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41008000, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_41008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_41008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_41008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_41008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@41008080
 *
 * Node identifier: DT_N_S_soc_S_pinmux_41008080
 *
 * Binding (compatible = atmel,sam0-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_41008080_PATH "/soc/pinmux@41008080"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_41008080_FULL_NAME "pinmux@41008080"
#define DT_N_S_soc_S_pinmux_41008080_FULL_NAME_UNQUOTED pinmux@41008080
#define DT_N_S_soc_S_pinmux_41008080_FULL_NAME_TOKEN pinmux_41008080
#define DT_N_S_soc_S_pinmux_41008080_FULL_NAME_UPPER_TOKEN PINMUX_41008080

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_41008080_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_41008080_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_41008080_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_NODELABEL(fn) fn(pinmux_b)
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_b, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_41008080_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_41008080_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_41008080_HASH WMV6vgH7CnskPBhcKT6RkQWm3jHofPNHrG6_7FCTJxA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_41008080_ORD 40
#define DT_N_S_soc_S_pinmux_41008080_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_41008080_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_41008080_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_41008080_EXISTS 1
#define DT_N_INST_1_atmel_sam0_pinmux DT_N_S_soc_S_pinmux_41008080
#define DT_N_NODELABEL_pinmux_b       DT_N_S_soc_S_pinmux_41008080

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_41008080_REG_NUM 1
#define DT_N_S_soc_S_pinmux_41008080_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_REG_IDX_0_VAL_ADDRESS 1090551936 /* 0x41008080 */
#define DT_N_S_soc_S_pinmux_41008080_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinmux_41008080_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_41008080_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_41008080_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_41008080_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_41008080_COMPAT_MATCHES_atmel_sam0_pinmux 1
#define DT_N_S_soc_S_pinmux_41008080_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinmux_41008080_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_COMPAT_MODEL_IDX_0 "sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008080_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_41008080_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_41008080_P_reg {1090551936 /* 0x41008080 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinmux_41008080_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_reg_IDX_0 1090551936
#define DT_N_S_soc_S_pinmux_41008080_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinmux_41008080_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_compatible {"atmel,sam0-pinmux"}
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_IDX_0 "atmel,sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-pinmux
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinmux
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINMUX
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41008080, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41008080, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41008080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41008080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_41008080_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_41008080_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_41008080_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008080_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_41008080_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@41008100
 *
 * Node identifier: DT_N_S_soc_S_pinmux_41008100
 *
 * Binding (compatible = atmel,sam0-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_41008100_PATH "/soc/pinmux@41008100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_41008100_FULL_NAME "pinmux@41008100"
#define DT_N_S_soc_S_pinmux_41008100_FULL_NAME_UNQUOTED pinmux@41008100
#define DT_N_S_soc_S_pinmux_41008100_FULL_NAME_TOKEN pinmux_41008100
#define DT_N_S_soc_S_pinmux_41008100_FULL_NAME_UPPER_TOKEN PINMUX_41008100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_41008100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_41008100_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_41008100_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_NODELABEL(fn) fn(pinmux_c)
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_c, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_41008100_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_41008100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_41008100_HASH CYbo07kBId_iGzReDOF_e1veHV9as0qxv7R4WhKPGTs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_41008100_ORD 41
#define DT_N_S_soc_S_pinmux_41008100_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_41008100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_41008100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_41008100_EXISTS 1
#define DT_N_INST_2_atmel_sam0_pinmux DT_N_S_soc_S_pinmux_41008100
#define DT_N_NODELABEL_pinmux_c       DT_N_S_soc_S_pinmux_41008100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_41008100_REG_NUM 1
#define DT_N_S_soc_S_pinmux_41008100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_REG_IDX_0_VAL_ADDRESS 1090552064 /* 0x41008100 */
#define DT_N_S_soc_S_pinmux_41008100_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinmux_41008100_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_41008100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_41008100_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_41008100_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_41008100_COMPAT_MATCHES_atmel_sam0_pinmux 1
#define DT_N_S_soc_S_pinmux_41008100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinmux_41008100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_COMPAT_MODEL_IDX_0 "sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_41008100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_41008100_P_reg {1090552064 /* 0x41008100 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinmux_41008100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_reg_IDX_0 1090552064
#define DT_N_S_soc_S_pinmux_41008100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinmux_41008100_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_compatible {"atmel,sam0-pinmux"}
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_IDX_0 "atmel,sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-pinmux
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinmux
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINMUX
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41008100, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41008100, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41008100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41008100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_41008100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_41008100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_41008100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_41008100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@41008180
 *
 * Node identifier: DT_N_S_soc_S_pinmux_41008180
 *
 * Binding (compatible = atmel,sam0-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/atmel,sam0-pinmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinmux_41008180_PATH "/soc/pinmux@41008180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinmux_41008180_FULL_NAME "pinmux@41008180"
#define DT_N_S_soc_S_pinmux_41008180_FULL_NAME_UNQUOTED pinmux@41008180
#define DT_N_S_soc_S_pinmux_41008180_FULL_NAME_TOKEN pinmux_41008180
#define DT_N_S_soc_S_pinmux_41008180_FULL_NAME_UPPER_TOKEN PINMUX_41008180

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_41008180_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinmux_41008180_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinmux_41008180_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_NODELABEL(fn) fn(pinmux_d)
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinmux_d, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinmux_41008180_CHILD_NUM 0
#define DT_N_S_soc_S_pinmux_41008180_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinmux_41008180_HASH fAHvOHhZWJ6LRpAXLKcx7QnFOM_gPRTM1CSTxMpSCkg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinmux_41008180_ORD 42
#define DT_N_S_soc_S_pinmux_41008180_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinmux_41008180_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinmux_41008180_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_41008180_EXISTS 1
#define DT_N_INST_3_atmel_sam0_pinmux DT_N_S_soc_S_pinmux_41008180
#define DT_N_NODELABEL_pinmux_d       DT_N_S_soc_S_pinmux_41008180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinmux_41008180_REG_NUM 1
#define DT_N_S_soc_S_pinmux_41008180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_REG_IDX_0_VAL_ADDRESS 1090552192 /* 0x41008180 */
#define DT_N_S_soc_S_pinmux_41008180_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinmux_41008180_RANGES_NUM 0
#define DT_N_S_soc_S_pinmux_41008180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinmux_41008180_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_41008180_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinmux_41008180_COMPAT_MATCHES_atmel_sam0_pinmux 1
#define DT_N_S_soc_S_pinmux_41008180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinmux_41008180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_COMPAT_MODEL_IDX_0 "sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008180_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinmux_41008180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_41008180_P_reg {1090552192 /* 0x41008180 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinmux_41008180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_reg_IDX_0 1090552192
#define DT_N_S_soc_S_pinmux_41008180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinmux_41008180_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_compatible {"atmel,sam0-pinmux"}
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_IDX_0 "atmel,sam0-pinmux"
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-pinmux
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_pinmux
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_PINMUX
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinmux_41008180, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinmux_41008180, compatible, 0)
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinmux_41008180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinmux_41008180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_41008180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinmux_41008180_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_wakeup_source 0
#define DT_N_S_soc_S_pinmux_41008180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinmux_41008180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinmux_41008180_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/random@42002800
 *
 * Node identifier: DT_N_S_soc_S_random_42002800
 *
 * Binding (compatible = atmel,sam-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/atmel,sam-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_42002800_PATH "/soc/random@42002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_42002800_FULL_NAME "random@42002800"
#define DT_N_S_soc_S_random_42002800_FULL_NAME_UNQUOTED random@42002800
#define DT_N_S_soc_S_random_42002800_FULL_NAME_TOKEN random_42002800
#define DT_N_S_soc_S_random_42002800_FULL_NAME_UPPER_TOKEN RANDOM_42002800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_42002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_42002800_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_random_42002800_NODELABEL_NUM 1
#define DT_N_S_soc_S_random_42002800_FOREACH_NODELABEL(fn) fn(trng)
#define DT_N_S_soc_S_random_42002800_FOREACH_NODELABEL_VARGS(fn, ...) fn(trng, __VA_ARGS__)
#define DT_N_S_soc_S_random_42002800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_42002800_CHILD_NUM 0
#define DT_N_S_soc_S_random_42002800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_42002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_random_42002800_HASH lv1uyhRYuhdp9FdUCt_Rkiq9NNUmvCGeKheh7ImES_E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_42002800_ORD 43
#define DT_N_S_soc_S_random_42002800_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_42002800_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_42002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_42002800_EXISTS 1
#define DT_N_INST_0_atmel_sam_trng DT_N_S_soc_S_random_42002800
#define DT_N_NODELABEL_trng        DT_N_S_soc_S_random_42002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_42002800_REG_NUM 1
#define DT_N_S_soc_S_random_42002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_REG_IDX_0_VAL_ADDRESS 1107306496 /* 0x42002800 */
#define DT_N_S_soc_S_random_42002800_REG_IDX_0_VAL_SIZE 30 /* 0x1e */
#define DT_N_S_soc_S_random_42002800_RANGES_NUM 0
#define DT_N_S_soc_S_random_42002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_42002800_IRQ_NUM 1
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_VAL_irq 131
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_42002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_random_42002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_random_42002800_COMPAT_MATCHES_atmel_sam_trng 1
#define DT_N_S_soc_S_random_42002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_random_42002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_COMPAT_MODEL_IDX_0 "sam-trng"
#define DT_N_S_soc_S_random_42002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_42002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_42002800_P_reg {1107306496 /* 0x42002800 */, 30 /* 0x1e */}
#define DT_N_S_soc_S_random_42002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_reg_IDX_0 1107306496
#define DT_N_S_soc_S_random_42002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_reg_IDX_1 30
#define DT_N_S_soc_S_random_42002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_interrupts {131 /* 0x83 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_random_42002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_interrupts_IDX_0 131
#define DT_N_S_soc_S_random_42002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_random_42002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_compatible {"atmel,sam-trng"}
#define DT_N_S_soc_S_random_42002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_compatible_IDX_0 "atmel,sam-trng"
#define DT_N_S_soc_S_random_42002800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam-trng
#define DT_N_S_soc_S_random_42002800_P_compatible_IDX_0_STRING_TOKEN atmel_sam_trng
#define DT_N_S_soc_S_random_42002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM_TRNG
#define DT_N_S_soc_S_random_42002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_42002800, compatible, 0)
#define DT_N_S_soc_S_random_42002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_42002800, compatible, 0)
#define DT_N_S_soc_S_random_42002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_42002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_42002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_42002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_42002800_P_compatible_LEN 1
#define DT_N_S_soc_S_random_42002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_random_42002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_wakeup_source 0
#define DT_N_S_soc_S_random_42002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_random_42002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_random_42002800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/osc32kctrl@40001400
 *
 * Node identifier: DT_N_S_soc_S_osc32kctrl_40001400
 *
 * Binding (compatible = atmel,sam0-osc32kctrl):
 *   $ZEPHYR_BASE/dts/bindings/clock/atmel,sam0-osc32kctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_osc32kctrl_40001400_PATH "/soc/osc32kctrl@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_osc32kctrl_40001400_FULL_NAME "osc32kctrl@40001400"
#define DT_N_S_soc_S_osc32kctrl_40001400_FULL_NAME_UNQUOTED osc32kctrl@40001400
#define DT_N_S_soc_S_osc32kctrl_40001400_FULL_NAME_TOKEN osc32kctrl_40001400
#define DT_N_S_soc_S_osc32kctrl_40001400_FULL_NAME_UPPER_TOKEN OSC32KCTRL_40001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_osc32kctrl_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_osc32kctrl_40001400_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_osc32kctrl_40001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_NODELABEL(fn) fn(osc32kctrl)
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(osc32kctrl, __VA_ARGS__)
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_osc32kctrl_40001400_CHILD_NUM 0
#define DT_N_S_soc_S_osc32kctrl_40001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_osc32kctrl_40001400_HASH Ma6toYMY6a_Stp9wxY8JF7n44fMQ80ZtnVvhpNuWeF8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_osc32kctrl_40001400_ORD 44
#define DT_N_S_soc_S_osc32kctrl_40001400_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_osc32kctrl_40001400_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_osc32kctrl_40001400_SUPPORTS_ORDS \
	45, /* /soc/rtc@40002400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_osc32kctrl_40001400_EXISTS 1
#define DT_N_INST_0_atmel_sam0_osc32kctrl DT_N_S_soc_S_osc32kctrl_40001400
#define DT_N_NODELABEL_osc32kctrl         DT_N_S_soc_S_osc32kctrl_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_osc32kctrl_40001400_REG_NUM 1
#define DT_N_S_soc_S_osc32kctrl_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_osc32kctrl_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_osc32kctrl_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_osc32kctrl_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_osc32kctrl_40001400_IRQ_NUM 0
#define DT_N_S_soc_S_osc32kctrl_40001400_IRQ_LEVEL 0
#define DT_N_S_soc_S_osc32kctrl_40001400_COMPAT_MATCHES_atmel_sam0_osc32kctrl 1
#define DT_N_S_soc_S_osc32kctrl_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_osc32kctrl_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_COMPAT_MODEL_IDX_0 "sam0-osc32kctrl"
#define DT_N_S_soc_S_osc32kctrl_40001400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_osc32kctrl_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_osc32kctrl_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_osc32kctrl_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_osc32kctrl_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_osc32kctrl_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible {"atmel,sam0-osc32kctrl"}
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_IDX_0 "atmel,sam0-osc32kctrl"
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-osc32kctrl
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_osc32kctrl
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_OSC32KCTRL
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_osc32kctrl_40001400, compatible, 0)
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_osc32kctrl_40001400, compatible, 0)
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_osc32kctrl_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_osc32kctrl_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_osc32kctrl_40001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_osc32kctrl_40001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_osc32kctrl_40001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_osc32kctrl_40001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002400
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002400
 *
 * Binding (compatible = atmel,sam0-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/atmel,sam0-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002400_PATH "/soc/rtc@40002400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002400_FULL_NAME "rtc@40002400"
#define DT_N_S_soc_S_rtc_40002400_FULL_NAME_UNQUOTED rtc@40002400
#define DT_N_S_soc_S_rtc_40002400_FULL_NAME_TOKEN rtc_40002400
#define DT_N_S_soc_S_rtc_40002400_FULL_NAME_UPPER_TOKEN RTC_40002400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002400_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_40002400_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_40002400_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_40002400_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002400_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_40002400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_40002400_HASH GE4XRfkpWFDng6UqoGuCfORG5ycEC72U_C8WFBSgTos

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002400_ORD 45
#define DT_N_S_soc_S_rtc_40002400_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002400_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	44, /* /soc/osc32kctrl@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002400_EXISTS 1
#define DT_N_ALIAS_rtc             DT_N_S_soc_S_rtc_40002400
#define DT_N_INST_0_atmel_sam0_rtc DT_N_S_soc_S_rtc_40002400
#define DT_N_NODELABEL_rtc         DT_N_S_soc_S_rtc_40002400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002400_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_REG_IDX_0_VAL_ADDRESS 1073751040 /* 0x40002400 */
#define DT_N_S_soc_S_rtc_40002400_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_rtc_40002400_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002400_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_40002400_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_40002400_COMPAT_MATCHES_atmel_sam0_rtc 1
#define DT_N_S_soc_S_rtc_40002400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_rtc_40002400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_COMPAT_MODEL_IDX_0 "sam0-rtc"
#define DT_N_S_soc_S_rtc_40002400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002400_P_reg {1073751040 /* 0x40002400 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_rtc_40002400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_reg_IDX_0 1073751040
#define DT_N_S_soc_S_rtc_40002400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_reg_IDX_1 64
#define DT_N_S_soc_S_rtc_40002400_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_0_PH DT_N_S_soc_S_osc32kctrl_40001400
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_0_NAME "OSC32KCTRL"
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_osc32kctrl_PH DT_N_S_soc_S_osc32kctrl_40001400
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_osc32kctrl_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_VAL_offset 20
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_VAL_bit 9
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_rtc_40002400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_rtc_40002400_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, clocks, 0) \
	fn(DT_N_S_soc_S_rtc_40002400, clocks, 1)
#define DT_N_S_soc_S_rtc_40002400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002400, clocks, 1)
#define DT_N_S_soc_S_rtc_40002400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_clocks_LEN 2
#define DT_N_S_soc_S_rtc_40002400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clock_names {"OSC32KCTRL", "MCLK"}
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_0 "OSC32KCTRL"
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_0_STRING_UNQUOTED OSC32KCTRL
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_0_STRING_TOKEN OSC32KCTRL
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_0_STRING_UPPER_TOKEN OSC32KCTRL
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, clock_names, 0) \
	fn(DT_N_S_soc_S_rtc_40002400, clock_names, 1)
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002400, clock_names, 1)
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_LEN 2
#define DT_N_S_soc_S_rtc_40002400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_osc32kctrl_40001400
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_IDX_0_VAL_src 4
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_IDX_0_VAL_src_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_IDX_0_NAME "OSC32KCTRL"
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_NAME_osc32kctrl_PH DT_N_S_soc_S_osc32kctrl_40001400
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_NAME_osc32kctrl_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_NAME_osc32kctrl_VAL_src DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_IDX_0_VAL_src
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_NAME_osc32kctrl_VAL_src_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names {"OSC32KCTRL"}
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_IDX_0 "OSC32KCTRL"
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED OSC32KCTRL
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN OSC32KCTRL
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN OSC32KCTRL
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_rtc_40002400_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_systimer 0
#define DT_N_S_soc_S_rtc_40002400_P_systimer_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_cal_constant 1048576
#define DT_N_S_soc_S_rtc_40002400_P_cal_constant_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode "clock"
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_STRING_UNQUOTED clock
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_STRING_TOKEN clock
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_STRING_UPPER_TOKEN CLOCK
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_IDX_0 "clock"
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_IDX_0_ENUM_VAL_clock_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_ENUM_VAL_clock_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, counter_mode, 0)
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, counter_mode, 0)
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, counter_mode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, counter_mode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_LEN 1
#define DT_N_S_soc_S_rtc_40002400_P_counter_mode_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_prescaler 1024
#define DT_N_S_soc_S_rtc_40002400_P_prescaler_IDX_0_ENUM_IDX 10
#define DT_N_S_soc_S_rtc_40002400_P_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_prescaler_IDX_0_ENUM_VAL_1024_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_prescaler_ENUM_VAL_1024_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_event_control_msk 0
#define DT_N_S_soc_S_rtc_40002400_P_event_control_msk_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_alarms_count 2
#define DT_N_S_soc_S_rtc_40002400_P_alarms_count_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_status "okay"
#define DT_N_S_soc_S_rtc_40002400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_40002400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_40002400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, status, 0)
#define DT_N_S_soc_S_rtc_40002400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, status, 0)
#define DT_N_S_soc_S_rtc_40002400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002400_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_compatible {"atmel,sam0-rtc"}
#define DT_N_S_soc_S_rtc_40002400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_compatible_IDX_0 "atmel,sam0-rtc"
#define DT_N_S_soc_S_rtc_40002400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-rtc
#define DT_N_S_soc_S_rtc_40002400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_rtc
#define DT_N_S_soc_S_rtc_40002400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_RTC
#define DT_N_S_soc_S_rtc_40002400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002400, compatible, 0)
#define DT_N_S_soc_S_rtc_40002400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002400, compatible, 0)
#define DT_N_S_soc_S_rtc_40002400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002400_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_rtc_40002400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sercom@40003000
 *
 * Node identifier: DT_N_S_soc_S_sercom_40003000
 *
 * Binding (compatible = atmel,sam0-sercom):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-sercom.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_40003000_PATH "/soc/sercom@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_40003000_FULL_NAME "sercom@40003000"
#define DT_N_S_soc_S_sercom_40003000_FULL_NAME_UNQUOTED sercom@40003000
#define DT_N_S_soc_S_sercom_40003000_FULL_NAME_TOKEN sercom_40003000
#define DT_N_S_soc_S_sercom_40003000_FULL_NAME_UPPER_TOKEN SERCOM_40003000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_40003000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_40003000_FOREACH_NODELABEL(fn) fn(sercom0)
#define DT_N_S_soc_S_sercom_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_40003000_HASH iDaSmnw9q0s4gLSfT7ocxWDNyehqSCbCvQtmfGh2clU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_40003000_ORD 46
#define DT_N_S_soc_S_sercom_40003000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_40003000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_40003000_EXISTS 1
#define DT_N_ALIAS_sercom_0           DT_N_S_soc_S_sercom_40003000
#define DT_N_INST_0_atmel_sam0_sercom DT_N_S_soc_S_sercom_40003000
#define DT_N_NODELABEL_sercom0        DT_N_S_soc_S_sercom_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_40003000_REG_NUM 1
#define DT_N_S_soc_S_sercom_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_sercom_40003000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_40003000_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_VAL_irq 47
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_VAL_irq 48
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_VAL_irq 49
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_40003000_COMPAT_MATCHES_atmel_sam0_sercom 1
#define DT_N_S_soc_S_sercom_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_COMPAT_MODEL_IDX_0 "sam0-sercom"
#define DT_N_S_soc_S_sercom_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_40003000_P_reg {1073754112 /* 0x40003000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_sercom_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */, 48 /* 0x30 */, 0 /* 0x0 */, 49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_2 47
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_4 48
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_6 49
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_0_VAL_id 7
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_VAL_offset 20
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_VAL_bit 12
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_40003000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_40003000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003000, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_40003000, clocks, 1)
#define DT_N_S_soc_S_sercom_40003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003000, clocks, 1)
#define DT_N_S_soc_S_sercom_40003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_40003000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_40003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_status "disabled"
#define DT_N_S_soc_S_sercom_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sercom_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sercom_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sercom_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sercom_40003000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003000, status, 0)
#define DT_N_S_soc_S_sercom_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003000, status, 0)
#define DT_N_S_soc_S_sercom_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_status_LEN 1
#define DT_N_S_soc_S_sercom_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_compatible {"atmel,sam0-sercom"}
#define DT_N_S_soc_S_sercom_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_compatible_IDX_0 "atmel,sam0-sercom"
#define DT_N_S_soc_S_sercom_40003000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-sercom
#define DT_N_S_soc_S_sercom_40003000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_sercom
#define DT_N_S_soc_S_sercom_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SERCOM
#define DT_N_S_soc_S_sercom_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003000, compatible, 0)
#define DT_N_S_soc_S_sercom_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003000, compatible, 0)
#define DT_N_S_soc_S_sercom_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003000, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_40003000, clock_names, 1)
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003000, clock_names, 1)
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_40003000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_40003000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_40003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_40003000_P_atmel_assigned_clock_names_EXISTS 1

/*
 * Devicetree node: /soc/sercom@40003400
 *
 * Node identifier: DT_N_S_soc_S_sercom_40003400
 *
 * Binding (compatible = atmel,sam0-sercom):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-sercom.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_40003400_PATH "/soc/sercom@40003400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_40003400_FULL_NAME "sercom@40003400"
#define DT_N_S_soc_S_sercom_40003400_FULL_NAME_UNQUOTED sercom@40003400
#define DT_N_S_soc_S_sercom_40003400_FULL_NAME_TOKEN sercom_40003400
#define DT_N_S_soc_S_sercom_40003400_FULL_NAME_UPPER_TOKEN SERCOM_40003400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_40003400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_40003400_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_40003400_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_40003400_FOREACH_NODELABEL(fn) fn(sercom1)
#define DT_N_S_soc_S_sercom_40003400_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_40003400_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_40003400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_40003400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_40003400_HASH 5ndd_FAD3HF0FVtBVaVPno7_HPeNctS7tcX6_8_p_3U

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_40003400_ORD 47
#define DT_N_S_soc_S_sercom_40003400_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_40003400_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_40003400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_40003400_EXISTS 1
#define DT_N_ALIAS_sercom_1           DT_N_S_soc_S_sercom_40003400
#define DT_N_INST_1_atmel_sam0_sercom DT_N_S_soc_S_sercom_40003400
#define DT_N_NODELABEL_sercom1        DT_N_S_soc_S_sercom_40003400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_40003400_REG_NUM 1
#define DT_N_S_soc_S_sercom_40003400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_REG_IDX_0_VAL_ADDRESS 1073755136 /* 0x40003400 */
#define DT_N_S_soc_S_sercom_40003400_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_40003400_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_40003400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_40003400_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_VAL_irq 51
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_VAL_irq 52
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_VAL_irq 53
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_40003400_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_40003400_COMPAT_MATCHES_atmel_sam0_sercom 1
#define DT_N_S_soc_S_sercom_40003400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_40003400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_COMPAT_MODEL_IDX_0 "sam0-sercom"
#define DT_N_S_soc_S_sercom_40003400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_40003400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_40003400_P_reg {1073755136 /* 0x40003400 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_40003400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_reg_IDX_0 1073755136
#define DT_N_S_soc_S_sercom_40003400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_40003400_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */, 51 /* 0x33 */, 0 /* 0x0 */, 52 /* 0x34 */, 0 /* 0x0 */, 53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_2 51
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_4 52
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_6 53
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_40003400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_0_VAL_id 8
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_VAL_offset 20
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_VAL_bit 13
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_40003400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_40003400_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003400, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_40003400, clocks, 1)
#define DT_N_S_soc_S_sercom_40003400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003400, clocks, 1)
#define DT_N_S_soc_S_sercom_40003400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_40003400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_40003400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_status "disabled"
#define DT_N_S_soc_S_sercom_40003400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sercom_40003400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sercom_40003400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_40003400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sercom_40003400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sercom_40003400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003400, status, 0)
#define DT_N_S_soc_S_sercom_40003400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003400, status, 0)
#define DT_N_S_soc_S_sercom_40003400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_status_LEN 1
#define DT_N_S_soc_S_sercom_40003400_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_compatible {"atmel,sam0-sercom"}
#define DT_N_S_soc_S_sercom_40003400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_compatible_IDX_0 "atmel,sam0-sercom"
#define DT_N_S_soc_S_sercom_40003400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-sercom
#define DT_N_S_soc_S_sercom_40003400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_sercom
#define DT_N_S_soc_S_sercom_40003400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SERCOM
#define DT_N_S_soc_S_sercom_40003400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003400, compatible, 0)
#define DT_N_S_soc_S_sercom_40003400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003400, compatible, 0)
#define DT_N_S_soc_S_sercom_40003400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_40003400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003400, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_40003400, clock_names, 1)
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003400, clock_names, 1)
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_40003400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_40003400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_40003400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_40003400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_40003400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_40003400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_40003400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_40003400_P_atmel_assigned_clock_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom2_uart_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_PATH "/soc/pinctrl@41008000/sercom2_uart_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FULL_NAME "sercom2_uart_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FULL_NAME_UNQUOTED sercom2_uart_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FULL_NAME_TOKEN sercom2_uart_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FULL_NAME_UPPER_TOKEN SERCOM2_UART_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_NODELABEL(fn) fn(sercom2_uart_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom2_uart_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_HASH zTgZGb0nacKjxhE_plljZVoufqOyQxsOLj5ModuMB5Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_ORD 48
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_SUPPORTS_ORDS \
	49, /* /soc/sercom@41012000 */ \
	77, /* /soc/pinctrl@41008000/sercom2_uart_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_EXISTS 1
#define DT_N_NODELABEL_sercom2_uart_default DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@41012000
 *
 * Node identifier: DT_N_S_soc_S_sercom_41012000
 *
 * Binding (compatible = atmel,sam0-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/atmel,sam0-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_41012000_PATH "/soc/sercom@41012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_41012000_FULL_NAME "sercom@41012000"
#define DT_N_S_soc_S_sercom_41012000_FULL_NAME_UNQUOTED sercom@41012000
#define DT_N_S_soc_S_sercom_41012000_FULL_NAME_TOKEN sercom_41012000
#define DT_N_S_soc_S_sercom_41012000_FULL_NAME_UPPER_TOKEN SERCOM_41012000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_41012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_41012000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_41012000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_41012000_FOREACH_NODELABEL(fn) fn(sercom2)
#define DT_N_S_soc_S_sercom_41012000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom2, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_41012000_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_41012000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_41012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_41012000_HASH z_6Lm8VWSjUfwuyR2Gz0sedQ6iZ3NrY39k_We1rOCBw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_41012000_ORD 49
#define DT_N_S_soc_S_sercom_41012000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_41012000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	48, /* /soc/pinctrl@41008000/sercom2_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_41012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_41012000_EXISTS 1
#define DT_N_ALIAS_sercom_2         DT_N_S_soc_S_sercom_41012000
#define DT_N_INST_0_atmel_sam0_uart DT_N_S_soc_S_sercom_41012000
#define DT_N_NODELABEL_sercom2      DT_N_S_soc_S_sercom_41012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_41012000_REG_NUM 1
#define DT_N_S_soc_S_sercom_41012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_REG_IDX_0_VAL_ADDRESS 1090592768 /* 0x41012000 */
#define DT_N_S_soc_S_sercom_41012000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_41012000_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_41012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_41012000_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_VAL_irq 55
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_VAL_irq 56
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_VAL_irq 57
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_41012000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_41012000_COMPAT_MATCHES_atmel_sam0_uart 1
#define DT_N_S_soc_S_sercom_41012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_41012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_COMPAT_MODEL_IDX_0 "sam0-uart"
#define DT_N_S_soc_S_sercom_41012000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_41012000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_41012000_P_reg {1090592768 /* 0x41012000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_41012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_reg_IDX_0 1090592768
#define DT_N_S_soc_S_sercom_41012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_41012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */, 55 /* 0x37 */, 0 /* 0x0 */, 56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_2 55
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_4 56
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_6 57
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_41012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_0_VAL_id 23
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_VAL_offset 24
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_VAL_bit 9
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_41012000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_41012000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_41012000, clocks, 1)
#define DT_N_S_soc_S_sercom_41012000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41012000, clocks, 1)
#define DT_N_S_soc_S_sercom_41012000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_41012000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41012000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_41012000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_41012000, clock_names, 1)
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41012000, clock_names, 1)
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_41012000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_41012000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_41012000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_rxpo 1
#define DT_N_S_soc_S_sercom_41012000_P_rxpo_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_txpo 0
#define DT_N_S_soc_S_sercom_41012000_P_txpo_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_collision_detection 0
#define DT_N_S_soc_S_sercom_41012000_P_collision_detection_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_current_speed 115200
#define DT_N_S_soc_S_sercom_41012000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_hw_flow_control 0
#define DT_N_S_soc_S_sercom_41012000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_parity "none"
#define DT_N_S_soc_S_sercom_41012000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_sercom_41012000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_sercom_41012000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_sercom_41012000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_sercom_41012000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_sercom_41012000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, parity, 0)
#define DT_N_S_soc_S_sercom_41012000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, parity, 0)
#define DT_N_S_soc_S_sercom_41012000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_parity_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_parity_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_status "okay"
#define DT_N_S_soc_S_sercom_41012000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sercom_41012000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_41012000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_41012000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sercom_41012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_41012000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, status, 0)
#define DT_N_S_soc_S_sercom_41012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, status, 0)
#define DT_N_S_soc_S_sercom_41012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_status_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_compatible {"atmel,sam0-uart"}
#define DT_N_S_soc_S_sercom_41012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_compatible_IDX_0 "atmel,sam0-uart"
#define DT_N_S_soc_S_sercom_41012000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-uart
#define DT_N_S_soc_S_sercom_41012000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_uart
#define DT_N_S_soc_S_sercom_41012000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_UART
#define DT_N_S_soc_S_sercom_41012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, compatible, 0)
#define DT_N_S_soc_S_sercom_41012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, compatible, 0)
#define DT_N_S_soc_S_sercom_41012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_41012000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_41012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_41012000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41012000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_41012000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom4_spi_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_PATH "/soc/pinctrl@41008000/sercom4_spi_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FULL_NAME "sercom4_spi_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FULL_NAME_UNQUOTED sercom4_spi_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FULL_NAME_TOKEN sercom4_spi_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FULL_NAME_UPPER_TOKEN SERCOM4_SPI_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_NODELABEL(fn) fn(sercom4_spi_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom4_spi_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_HASH tAlAXsB3B63pQBzc0iuup2mOK8_BINyxmi7EnbvGbl4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_ORD 50
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_SUPPORTS_ORDS \
	51, /* /soc/sercom@43000000 */ \
	79, /* /soc/pinctrl@41008000/sercom4_spi_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_EXISTS 1
#define DT_N_NODELABEL_sercom4_spi_default DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@43000000
 *
 * Node identifier: DT_N_S_soc_S_sercom_43000000
 *
 * Binding (compatible = atmel,sam0-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/atmel,sam0-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_43000000_PATH "/soc/sercom@43000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_43000000_FULL_NAME "sercom@43000000"
#define DT_N_S_soc_S_sercom_43000000_FULL_NAME_UNQUOTED sercom@43000000
#define DT_N_S_soc_S_sercom_43000000_FULL_NAME_TOKEN sercom_43000000
#define DT_N_S_soc_S_sercom_43000000_FULL_NAME_UPPER_TOKEN SERCOM_43000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_43000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_43000000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_43000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_43000000_FOREACH_NODELABEL(fn) fn(sercom4)
#define DT_N_S_soc_S_sercom_43000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom4, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_43000000_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_43000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_43000000_HASH 2XyPRSk6TCA9YqbYp0YmxJnM_F_QIsFCosAGeTHNKXw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_43000000_ORD 51
#define DT_N_S_soc_S_sercom_43000000_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_43000000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	50, /* /soc/pinctrl@41008000/sercom4_spi_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_43000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_43000000_EXISTS 1
#define DT_N_ALIAS_sercom_4        DT_N_S_soc_S_sercom_43000000
#define DT_N_INST_0_atmel_sam0_spi DT_N_S_soc_S_sercom_43000000
#define DT_N_NODELABEL_sercom4     DT_N_S_soc_S_sercom_43000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_43000000_REG_NUM 1
#define DT_N_S_soc_S_sercom_43000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_REG_IDX_0_VAL_ADDRESS 1124073472 /* 0x43000000 */
#define DT_N_S_soc_S_sercom_43000000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_43000000_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_43000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_43000000_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_VAL_irq 62
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_VAL_irq 63
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_VAL_irq 64
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_VAL_irq 65
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_43000000_COMPAT_MATCHES_atmel_sam0_spi 1
#define DT_N_S_soc_S_sercom_43000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_43000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_COMPAT_MODEL_IDX_0 "sam0-spi"
#define DT_N_S_soc_S_sercom_43000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_43000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_43000000_P_reg {1124073472 /* 0x43000000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_43000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_reg_IDX_0 1124073472
#define DT_N_S_soc_S_sercom_43000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_43000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_0_VAL_id 34
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_VAL_bit 0
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_43000000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_43000000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_43000000, clocks, 1)
#define DT_N_S_soc_S_sercom_43000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000000, clocks, 1)
#define DT_N_S_soc_S_sercom_43000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_43000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_43000000, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000000, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_43000000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_43000000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_dipo 3
#define DT_N_S_soc_S_sercom_43000000_P_dipo_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_dopo 0
#define DT_N_S_soc_S_sercom_43000000_P_dopo_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_status "okay"
#define DT_N_S_soc_S_sercom_43000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sercom_43000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sercom_43000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sercom_43000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sercom_43000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sercom_43000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, status, 0)
#define DT_N_S_soc_S_sercom_43000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, status, 0)
#define DT_N_S_soc_S_sercom_43000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_status_LEN 1
#define DT_N_S_soc_S_sercom_43000000_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_compatible {"atmel,sam0-spi"}
#define DT_N_S_soc_S_sercom_43000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_compatible_IDX_0 "atmel,sam0-spi"
#define DT_N_S_soc_S_sercom_43000000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-spi
#define DT_N_S_soc_S_sercom_43000000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_spi
#define DT_N_S_soc_S_sercom_43000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SPI
#define DT_N_S_soc_S_sercom_43000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, compatible, 0)
#define DT_N_S_soc_S_sercom_43000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, compatible, 0)
#define DT_N_S_soc_S_sercom_43000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_43000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts {62 /* 0x3e */, 0 /* 0x0 */, 63 /* 0x3f */, 0 /* 0x0 */, 64 /* 0x40 */, 0 /* 0x0 */, 65 /* 0x41 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_0 62
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_2 63
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_4 64
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_6 65
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_43000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_43000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_43000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_43000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_43000000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/sercom@43000400
 *
 * Node identifier: DT_N_S_soc_S_sercom_43000400
 *
 * Binding (compatible = atmel,sam0-sercom):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-sercom.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_43000400_PATH "/soc/sercom@43000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_43000400_FULL_NAME "sercom@43000400"
#define DT_N_S_soc_S_sercom_43000400_FULL_NAME_UNQUOTED sercom@43000400
#define DT_N_S_soc_S_sercom_43000400_FULL_NAME_TOKEN sercom_43000400
#define DT_N_S_soc_S_sercom_43000400_FULL_NAME_UPPER_TOKEN SERCOM_43000400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_43000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_43000400_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_43000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_43000400_FOREACH_NODELABEL(fn) fn(sercom5)
#define DT_N_S_soc_S_sercom_43000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom5, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_43000400_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_43000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_43000400_HASH XWG4kDJD0T2cClng_C__xClbSLY_Wldsbww32LVavwM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_43000400_ORD 52
#define DT_N_S_soc_S_sercom_43000400_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_43000400_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_43000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_43000400_EXISTS 1
#define DT_N_ALIAS_sercom_5           DT_N_S_soc_S_sercom_43000400
#define DT_N_INST_2_atmel_sam0_sercom DT_N_S_soc_S_sercom_43000400
#define DT_N_NODELABEL_sercom5        DT_N_S_soc_S_sercom_43000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_43000400_REG_NUM 1
#define DT_N_S_soc_S_sercom_43000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_REG_IDX_0_VAL_ADDRESS 1124074496 /* 0x43000400 */
#define DT_N_S_soc_S_sercom_43000400_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_43000400_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_43000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_43000400_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_VAL_irq 66
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_VAL_irq 67
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_VAL_irq 68
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_VAL_irq 69
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_43000400_COMPAT_MATCHES_atmel_sam0_sercom 1
#define DT_N_S_soc_S_sercom_43000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_43000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_COMPAT_MODEL_IDX_0 "sam0-sercom"
#define DT_N_S_soc_S_sercom_43000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_43000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_43000400_P_reg {1124074496 /* 0x43000400 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_43000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_reg_IDX_0 1124074496
#define DT_N_S_soc_S_sercom_43000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_43000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts {66 /* 0x42 */, 0 /* 0x0 */, 67 /* 0x43 */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_0 66
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_2 67
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_4 68
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_6 69
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_43000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_0_VAL_id 35
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_VAL_bit 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_43000400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_43000400_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000400, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_43000400, clocks, 1)
#define DT_N_S_soc_S_sercom_43000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000400, clocks, 1)
#define DT_N_S_soc_S_sercom_43000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_43000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_status "disabled"
#define DT_N_S_soc_S_sercom_43000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sercom_43000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sercom_43000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_43000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sercom_43000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sercom_43000400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000400, status, 0)
#define DT_N_S_soc_S_sercom_43000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000400, status, 0)
#define DT_N_S_soc_S_sercom_43000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_status_LEN 1
#define DT_N_S_soc_S_sercom_43000400_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_compatible {"atmel,sam0-sercom"}
#define DT_N_S_soc_S_sercom_43000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_compatible_IDX_0 "atmel,sam0-sercom"
#define DT_N_S_soc_S_sercom_43000400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-sercom
#define DT_N_S_soc_S_sercom_43000400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_sercom
#define DT_N_S_soc_S_sercom_43000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SERCOM
#define DT_N_S_soc_S_sercom_43000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000400, compatible, 0)
#define DT_N_S_soc_S_sercom_43000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000400, compatible, 0)
#define DT_N_S_soc_S_sercom_43000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_43000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000400, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_43000400, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000400, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_43000400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_43000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_43000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_43000400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_43000400_P_atmel_assigned_clock_names_EXISTS 1

/*
 * Devicetree node: /soc/sercom@43000800
 *
 * Node identifier: DT_N_S_soc_S_sercom_43000800
 *
 * Binding (compatible = atmel,sam0-sercom):
 *   $ZEPHYR_BASE/dts/bindings/arm/atmel,sam0-sercom.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_43000800_PATH "/soc/sercom@43000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_43000800_FULL_NAME "sercom@43000800"
#define DT_N_S_soc_S_sercom_43000800_FULL_NAME_UNQUOTED sercom@43000800
#define DT_N_S_soc_S_sercom_43000800_FULL_NAME_TOKEN sercom_43000800
#define DT_N_S_soc_S_sercom_43000800_FULL_NAME_UPPER_TOKEN SERCOM_43000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_43000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_43000800_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_43000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_43000800_FOREACH_NODELABEL(fn) fn(sercom6)
#define DT_N_S_soc_S_sercom_43000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom6, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_43000800_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_43000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_43000800_HASH F2wNUCSN3xva6pTRiEYpQlCAGLoZiO8f1HJKRnSBP5I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_43000800_ORD 53
#define DT_N_S_soc_S_sercom_43000800_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_43000800_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_43000800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_43000800_EXISTS 1
#define DT_N_ALIAS_sercom_6           DT_N_S_soc_S_sercom_43000800
#define DT_N_INST_3_atmel_sam0_sercom DT_N_S_soc_S_sercom_43000800
#define DT_N_NODELABEL_sercom6        DT_N_S_soc_S_sercom_43000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_43000800_REG_NUM 1
#define DT_N_S_soc_S_sercom_43000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_REG_IDX_0_VAL_ADDRESS 1124075520 /* 0x43000800 */
#define DT_N_S_soc_S_sercom_43000800_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_43000800_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_43000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_43000800_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_VAL_irq 70
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_VAL_irq 71
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_VAL_irq 72
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_VAL_irq 73
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000800_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_43000800_COMPAT_MATCHES_atmel_sam0_sercom 1
#define DT_N_S_soc_S_sercom_43000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_43000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_COMPAT_MODEL_IDX_0 "sam0-sercom"
#define DT_N_S_soc_S_sercom_43000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_43000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_43000800_P_reg {1124075520 /* 0x43000800 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_43000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_reg_IDX_0 1124075520
#define DT_N_S_soc_S_sercom_43000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_43000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts {70 /* 0x46 */, 0 /* 0x0 */, 71 /* 0x47 */, 0 /* 0x0 */, 72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_0 70
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_2 71
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_4 72
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_6 73
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_43000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_0_VAL_id 36
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_VAL_bit 2
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_43000800_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_43000800_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000800, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_43000800, clocks, 1)
#define DT_N_S_soc_S_sercom_43000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000800, clocks, 1)
#define DT_N_S_soc_S_sercom_43000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_43000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_status "disabled"
#define DT_N_S_soc_S_sercom_43000800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sercom_43000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sercom_43000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_43000800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sercom_43000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sercom_43000800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000800, status, 0)
#define DT_N_S_soc_S_sercom_43000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000800, status, 0)
#define DT_N_S_soc_S_sercom_43000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_status_LEN 1
#define DT_N_S_soc_S_sercom_43000800_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_compatible {"atmel,sam0-sercom"}
#define DT_N_S_soc_S_sercom_43000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_compatible_IDX_0 "atmel,sam0-sercom"
#define DT_N_S_soc_S_sercom_43000800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-sercom
#define DT_N_S_soc_S_sercom_43000800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_sercom
#define DT_N_S_soc_S_sercom_43000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_SERCOM
#define DT_N_S_soc_S_sercom_43000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000800, compatible, 0)
#define DT_N_S_soc_S_sercom_43000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000800, compatible, 0)
#define DT_N_S_soc_S_sercom_43000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_43000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000800, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_43000800, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000800, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000800, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000800, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000800, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_43000800_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_43000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_43000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_43000800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000800, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_43000800_P_atmel_assigned_clock_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom7_i2c_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_PATH "/soc/pinctrl@41008000/sercom7_i2c_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FULL_NAME "sercom7_i2c_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FULL_NAME_UNQUOTED sercom7_i2c_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FULL_NAME_TOKEN sercom7_i2c_default
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FULL_NAME_UPPER_TOKEN SERCOM7_I2C_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_NODELABEL(fn) fn(sercom7_i2c_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom7_i2c_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_HASH GpCOGQJxYOdWuX7lTq2drjJHo7jBevZrPiLuuzz0VTI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_ORD 54
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_SUPPORTS_ORDS \
	55, /* /soc/sercom@43000c00 */ \
	80, /* /soc/pinctrl@41008000/sercom7_i2c_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_EXISTS 1
#define DT_N_NODELABEL_sercom7_i2c_default DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sercom@43000c00
 *
 * Node identifier: DT_N_S_soc_S_sercom_43000c00
 *
 * Binding (compatible = atmel,sam0-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/atmel,sam0-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_43000c00_PATH "/soc/sercom@43000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_43000c00_FULL_NAME "sercom@43000c00"
#define DT_N_S_soc_S_sercom_43000c00_FULL_NAME_UNQUOTED sercom@43000c00
#define DT_N_S_soc_S_sercom_43000c00_FULL_NAME_TOKEN sercom_43000c00
#define DT_N_S_soc_S_sercom_43000c00_FULL_NAME_UPPER_TOKEN SERCOM_43000C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sercom_43000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_43000c00_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_43000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_NODELABEL(fn) fn(sercom7)
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(sercom7, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_43000c00_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_43000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_43000c00_HASH _xanM1ozPUzxRHvh4kPOGKRlJ4_JNkR1xjCxXhAGQig

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_43000c00_ORD 55
#define DT_N_S_soc_S_sercom_43000c00_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_43000c00_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */ \
	54, /* /soc/pinctrl@41008000/sercom7_i2c_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_43000c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_43000c00_EXISTS 1
#define DT_N_ALIAS_sercom_7        DT_N_S_soc_S_sercom_43000c00
#define DT_N_INST_1_atmel_sam0_i2c DT_N_S_soc_S_sercom_43000c00
#define DT_N_NODELABEL_sercom7     DT_N_S_soc_S_sercom_43000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_43000c00_REG_NUM 1
#define DT_N_S_soc_S_sercom_43000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_REG_IDX_0_VAL_ADDRESS 1124076544 /* 0x43000c00 */
#define DT_N_S_soc_S_sercom_43000c00_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_sercom_43000c00_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_43000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_43000c00_IRQ_NUM 4
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_VAL_irq 74
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_VAL_irq 75
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_VAL_irq 76
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_VAL_irq 77
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sercom_43000c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_sercom_43000c00_COMPAT_MATCHES_atmel_sam0_i2c 1
#define DT_N_S_soc_S_sercom_43000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_43000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_COMPAT_MODEL_IDX_0 "sam0-i2c"
#define DT_N_S_soc_S_sercom_43000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sercom_43000c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_43000c00_P_reg {1124076544 /* 0x43000c00 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_sercom_43000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_reg_IDX_0 1124076544
#define DT_N_S_soc_S_sercom_43000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_reg_IDX_1 64
#define DT_N_S_soc_S_sercom_43000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts {74 /* 0x4a */, 0 /* 0x0 */, 75 /* 0x4b */, 0 /* 0x0 */, 76 /* 0x4c */, 0 /* 0x0 */, 77 /* 0x4d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_0 74
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_2 75
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_4 76
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_6 77
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_sercom_43000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_0_VAL_id 37
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_VAL_bit 3
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_sercom_43000c00_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, clocks, 0) \
	fn(DT_N_S_soc_S_sercom_43000c00, clocks, 1)
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000c00, clocks, 1)
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_LEN 2
#define DT_N_S_soc_S_sercom_43000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 0) \
	fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 1)
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sercom_43000c00, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_LEN 2
#define DT_N_S_soc_S_sercom_43000c00_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_sercom_43000c00_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_clock_frequency 400000
#define DT_N_S_soc_S_sercom_43000c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_sq_size 4
#define DT_N_S_soc_S_sercom_43000c00_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_cq_size 4
#define DT_N_S_soc_S_sercom_43000c00_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_status "disabled"
#define DT_N_S_soc_S_sercom_43000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sercom_43000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sercom_43000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sercom_43000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sercom_43000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sercom_43000c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, status, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, status, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_status_LEN 1
#define DT_N_S_soc_S_sercom_43000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_compatible {"atmel,sam0-i2c"}
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_IDX_0 "atmel,sam0-i2c"
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-i2c
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_i2c
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_I2C
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, compatible, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, compatible, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_43000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sercom_43000c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_wakeup_source 0
#define DT_N_S_soc_S_sercom_43000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sercom_43000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_0, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_names, 0)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_43000c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sercom_43000c00_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/tc@40003800
 *
 * Node identifier: DT_N_S_soc_S_tc_40003800
 *
 * Binding (compatible = atmel,sam0-tc32):
 *   $ZEPHYR_BASE/dts/bindings/counter/atmel,sam0-tc32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tc_40003800_PATH "/soc/tc@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tc_40003800_FULL_NAME "tc@40003800"
#define DT_N_S_soc_S_tc_40003800_FULL_NAME_UNQUOTED tc@40003800
#define DT_N_S_soc_S_tc_40003800_FULL_NAME_TOKEN tc_40003800
#define DT_N_S_soc_S_tc_40003800_FULL_NAME_UPPER_TOKEN TC_40003800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tc_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tc_40003800_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tc_40003800_NODELABEL_NUM 1
#define DT_N_S_soc_S_tc_40003800_FOREACH_NODELABEL(fn) fn(tc0)
#define DT_N_S_soc_S_tc_40003800_FOREACH_NODELABEL_VARGS(fn, ...) fn(tc0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tc_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_tc_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tc_40003800_HASH oqlqG3pOxtl5Jgpmb2Er7lLTnUI4B11oY4N1DosBP6w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tc_40003800_ORD 56
#define DT_N_S_soc_S_tc_40003800_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tc_40003800_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tc_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tc_40003800_EXISTS 1
#define DT_N_ALIAS_tc_0             DT_N_S_soc_S_tc_40003800
#define DT_N_INST_0_atmel_sam0_tc32 DT_N_S_soc_S_tc_40003800
#define DT_N_NODELABEL_tc0          DT_N_S_soc_S_tc_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tc_40003800_REG_NUM 1
#define DT_N_S_soc_S_tc_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_tc_40003800_REG_IDX_0_VAL_SIZE 52 /* 0x34 */
#define DT_N_S_soc_S_tc_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_tc_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tc_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_VAL_irq 107
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tc_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_tc_40003800_COMPAT_MATCHES_atmel_sam0_tc32 1
#define DT_N_S_soc_S_tc_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tc_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_COMPAT_MODEL_IDX_0 "sam0-tc32"
#define DT_N_S_soc_S_tc_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tc_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tc_40003800_P_reg {1073756160 /* 0x40003800 */, 52 /* 0x34 */}
#define DT_N_S_soc_S_tc_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_tc_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_reg_IDX_1 52
#define DT_N_S_soc_S_tc_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_interrupts {107 /* 0x6b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tc_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_interrupts_IDX_0 107
#define DT_N_S_soc_S_tc_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tc_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_0_VAL_id 9
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_tc_40003800_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_VAL_offset 20
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_VAL_bit 14
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_tc_40003800_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tc_40003800_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_40003800, clocks, 0) \
	fn(DT_N_S_soc_S_tc_40003800, clocks, 1)
#define DT_N_S_soc_S_tc_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_40003800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_40003800, clocks, 1)
#define DT_N_S_soc_S_tc_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_40003800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_40003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_40003800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_40003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_clocks_LEN 2
#define DT_N_S_soc_S_tc_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_tc_40003800_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_tc_40003800_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_40003800, clock_names, 0) \
	fn(DT_N_S_soc_S_tc_40003800, clock_names, 1)
#define DT_N_S_soc_S_tc_40003800_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_40003800, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_40003800, clock_names, 1)
#define DT_N_S_soc_S_tc_40003800_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_40003800, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_40003800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_40003800, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_40003800, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_clock_names_LEN 2
#define DT_N_S_soc_S_tc_40003800_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_40003800, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_tc_40003800_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_status "disabled"
#define DT_N_S_soc_S_tc_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tc_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tc_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tc_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tc_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tc_40003800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_40003800, status, 0)
#define DT_N_S_soc_S_tc_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_40003800, status, 0)
#define DT_N_S_soc_S_tc_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_status_LEN 1
#define DT_N_S_soc_S_tc_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_compatible {"atmel,sam0-tc32"}
#define DT_N_S_soc_S_tc_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_compatible_IDX_0 "atmel,sam0-tc32"
#define DT_N_S_soc_S_tc_40003800_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tc32
#define DT_N_S_soc_S_tc_40003800_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tc32
#define DT_N_S_soc_S_tc_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TC32
#define DT_N_S_soc_S_tc_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_40003800, compatible, 0)
#define DT_N_S_soc_S_tc_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_40003800, compatible, 0)
#define DT_N_S_soc_S_tc_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_tc_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tc_40003800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_tc_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tc_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tc_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/tc@4101a000
 *
 * Node identifier: DT_N_S_soc_S_tc_4101a000
 *
 * Binding (compatible = atmel,sam0-tc32):
 *   $ZEPHYR_BASE/dts/bindings/counter/atmel,sam0-tc32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tc_4101a000_PATH "/soc/tc@4101a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tc_4101a000_FULL_NAME "tc@4101a000"
#define DT_N_S_soc_S_tc_4101a000_FULL_NAME_UNQUOTED tc@4101a000
#define DT_N_S_soc_S_tc_4101a000_FULL_NAME_TOKEN tc_4101a000
#define DT_N_S_soc_S_tc_4101a000_FULL_NAME_UPPER_TOKEN TC_4101A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tc_4101a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tc_4101a000_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tc_4101a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_tc_4101a000_FOREACH_NODELABEL(fn) fn(tc2)
#define DT_N_S_soc_S_tc_4101a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tc2, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tc_4101a000_CHILD_NUM 0
#define DT_N_S_soc_S_tc_4101a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_4101a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tc_4101a000_HASH ogLH_u6WrgVkPQ62vsVoy3q_dTuqF6LaUAsNXFB_QmQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tc_4101a000_ORD 57
#define DT_N_S_soc_S_tc_4101a000_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tc_4101a000_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tc_4101a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tc_4101a000_EXISTS 1
#define DT_N_ALIAS_tc_2             DT_N_S_soc_S_tc_4101a000
#define DT_N_INST_1_atmel_sam0_tc32 DT_N_S_soc_S_tc_4101a000
#define DT_N_NODELABEL_tc2          DT_N_S_soc_S_tc_4101a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tc_4101a000_REG_NUM 1
#define DT_N_S_soc_S_tc_4101a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_REG_IDX_0_VAL_ADDRESS 1090625536 /* 0x4101a000 */
#define DT_N_S_soc_S_tc_4101a000_REG_IDX_0_VAL_SIZE 52 /* 0x34 */
#define DT_N_S_soc_S_tc_4101a000_RANGES_NUM 0
#define DT_N_S_soc_S_tc_4101a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tc_4101a000_IRQ_NUM 1
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_VAL_irq 109
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tc_4101a000_IRQ_LEVEL 1
#define DT_N_S_soc_S_tc_4101a000_COMPAT_MATCHES_atmel_sam0_tc32 1
#define DT_N_S_soc_S_tc_4101a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tc_4101a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_COMPAT_MODEL_IDX_0 "sam0-tc32"
#define DT_N_S_soc_S_tc_4101a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tc_4101a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tc_4101a000_P_reg {1090625536 /* 0x4101a000 */, 52 /* 0x34 */}
#define DT_N_S_soc_S_tc_4101a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_reg_IDX_0 1090625536
#define DT_N_S_soc_S_tc_4101a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_reg_IDX_1 52
#define DT_N_S_soc_S_tc_4101a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_interrupts {109 /* 0x6d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tc_4101a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_interrupts_IDX_0 109
#define DT_N_S_soc_S_tc_4101a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tc_4101a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_0_VAL_id 26
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_VAL_offset 24
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_VAL_bit 13
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_tc_4101a000_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tc_4101a000_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_4101a000, clocks, 0) \
	fn(DT_N_S_soc_S_tc_4101a000, clocks, 1)
#define DT_N_S_soc_S_tc_4101a000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_4101a000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_4101a000, clocks, 1)
#define DT_N_S_soc_S_tc_4101a000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_4101a000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_4101a000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_4101a000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_4101a000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_clocks_LEN 2
#define DT_N_S_soc_S_tc_4101a000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_4101a000, clock_names, 0) \
	fn(DT_N_S_soc_S_tc_4101a000, clock_names, 1)
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_4101a000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_4101a000, clock_names, 1)
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_4101a000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_4101a000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_4101a000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_4101a000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_LEN 2
#define DT_N_S_soc_S_tc_4101a000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_4101a000, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_tc_4101a000_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_status "disabled"
#define DT_N_S_soc_S_tc_4101a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tc_4101a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tc_4101a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tc_4101a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tc_4101a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tc_4101a000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_4101a000, status, 0)
#define DT_N_S_soc_S_tc_4101a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_4101a000, status, 0)
#define DT_N_S_soc_S_tc_4101a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_4101a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_4101a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_status_LEN 1
#define DT_N_S_soc_S_tc_4101a000_P_status_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_compatible {"atmel,sam0-tc32"}
#define DT_N_S_soc_S_tc_4101a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_compatible_IDX_0 "atmel,sam0-tc32"
#define DT_N_S_soc_S_tc_4101a000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tc32
#define DT_N_S_soc_S_tc_4101a000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tc32
#define DT_N_S_soc_S_tc_4101a000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TC32
#define DT_N_S_soc_S_tc_4101a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_4101a000, compatible, 0)
#define DT_N_S_soc_S_tc_4101a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_4101a000, compatible, 0)
#define DT_N_S_soc_S_tc_4101a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_4101a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_4101a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_4101a000_P_compatible_LEN 1
#define DT_N_S_soc_S_tc_4101a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tc_4101a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_wakeup_source 0
#define DT_N_S_soc_S_tc_4101a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tc_4101a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tc_4101a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/tc@42001400
 *
 * Node identifier: DT_N_S_soc_S_tc_42001400
 *
 * Binding (compatible = atmel,sam0-tc32):
 *   $ZEPHYR_BASE/dts/bindings/counter/atmel,sam0-tc32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tc_42001400_PATH "/soc/tc@42001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tc_42001400_FULL_NAME "tc@42001400"
#define DT_N_S_soc_S_tc_42001400_FULL_NAME_UNQUOTED tc@42001400
#define DT_N_S_soc_S_tc_42001400_FULL_NAME_TOKEN tc_42001400
#define DT_N_S_soc_S_tc_42001400_FULL_NAME_UPPER_TOKEN TC_42001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tc_42001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tc_42001400_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tc_42001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_tc_42001400_FOREACH_NODELABEL(fn) fn(tc4)
#define DT_N_S_soc_S_tc_42001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(tc4, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tc_42001400_CHILD_NUM 0
#define DT_N_S_soc_S_tc_42001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_42001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tc_42001400_HASH sj40EL2YUgkdMNkEVb9xGSoAN48g4t1lcBGtAran0YQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tc_42001400_ORD 58
#define DT_N_S_soc_S_tc_42001400_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tc_42001400_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tc_42001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tc_42001400_EXISTS 1
#define DT_N_ALIAS_tc_4             DT_N_S_soc_S_tc_42001400
#define DT_N_INST_2_atmel_sam0_tc32 DT_N_S_soc_S_tc_42001400
#define DT_N_NODELABEL_tc4          DT_N_S_soc_S_tc_42001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tc_42001400_REG_NUM 1
#define DT_N_S_soc_S_tc_42001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_REG_IDX_0_VAL_ADDRESS 1107301376 /* 0x42001400 */
#define DT_N_S_soc_S_tc_42001400_REG_IDX_0_VAL_SIZE 52 /* 0x34 */
#define DT_N_S_soc_S_tc_42001400_RANGES_NUM 0
#define DT_N_S_soc_S_tc_42001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tc_42001400_IRQ_NUM 1
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_VAL_irq 111
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tc_42001400_IRQ_LEVEL 1
#define DT_N_S_soc_S_tc_42001400_COMPAT_MATCHES_atmel_sam0_tc32 1
#define DT_N_S_soc_S_tc_42001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tc_42001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_COMPAT_MODEL_IDX_0 "sam0-tc32"
#define DT_N_S_soc_S_tc_42001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tc_42001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tc_42001400_P_reg {1107301376 /* 0x42001400 */, 52 /* 0x34 */}
#define DT_N_S_soc_S_tc_42001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_reg_IDX_0 1107301376
#define DT_N_S_soc_S_tc_42001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_reg_IDX_1 52
#define DT_N_S_soc_S_tc_42001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_interrupts {111 /* 0x6f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tc_42001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_interrupts_IDX_0 111
#define DT_N_S_soc_S_tc_42001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tc_42001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_0_VAL_id 30
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_tc_42001400_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_VAL_offset 28
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_VAL_bit 5
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_tc_42001400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tc_42001400_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42001400, clocks, 0) \
	fn(DT_N_S_soc_S_tc_42001400, clocks, 1)
#define DT_N_S_soc_S_tc_42001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42001400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42001400, clocks, 1)
#define DT_N_S_soc_S_tc_42001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42001400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42001400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_clocks_LEN 2
#define DT_N_S_soc_S_tc_42001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_tc_42001400_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_tc_42001400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42001400, clock_names, 0) \
	fn(DT_N_S_soc_S_tc_42001400, clock_names, 1)
#define DT_N_S_soc_S_tc_42001400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42001400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42001400, clock_names, 1)
#define DT_N_S_soc_S_tc_42001400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42001400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_42001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42001400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_42001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_clock_names_LEN 2
#define DT_N_S_soc_S_tc_42001400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42001400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_tc_42001400_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_status "disabled"
#define DT_N_S_soc_S_tc_42001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tc_42001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tc_42001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tc_42001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tc_42001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tc_42001400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42001400, status, 0)
#define DT_N_S_soc_S_tc_42001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42001400, status, 0)
#define DT_N_S_soc_S_tc_42001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_status_LEN 1
#define DT_N_S_soc_S_tc_42001400_P_status_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_compatible {"atmel,sam0-tc32"}
#define DT_N_S_soc_S_tc_42001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_compatible_IDX_0 "atmel,sam0-tc32"
#define DT_N_S_soc_S_tc_42001400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tc32
#define DT_N_S_soc_S_tc_42001400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tc32
#define DT_N_S_soc_S_tc_42001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TC32
#define DT_N_S_soc_S_tc_42001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_42001400, compatible, 0)
#define DT_N_S_soc_S_tc_42001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_42001400, compatible, 0)
#define DT_N_S_soc_S_tc_42001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_42001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_42001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_42001400_P_compatible_LEN 1
#define DT_N_S_soc_S_tc_42001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tc_42001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_wakeup_source 0
#define DT_N_S_soc_S_tc_42001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tc_42001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tc_42001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/tc@43001400
 *
 * Node identifier: DT_N_S_soc_S_tc_43001400
 *
 * Binding (compatible = atmel,sam0-tc32):
 *   $ZEPHYR_BASE/dts/bindings/counter/atmel,sam0-tc32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tc_43001400_PATH "/soc/tc@43001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tc_43001400_FULL_NAME "tc@43001400"
#define DT_N_S_soc_S_tc_43001400_FULL_NAME_UNQUOTED tc@43001400
#define DT_N_S_soc_S_tc_43001400_FULL_NAME_TOKEN tc_43001400
#define DT_N_S_soc_S_tc_43001400_FULL_NAME_UPPER_TOKEN TC_43001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tc_43001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tc_43001400_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tc_43001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_tc_43001400_FOREACH_NODELABEL(fn) fn(tc6)
#define DT_N_S_soc_S_tc_43001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(tc6, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tc_43001400_CHILD_NUM 0
#define DT_N_S_soc_S_tc_43001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tc_43001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tc_43001400_HASH H5ta5QR_WXQszTV7v4nvmge9BCKfbs_g208_yPhfN78

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tc_43001400_ORD 59
#define DT_N_S_soc_S_tc_43001400_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tc_43001400_REQUIRES_ORDS \
	3, /* /soc */ \
	15, /* /soc/gclk@40001c00 */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	17, /* /soc/mclk@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tc_43001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tc_43001400_EXISTS 1
#define DT_N_ALIAS_tc_6             DT_N_S_soc_S_tc_43001400
#define DT_N_INST_3_atmel_sam0_tc32 DT_N_S_soc_S_tc_43001400
#define DT_N_NODELABEL_tc6          DT_N_S_soc_S_tc_43001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tc_43001400_REG_NUM 1
#define DT_N_S_soc_S_tc_43001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_REG_IDX_0_VAL_ADDRESS 1124078592 /* 0x43001400 */
#define DT_N_S_soc_S_tc_43001400_REG_IDX_0_VAL_SIZE 52 /* 0x34 */
#define DT_N_S_soc_S_tc_43001400_RANGES_NUM 0
#define DT_N_S_soc_S_tc_43001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tc_43001400_IRQ_NUM 1
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_VAL_irq 113
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tc_43001400_IRQ_LEVEL 1
#define DT_N_S_soc_S_tc_43001400_COMPAT_MATCHES_atmel_sam0_tc32 1
#define DT_N_S_soc_S_tc_43001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tc_43001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_COMPAT_MODEL_IDX_0 "sam0-tc32"
#define DT_N_S_soc_S_tc_43001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tc_43001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tc_43001400_P_reg {1124078592 /* 0x43001400 */, 52 /* 0x34 */}
#define DT_N_S_soc_S_tc_43001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_reg_IDX_0 1124078592
#define DT_N_S_soc_S_tc_43001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_reg_IDX_1 52
#define DT_N_S_soc_S_tc_43001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_interrupts {113 /* 0x71 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tc_43001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_interrupts_IDX_0 113
#define DT_N_S_soc_S_tc_43001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tc_43001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_0_VAL_id 39
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_gclk_VAL_id DT_N_S_soc_S_tc_43001400_P_clocks_IDX_0_VAL_id
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_gclk_VAL_id_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_VAL_offset 32
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_VAL_bit 5
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_NAME "MCLK"
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_mclk_PH DT_N_S_soc_S_mclk_40000800
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_mclk_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_mclk_VAL_offset DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_mclk_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_mclk_VAL_bit DT_N_S_soc_S_tc_43001400_P_clocks_IDX_1_VAL_bit
#define DT_N_S_soc_S_tc_43001400_P_clocks_NAME_mclk_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_43001400, clocks, 0) \
	fn(DT_N_S_soc_S_tc_43001400, clocks, 1)
#define DT_N_S_soc_S_tc_43001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_43001400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_43001400, clocks, 1)
#define DT_N_S_soc_S_tc_43001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_43001400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_43001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_43001400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_43001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_clocks_LEN 2
#define DT_N_S_soc_S_tc_43001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clock_names {"GCLK", "MCLK"}
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_1 "MCLK"
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_1_STRING_UNQUOTED MCLK
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_1_STRING_TOKEN MCLK
#define DT_N_S_soc_S_tc_43001400_P_clock_names_IDX_1_STRING_UPPER_TOKEN MCLK
#define DT_N_S_soc_S_tc_43001400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_43001400, clock_names, 0) \
	fn(DT_N_S_soc_S_tc_43001400, clock_names, 1)
#define DT_N_S_soc_S_tc_43001400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_43001400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_43001400, clock_names, 1)
#define DT_N_S_soc_S_tc_43001400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_43001400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tc_43001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_43001400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tc_43001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_clock_names_LEN 2
#define DT_N_S_soc_S_tc_43001400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_IDX_0_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_IDX_0_VAL_gen 0
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_IDX_0_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_IDX_0_NAME "GCLK"
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_NAME_gclk_PH DT_N_S_soc_S_gclk_40001c00
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_NAME_gclk_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_IDX_0_VAL_gen
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_NAME_gclk_VAL_gen_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clocks, 0)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_LEN 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clocks_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names {"GCLK"}
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_IDX_0 "GCLK"
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_IDX_0_STRING_UNQUOTED GCLK
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_IDX_0_STRING_TOKEN GCLK
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_IDX_0_STRING_UPPER_TOKEN GCLK
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clock_names, 0)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_43001400, atmel_assigned_clock_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_LEN 1
#define DT_N_S_soc_S_tc_43001400_P_atmel_assigned_clock_names_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_status "disabled"
#define DT_N_S_soc_S_tc_43001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tc_43001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tc_43001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tc_43001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tc_43001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tc_43001400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_43001400, status, 0)
#define DT_N_S_soc_S_tc_43001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_43001400, status, 0)
#define DT_N_S_soc_S_tc_43001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_43001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_43001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_status_LEN 1
#define DT_N_S_soc_S_tc_43001400_P_status_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_compatible {"atmel,sam0-tc32"}
#define DT_N_S_soc_S_tc_43001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_compatible_IDX_0 "atmel,sam0-tc32"
#define DT_N_S_soc_S_tc_43001400_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tc32
#define DT_N_S_soc_S_tc_43001400_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tc32
#define DT_N_S_soc_S_tc_43001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TC32
#define DT_N_S_soc_S_tc_43001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tc_43001400, compatible, 0)
#define DT_N_S_soc_S_tc_43001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tc_43001400, compatible, 0)
#define DT_N_S_soc_S_tc_43001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tc_43001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tc_43001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tc_43001400_P_compatible_LEN 1
#define DT_N_S_soc_S_tc_43001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tc_43001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_wakeup_source 0
#define DT_N_S_soc_S_tc_43001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tc_43001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tc_43001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/tcc@41018000
 *
 * Node identifier: DT_N_S_soc_S_tcc_41018000
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_41018000_PATH "/soc/tcc@41018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_41018000_FULL_NAME "tcc@41018000"
#define DT_N_S_soc_S_tcc_41018000_FULL_NAME_UNQUOTED tcc@41018000
#define DT_N_S_soc_S_tcc_41018000_FULL_NAME_TOKEN tcc_41018000
#define DT_N_S_soc_S_tcc_41018000_FULL_NAME_UPPER_TOKEN TCC_41018000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_41018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_41018000_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tcc_41018000_NODELABEL_NUM 1
#define DT_N_S_soc_S_tcc_41018000_FOREACH_NODELABEL(fn) fn(tcc1)
#define DT_N_S_soc_S_tcc_41018000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tcc1, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41018000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_41018000_CHILD_NUM 0
#define DT_N_S_soc_S_tcc_41018000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_41018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tcc_41018000_HASH OosnPCJRa9xH5_p2VYvCFAzJbI08ht3cvmqi8F15cTo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_41018000_ORD 60
#define DT_N_S_soc_S_tcc_41018000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_41018000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_41018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_41018000_EXISTS 1
#define DT_N_ALIAS_tcc_1           DT_N_S_soc_S_tcc_41018000
#define DT_N_INST_0_atmel_sam0_tcc DT_N_S_soc_S_tcc_41018000
#define DT_N_NODELABEL_tcc1        DT_N_S_soc_S_tcc_41018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_41018000_REG_NUM 1
#define DT_N_S_soc_S_tcc_41018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_REG_IDX_0_VAL_ADDRESS 1090617344 /* 0x41018000 */
#define DT_N_S_soc_S_tcc_41018000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_tcc_41018000_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_41018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_41018000_IRQ_NUM 5
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_VAL_irq 92
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_VAL_irq 93
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_VAL_irq 94
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_VAL_irq 95
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_VAL_irq 96
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_41018000_IRQ_LEVEL 1
#define DT_N_S_soc_S_tcc_41018000_COMPAT_MATCHES_atmel_sam0_tcc 1
#define DT_N_S_soc_S_tcc_41018000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_41018000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_COMPAT_MODEL_IDX_0 "sam0-tcc"
#define DT_N_S_soc_S_tcc_41018000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_41018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_41018000_P_compatible {"atmel,sam0-tcc"}
#define DT_N_S_soc_S_tcc_41018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_compatible_IDX_0 "atmel,sam0-tcc"
#define DT_N_S_soc_S_tcc_41018000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tcc
#define DT_N_S_soc_S_tcc_41018000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc
#define DT_N_S_soc_S_tcc_41018000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC
#define DT_N_S_soc_S_tcc_41018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41018000, compatible, 0)
#define DT_N_S_soc_S_tcc_41018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41018000, compatible, 0)
#define DT_N_S_soc_S_tcc_41018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41018000_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_41018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_reg {1090617344 /* 0x41018000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_tcc_41018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_reg_IDX_0 1090617344
#define DT_N_S_soc_S_tcc_41018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_tcc_41018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts {92 /* 0x5c */, 0 /* 0x0 */, 93 /* 0x5d */, 0 /* 0x0 */, 94 /* 0x5e */, 0 /* 0x0 */, 95 /* 0x5f */, 0 /* 0x0 */, 96 /* 0x60 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_0 92
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_2 93
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_4 94
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_6 95
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_8 96
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_tcc_41018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_status "disabled"
#define DT_N_S_soc_S_tcc_41018000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tcc_41018000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tcc_41018000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tcc_41018000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tcc_41018000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tcc_41018000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_41018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_41018000, status, 0)
#define DT_N_S_soc_S_tcc_41018000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_41018000, status, 0)
#define DT_N_S_soc_S_tcc_41018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_41018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41018000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_41018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_41018000_P_status_LEN 1
#define DT_N_S_soc_S_tcc_41018000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/tcc@42000c00
 *
 * Node identifier: DT_N_S_soc_S_tcc_42000c00
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_42000c00_PATH "/soc/tcc@42000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_42000c00_FULL_NAME "tcc@42000c00"
#define DT_N_S_soc_S_tcc_42000c00_FULL_NAME_UNQUOTED tcc@42000c00
#define DT_N_S_soc_S_tcc_42000c00_FULL_NAME_TOKEN tcc_42000c00
#define DT_N_S_soc_S_tcc_42000c00_FULL_NAME_UPPER_TOKEN TCC_42000C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_42000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_42000c00_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tcc_42000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_NODELABEL(fn) fn(tcc2)
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(tcc2, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_42000c00_CHILD_NUM 0
#define DT_N_S_soc_S_tcc_42000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tcc_42000c00_HASH C20hVhnlXjWuuy3lm2wS2ANO9wmiNYOBplSXpSE8YdQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_42000c00_ORD 61
#define DT_N_S_soc_S_tcc_42000c00_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_42000c00_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_42000c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_42000c00_EXISTS 1
#define DT_N_ALIAS_tcc_2           DT_N_S_soc_S_tcc_42000c00
#define DT_N_INST_1_atmel_sam0_tcc DT_N_S_soc_S_tcc_42000c00
#define DT_N_NODELABEL_tcc2        DT_N_S_soc_S_tcc_42000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_42000c00_REG_NUM 1
#define DT_N_S_soc_S_tcc_42000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_REG_IDX_0_VAL_ADDRESS 1107299328 /* 0x42000c00 */
#define DT_N_S_soc_S_tcc_42000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_tcc_42000c00_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_42000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_42000c00_IRQ_NUM 4
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_VAL_irq 97
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_VAL_irq 98
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_VAL_irq 99
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_VAL_irq 100
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42000c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_tcc_42000c00_COMPAT_MATCHES_atmel_sam0_tcc 1
#define DT_N_S_soc_S_tcc_42000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_42000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_COMPAT_MODEL_IDX_0 "sam0-tcc"
#define DT_N_S_soc_S_tcc_42000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_42000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_42000c00_P_compatible {"atmel,sam0-tcc"}
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_IDX_0 "atmel,sam0-tcc"
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tcc
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42000c00, compatible, 0)
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42000c00, compatible, 0)
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_42000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_reg {1107299328 /* 0x42000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_tcc_42000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_reg_IDX_0 1107299328
#define DT_N_S_soc_S_tcc_42000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_tcc_42000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts {97 /* 0x61 */, 0 /* 0x0 */, 98 /* 0x62 */, 0 /* 0x0 */, 99 /* 0x63 */, 0 /* 0x0 */, 100 /* 0x64 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_0 97
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_2 98
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_4 99
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_6 100
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_tcc_42000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_status "disabled"
#define DT_N_S_soc_S_tcc_42000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tcc_42000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tcc_42000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tcc_42000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tcc_42000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tcc_42000c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_42000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42000c00, status, 0)
#define DT_N_S_soc_S_tcc_42000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42000c00, status, 0)
#define DT_N_S_soc_S_tcc_42000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42000c00_P_status_LEN 1
#define DT_N_S_soc_S_tcc_42000c00_P_status_EXISTS 1

/*
 * Devicetree node: /soc/tcc@42001000
 *
 * Node identifier: DT_N_S_soc_S_tcc_42001000
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_42001000_PATH "/soc/tcc@42001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_42001000_FULL_NAME "tcc@42001000"
#define DT_N_S_soc_S_tcc_42001000_FULL_NAME_UNQUOTED tcc@42001000
#define DT_N_S_soc_S_tcc_42001000_FULL_NAME_TOKEN tcc_42001000
#define DT_N_S_soc_S_tcc_42001000_FULL_NAME_UPPER_TOKEN TCC_42001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_42001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_42001000_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tcc_42001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_tcc_42001000_FOREACH_NODELABEL(fn) fn(tcc3)
#define DT_N_S_soc_S_tcc_42001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tcc3, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_42001000_CHILD_NUM 0
#define DT_N_S_soc_S_tcc_42001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_42001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tcc_42001000_HASH iULY7W3BYDUYPacjLZFij_m8otgNfXngjroFY_XTszs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_42001000_ORD 62
#define DT_N_S_soc_S_tcc_42001000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_42001000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_42001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_42001000_EXISTS 1
#define DT_N_ALIAS_tcc_3           DT_N_S_soc_S_tcc_42001000
#define DT_N_INST_2_atmel_sam0_tcc DT_N_S_soc_S_tcc_42001000
#define DT_N_NODELABEL_tcc3        DT_N_S_soc_S_tcc_42001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_42001000_REG_NUM 1
#define DT_N_S_soc_S_tcc_42001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_REG_IDX_0_VAL_ADDRESS 1107300352 /* 0x42001000 */
#define DT_N_S_soc_S_tcc_42001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_tcc_42001000_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_42001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_42001000_IRQ_NUM 3
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_VAL_irq 101
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_VAL_irq 102
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_VAL_irq 103
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_42001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_tcc_42001000_COMPAT_MATCHES_atmel_sam0_tcc 1
#define DT_N_S_soc_S_tcc_42001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_42001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_COMPAT_MODEL_IDX_0 "sam0-tcc"
#define DT_N_S_soc_S_tcc_42001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_42001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_42001000_P_compatible {"atmel,sam0-tcc"}
#define DT_N_S_soc_S_tcc_42001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_compatible_IDX_0 "atmel,sam0-tcc"
#define DT_N_S_soc_S_tcc_42001000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tcc
#define DT_N_S_soc_S_tcc_42001000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc
#define DT_N_S_soc_S_tcc_42001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC
#define DT_N_S_soc_S_tcc_42001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42001000, compatible, 0)
#define DT_N_S_soc_S_tcc_42001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42001000, compatible, 0)
#define DT_N_S_soc_S_tcc_42001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42001000_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_42001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_reg {1107300352 /* 0x42001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_tcc_42001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_reg_IDX_0 1107300352
#define DT_N_S_soc_S_tcc_42001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_tcc_42001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts {101 /* 0x65 */, 0 /* 0x0 */, 102 /* 0x66 */, 0 /* 0x0 */, 103 /* 0x67 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_0 101
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_2 102
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_4 103
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_tcc_42001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_status "disabled"
#define DT_N_S_soc_S_tcc_42001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tcc_42001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tcc_42001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tcc_42001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tcc_42001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tcc_42001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_42001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_42001000, status, 0)
#define DT_N_S_soc_S_tcc_42001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_42001000, status, 0)
#define DT_N_S_soc_S_tcc_42001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_42001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_42001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_42001000_P_status_LEN 1
#define DT_N_S_soc_S_tcc_42001000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/tcc@43001000
 *
 * Node identifier: DT_N_S_soc_S_tcc_43001000
 */

/* Node's full path: */
#define DT_N_S_soc_S_tcc_43001000_PATH "/soc/tcc@43001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tcc_43001000_FULL_NAME "tcc@43001000"
#define DT_N_S_soc_S_tcc_43001000_FULL_NAME_UNQUOTED tcc@43001000
#define DT_N_S_soc_S_tcc_43001000_FULL_NAME_TOKEN tcc_43001000
#define DT_N_S_soc_S_tcc_43001000_FULL_NAME_UPPER_TOKEN TCC_43001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tcc_43001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tcc_43001000_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tcc_43001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_tcc_43001000_FOREACH_NODELABEL(fn) fn(tcc4)
#define DT_N_S_soc_S_tcc_43001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tcc4, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_43001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tcc_43001000_CHILD_NUM 0
#define DT_N_S_soc_S_tcc_43001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tcc_43001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_tcc_43001000_HASH UAUjIKOd6JNTPH5Mfrcak8qddcHtCghUiteXX12HL7k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tcc_43001000_ORD 63
#define DT_N_S_soc_S_tcc_43001000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tcc_43001000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tcc_43001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tcc_43001000_EXISTS 1
#define DT_N_ALIAS_tcc_4           DT_N_S_soc_S_tcc_43001000
#define DT_N_INST_3_atmel_sam0_tcc DT_N_S_soc_S_tcc_43001000
#define DT_N_NODELABEL_tcc4        DT_N_S_soc_S_tcc_43001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tcc_43001000_REG_NUM 1
#define DT_N_S_soc_S_tcc_43001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_REG_IDX_0_VAL_ADDRESS 1124077568 /* 0x43001000 */
#define DT_N_S_soc_S_tcc_43001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_tcc_43001000_RANGES_NUM 0
#define DT_N_S_soc_S_tcc_43001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tcc_43001000_IRQ_NUM 3
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_VAL_irq 104
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_VAL_irq 105
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_VAL_irq 106
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tcc_43001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_tcc_43001000_COMPAT_MATCHES_atmel_sam0_tcc 1
#define DT_N_S_soc_S_tcc_43001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_tcc_43001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_COMPAT_MODEL_IDX_0 "sam0-tcc"
#define DT_N_S_soc_S_tcc_43001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tcc_43001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tcc_43001000_P_compatible {"atmel,sam0-tcc"}
#define DT_N_S_soc_S_tcc_43001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_compatible_IDX_0 "atmel,sam0-tcc"
#define DT_N_S_soc_S_tcc_43001000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-tcc
#define DT_N_S_soc_S_tcc_43001000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_tcc
#define DT_N_S_soc_S_tcc_43001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_TCC
#define DT_N_S_soc_S_tcc_43001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_43001000, compatible, 0)
#define DT_N_S_soc_S_tcc_43001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_43001000, compatible, 0)
#define DT_N_S_soc_S_tcc_43001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_43001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_43001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_43001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_43001000_P_compatible_LEN 1
#define DT_N_S_soc_S_tcc_43001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_reg {1124077568 /* 0x43001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_tcc_43001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_reg_IDX_0 1124077568
#define DT_N_S_soc_S_tcc_43001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_tcc_43001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts {104 /* 0x68 */, 0 /* 0x0 */, 105 /* 0x69 */, 0 /* 0x0 */, 106 /* 0x6a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_0 104
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_2 105
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_4 106
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_tcc_43001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_status "disabled"
#define DT_N_S_soc_S_tcc_43001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tcc_43001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tcc_43001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tcc_43001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tcc_43001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_tcc_43001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tcc_43001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tcc_43001000, status, 0)
#define DT_N_S_soc_S_tcc_43001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tcc_43001000, status, 0)
#define DT_N_S_soc_S_tcc_43001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tcc_43001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_43001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tcc_43001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tcc_43001000_P_status_LEN 1
#define DT_N_S_soc_S_tcc_43001000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 64
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/usb_dc_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_PATH "/soc/pinctrl@41008000/usb_dc_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FULL_NAME "usb_dc_default"
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FULL_NAME_UNQUOTED usb_dc_default
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FULL_NAME_TOKEN usb_dc_default
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FULL_NAME_UPPER_TOKEN USB_DC_DEFAULT

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_NODELABEL(fn) fn(usb_dc_default)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_dc_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_CHILD_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_HASH BQkNaFiCWp0gA8b7ccR6ecIhDAqktEodmy9ydTNoW0Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_ORD 65
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_SUPPORTS_ORDS \
	66, /* /soc/usb@41000000 */ \
	81, /* /soc/pinctrl@41008000/usb_dc_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_EXISTS 1
#define DT_N_NODELABEL_usb_dc_default DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/usb@41000000
 *
 * Node identifier: DT_N_S_soc_S_usb_41000000
 *
 * Binding (compatible = atmel,sam0-usb):
 *   $ZEPHYR_BASE/dts/bindings/usb/atmel,sam0-usb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_41000000_PATH "/soc/usb@41000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_41000000_FULL_NAME "usb@41000000"
#define DT_N_S_soc_S_usb_41000000_FULL_NAME_UNQUOTED usb@41000000
#define DT_N_S_soc_S_usb_41000000_FULL_NAME_TOKEN usb_41000000
#define DT_N_S_soc_S_usb_41000000_FULL_NAME_UPPER_TOKEN USB_41000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_41000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_41000000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_usb_41000000_NODELABEL_NUM 2
#define DT_N_S_soc_S_usb_41000000_FOREACH_NODELABEL(fn) fn(usb0) fn(zephyr_udc0)
#define DT_N_S_soc_S_usb_41000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb0, __VA_ARGS__) fn(zephyr_udc0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usb_41000000_CHILD_NUM 0
#define DT_N_S_soc_S_usb_41000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_41000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_usb_41000000_HASH yoAN8U2691GGGZYWiXms6Q__egjuvk4LnImVnuzCJz8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_41000000_ORD 66
#define DT_N_S_soc_S_usb_41000000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_41000000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */ \
	65, /* /soc/pinctrl@41008000/usb_dc_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_41000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_41000000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_usb DT_N_S_soc_S_usb_41000000
#define DT_N_NODELABEL_usb0        DT_N_S_soc_S_usb_41000000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_41000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_41000000_REG_NUM 1
#define DT_N_S_soc_S_usb_41000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_REG_IDX_0_VAL_ADDRESS 1090519040 /* 0x41000000 */
#define DT_N_S_soc_S_usb_41000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usb_41000000_RANGES_NUM 0
#define DT_N_S_soc_S_usb_41000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_41000000_IRQ_NUM 4
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_VAL_irq 80
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_VAL_irq 81
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_VAL_irq 82
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_VAL_irq 83
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_41000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_usb_41000000_COMPAT_MATCHES_atmel_sam0_usb 1
#define DT_N_S_soc_S_usb_41000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_usb_41000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_COMPAT_MODEL_IDX_0 "sam0-usb"
#define DT_N_S_soc_S_usb_41000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_41000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_41000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usb_41000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_41000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usb_41000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default

/* Generic property macros: */
#define DT_N_S_soc_S_usb_41000000_P_reg {1090519040 /* 0x41000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usb_41000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_reg_IDX_0 1090519040
#define DT_N_S_soc_S_usb_41000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usb_41000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts {80 /* 0x50 */, 0 /* 0x0 */, 81 /* 0x51 */, 0 /* 0x0 */, 82 /* 0x52 */, 0 /* 0x0 */, 83 /* 0x53 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_0 80
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_2 81
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_4 82
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_6 83
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_usb_41000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usb_41000000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_status "okay"
#define DT_N_S_soc_S_usb_41000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usb_41000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_41000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_41000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usb_41000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_usb_41000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41000000, status, 0)
#define DT_N_S_soc_S_usb_41000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41000000, status, 0)
#define DT_N_S_soc_S_usb_41000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_status_LEN 1
#define DT_N_S_soc_S_usb_41000000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_compatible {"atmel,sam0-usb"}
#define DT_N_S_soc_S_usb_41000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_compatible_IDX_0 "atmel,sam0-usb"
#define DT_N_S_soc_S_usb_41000000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-usb
#define DT_N_S_soc_S_usb_41000000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_usb
#define DT_N_S_soc_S_usb_41000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_USB
#define DT_N_S_soc_S_usb_41000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41000000, compatible, 0)
#define DT_N_S_soc_S_usb_41000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41000000, compatible, 0)
#define DT_N_S_soc_S_usb_41000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_41000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usb_41000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_41000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usb_41000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41000000, pinctrl_0, 0)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41000000, pinctrl_0, 0)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_41000000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_41000000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_41000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_41000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usb_41000000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002000
 *
 * Binding (compatible = atmel,sam0-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/atmel,sam0-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002000_PATH "/soc/watchdog@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002000_FULL_NAME "watchdog@40002000"
#define DT_N_S_soc_S_watchdog_40002000_FULL_NAME_UNQUOTED watchdog@40002000
#define DT_N_S_soc_S_watchdog_40002000_FULL_NAME_TOKEN watchdog_40002000
#define DT_N_S_soc_S_watchdog_40002000_FULL_NAME_UPPER_TOKEN WATCHDOG_40002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_NODELABEL(fn) fn(wdog)
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdog, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_40002000_HASH 0_RyJBxTZK_mmqm7V69v_CpPJGdkgcs_RfqPqe_uiUY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002000_ORD 67
#define DT_N_S_soc_S_watchdog_40002000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002000_EXISTS 1
#define DT_N_ALIAS_watchdog0            DT_N_S_soc_S_watchdog_40002000
#define DT_N_INST_0_atmel_sam0_watchdog DT_N_S_soc_S_watchdog_40002000
#define DT_N_NODELABEL_wdog             DT_N_S_soc_S_watchdog_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_watchdog_40002000_REG_IDX_0_VAL_SIZE 13 /* 0xd */
#define DT_N_S_soc_S_watchdog_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40002000_COMPAT_MATCHES_atmel_sam0_watchdog 1
#define DT_N_S_soc_S_watchdog_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_watchdog_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_COMPAT_MODEL_IDX_0 "sam0-watchdog"
#define DT_N_S_soc_S_watchdog_40002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002000_P_reg {1073750016 /* 0x40002000 */, 13 /* 0xd */}
#define DT_N_S_soc_S_watchdog_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_watchdog_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_reg_IDX_1 13
#define DT_N_S_soc_S_watchdog_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_interrupts {10 /* 0xa */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_watchdog_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_compatible {"atmel,sam0-watchdog"}
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_IDX_0 "atmel,sam0-watchdog"
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-watchdog
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_watchdog
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/nvmctrl@41004000
 *
 * Node identifier: DT_N_S_soc_S_nvmctrl_41004000
 *
 * Binding (compatible = atmel,sam0-nvmctrl):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/atmel,sam0-nvmctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nvmctrl_41004000_PATH "/soc/nvmctrl@41004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nvmctrl_41004000_FULL_NAME "nvmctrl@41004000"
#define DT_N_S_soc_S_nvmctrl_41004000_FULL_NAME_UNQUOTED nvmctrl@41004000
#define DT_N_S_soc_S_nvmctrl_41004000_FULL_NAME_TOKEN nvmctrl_41004000
#define DT_N_S_soc_S_nvmctrl_41004000_FULL_NAME_UPPER_TOKEN NVMCTRL_41004000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nvmctrl_41004000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_nvmctrl_41004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_NODELABEL(fn) fn(nvmctrl)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvmctrl, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nvmctrl_41004000_CHILD_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_nvmctrl_41004000_HASH LX3upxyyady849sYHZTpOptXIUwIAcD0k8H04asCv0Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nvmctrl_41004000_ORD 68
#define DT_N_S_soc_S_nvmctrl_41004000_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nvmctrl_41004000_REQUIRES_ORDS \
	3, /* /soc */ \
	16, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nvmctrl_41004000_SUPPORTS_ORDS \
	69, /* /soc/nvmctrl@41004000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nvmctrl_41004000_EXISTS 1
#define DT_N_INST_0_atmel_sam0_nvmctrl DT_N_S_soc_S_nvmctrl_41004000
#define DT_N_NODELABEL_nvmctrl         DT_N_S_soc_S_nvmctrl_41004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nvmctrl_41004000_REG_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_REG_IDX_0_VAL_ADDRESS 1090535424 /* 0x41004000 */
#define DT_N_S_soc_S_nvmctrl_41004000_REG_IDX_0_VAL_SIZE 34 /* 0x22 */
#define DT_N_S_soc_S_nvmctrl_41004000_RANGES_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_NUM 2
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_VAL_irq 30
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_nvmctrl_41004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_MATCHES_atmel_sam0_nvmctrl 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_COMPAT_MODEL_IDX_0 "sam0-nvmctrl"
#define DT_N_S_soc_S_nvmctrl_41004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nvmctrl_41004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nvmctrl_41004000_P_lock_regions 32
#define DT_N_S_soc_S_nvmctrl_41004000_P_lock_regions_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg {1090535424 /* 0x41004000 */, 34 /* 0x22 */}
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_0 1090535424
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_IDX_1 34
#define DT_N_S_soc_S_nvmctrl_41004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible {"atmel,sam0-nvmctrl"}
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0 "atmel,sam0-nvmctrl"
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-nvmctrl
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_nvmctrl
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_NVMCTRL
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_LEN 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */, 30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_2 30
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_wakeup_source 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_nvmctrl_41004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/nvmctrl@41004000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_nvmctrl_41004000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_PATH "/soc/nvmctrl@41004000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc/nvmctrl@41004000) identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_PARENT DT_N_S_soc_S_nvmctrl_41004000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_CHILD_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_HASH Np1vxfNs2_dEEkONTi5U19ekrYWF_2EI5joaEodY3hg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_ORD 69
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REQUIRES_ORDS \
	68, /* /soc/nvmctrl@41004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_SUPPORTS_ORDS \
	70, /* /soc/nvmctrl@41004000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_nvmctrl_41004000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_nvmctrl_41004000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_write_block_size 8
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/nvmctrl@41004000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_PATH "/soc/nvmctrl@41004000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/nvmctrl@41004000/flash@0) identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_nvmctrl_41004000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_CHILD_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_HASH 9r4nzioF4Oo2H_mjPIqScerrTK2tAePkxC3pvQcBfxY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_ORD 70
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_REQUIRES_ORDS \
	69, /* /soc/nvmctrl@41004000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	71, /* /soc/nvmctrl@41004000/flash@0/partitions/partition@fc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/nvmctrl@41004000/flash@0/partitions/partition@fc000
 *
 * Node identifier: DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_PATH "/soc/nvmctrl@41004000/flash@0/partitions/partition@fc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FULL_NAME "partition@fc000"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FULL_NAME_UNQUOTED partition@fc000
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FULL_NAME_TOKEN partition_fc000
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FULL_NAME_UPPER_TOKEN PARTITION_FC000

/* Node parent (/soc/nvmctrl@41004000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_PARENT DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_NODELABEL_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_CHILD_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_HASH BMLUI9uFj781EFIZ9Vd2f_J9ZO_RGEWCfEbZg66jjB8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_ORD 71
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_REQUIRES_ORDS \
	70, /* /soc/nvmctrl@41004000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_REG_NUM 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_REG_IDX_0_VAL_ADDRESS 1032192 /* 0xfc000 */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_RANGES_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_IRQ_NUM 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_IRQ_LEVEL 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label "storage"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, label, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, label, 0)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_LEN 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_label_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_read_only 0
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_reg {1032192 /* 0xfc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_reg_IDX_0 1032192
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/gpio@41008000
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000
 *
 * Binding (compatible = atmel,sam0-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/atmel,sam0-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_PATH "/soc/pinctrl@41008000/gpio@41008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FULL_NAME "gpio@41008000"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FULL_NAME_UNQUOTED gpio@41008000
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FULL_NAME_TOKEN gpio_41008000
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FULL_NAME_UPPER_TOKEN GPIO_41008000

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_NODELABEL(fn) fn(porta)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(porta, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_HASH 868H3k2whmo59yGPq20Gc1Ngu3WWWFohDab13PDkCdw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_ORD 72
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_EXISTS 1
#define DT_N_ALIAS_port_a           DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000
#define DT_N_INST_0_atmel_sam0_gpio DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000
#define DT_N_NODELABEL_porta        DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_REG_IDX_0_VAL_ADDRESS 1090551808 /* 0x41008000 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_COMPAT_MATCHES_atmel_sam0_gpio 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_COMPAT_MODEL_IDX_0 "sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_reg {1090551808 /* 0x41008000 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_reg_IDX_0 1090551808
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_ngpios 32
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible {"atmel,sam0-gpio"}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_IDX_0 "atmel,sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GPIO
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/gpio@41008180
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180
 *
 * Binding (compatible = atmel,sam0-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/atmel,sam0-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_PATH "/soc/pinctrl@41008000/gpio@41008180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FULL_NAME "gpio@41008180"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FULL_NAME_UNQUOTED gpio@41008180
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FULL_NAME_TOKEN gpio_41008180
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FULL_NAME_UPPER_TOKEN GPIO_41008180

/* Node parent (/soc/pinctrl@41008000) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_PARENT DT_N_S_soc_S_pinctrl_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_NODELABEL(fn) fn(portd)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_NODELABEL_VARGS(fn, ...) fn(portd, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_HASH e4KZltFs_SdoZs1KURrwSrneM_wJVh9bfIXZlMjI_qI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_ORD 73
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_REQUIRES_ORDS \
	4, /* /soc/pinctrl@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_EXISTS 1
#define DT_N_ALIAS_port_d           DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180
#define DT_N_INST_3_atmel_sam0_gpio DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180
#define DT_N_NODELABEL_portd        DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_REG_IDX_0_VAL_ADDRESS 1090552192 /* 0x41008180 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_COMPAT_MATCHES_atmel_sam0_gpio 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_COMPAT_MODEL_IDX_0 "sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_reg {1090552192 /* 0x41008180 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_reg_IDX_0 1090552192
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_ngpios 32
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible {"atmel,sam0-gpio"}
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_IDX_0 "atmel,sam0-gpio"
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_IDX_0_STRING_UNQUOTED atmel,sam0-gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_IDX_0_STRING_TOKEN atmel_sam0_gpio
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_SAM0_GPIO
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, compatible, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/gmac_rmii/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_PATH "/soc/pinctrl@41008000/gmac_rmii/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/gmac_rmii) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_HASH QStg_o657n6lGn9FLKwLSorlZAMmAjXmDvoLAE_WKlE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_ORD 74
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_REQUIRES_ORDS \
	32, /* /soc/pinctrl@41008000/gmac_rmii */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux {45792 /* 0xb2e0 */, 45840 /* 0xb310 */, 45856 /* 0xb320 */, 45872 /* 0xb330 */, 45890 /* 0xb342 */, 45776 /* 0xb2d0 */, 45760 /* 0xb2c0 */, 45808 /* 0xb2f0 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_0 45792
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_1 45840
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_2 45856
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_3 45872
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_4 45890
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_5 45776
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_6 45760
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_IDX_7 45808
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 3) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 4) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 5) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 6) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 7)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 7)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, pinmux, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_LEN 8
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/mdio_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_PATH "/soc/pinctrl@41008000/mdio_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/mdio_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_mdio_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_HASH Nl5lo6hFONC6fKQWL6fobNKVHf6KvAKRbP3OMV_iPSw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_ORD 75
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_REQUIRES_ORDS \
	29, /* /soc/pinctrl@41008000/mdio_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux {45746 /* 0xb2b2 */, 45762 /* 0xb2c2 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_IDX_0 45746
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_IDX_1 45762
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/pwm_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_PATH "/soc/pinctrl@41008000/pwm_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/pwm_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_pwm_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_HASH uJCYnzN6OE8xrikxof1snPyZMvoYb79qxBcj5qZvLqU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_ORD 76
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_REQUIRES_ORDS \
	18, /* /soc/pinctrl@41008000/pwm_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux {21282 /* 0x5322 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_IDX_0 21282
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom2_uart_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_PATH "/soc/pinctrl@41008000/sercom2_uart_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/sercom2_uart_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_HASH E1X4dBKS_3_11NhgfLN5DdNlyH2mVWF2RZ6mHBCRx7E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_ORD 77
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_REQUIRES_ORDS \
	48, /* /soc/pinctrl@41008000/sercom2_uart_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux {13201 /* 0x3391 */, 13185 /* 0x3381 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_IDX_0 13201
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_IDX_1 13185
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom3_i2c_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_PATH "/soc/pinctrl@41008000/sercom3_i2c_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/sercom3_i2c_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_HASH Jg1dKz7OARfnyh19IYehdo6cc_wJQdmpRt1x9nGPlso

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_ORD 78
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_REQUIRES_ORDS \
	33, /* /soc/pinctrl@41008000/sercom3_i2c_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux {9056 /* 0x2360 */, 9072 /* 0x2370 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_IDX_0 9056
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_IDX_1 9072
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom4_spi_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_PATH "/soc/pinctrl@41008000/sercom4_spi_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/sercom4_spi_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_HASH 3tkrdDVorm3lnSt2niMxdf96SL6A7gq955S7EAJp464

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_ORD 79
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_REQUIRES_ORDS \
	50, /* /soc/pinctrl@41008000/sercom4_spi_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux {13217 /* 0x33a1 */, 13233 /* 0x33b1 */, 13265 /* 0x33d1 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_IDX_0 13217
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_IDX_1 13233
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_IDX_2 13265
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/sercom7_i2c_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_PATH "/soc/pinctrl@41008000/sercom7_i2c_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/sercom7_i2c_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_HASH 0wARNEyUpMWa8PGZwgqcxSBLwbd5shSQwTeY3hlxqFw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_ORD 80
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_REQUIRES_ORDS \
	54, /* /soc/pinctrl@41008000/sercom7_i2c_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux {8835 /* 0x2283 */, 8851 /* 0x2293 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_IDX_0 8835
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_IDX_1 8851
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@41008000/usb_dc_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_PATH "/soc/pinctrl@41008000/usb_dc_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pinctrl@41008000/usb_dc_default) identifier: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_PARENT DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_HASH r_bWo4A59UutsYf0vVUkE1gBklRQAsFqqFePB_w_snw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_ORD 81
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_REQUIRES_ORDS \
	65, /* /soc/pinctrl@41008000/usb_dc_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux {29584 /* 0x7390 */, 29568 /* 0x7380 */}
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_IDX_0 29584
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_IDX_1 29568
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_drive_strength 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_output_enable 0
#define DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1_P_output_enable_EXISTS 1

/*
 * Devicetree node: /soc/sercom@41014000/at30tse75x@4F
 *
 * Node identifier: DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f
 */

/* Node's full path: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_PATH "/soc/sercom@41014000/at30tse75x@4F"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FULL_NAME "at30tse75x@4F"
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FULL_NAME_UNQUOTED at30tse75x@4F
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FULL_NAME_TOKEN at30tse75x_4F
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FULL_NAME_UPPER_TOKEN AT30TSE75X_4F

/* Node parent (/soc/sercom@41014000) identifier: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_PARENT DT_N_S_soc_S_sercom_41014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_NODELABEL_NUM 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_NODELABEL(fn) fn(at30tse75x)
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_NODELABEL_VARGS(fn, ...) fn(at30tse75x, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sercom_41014000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_CHILD_NUM 0
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_HASH gYwrYZoTsxYcRbCMMl8r_kysLywtV_75lpjvS_UT8qs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_ORD 82
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_REQUIRES_ORDS \
	34, /* /soc/sercom@41014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_EXISTS 1
#define DT_N_INST_0_atmel_at30tse75x DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f
#define DT_N_NODELABEL_at30tse75x    DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f

/* Bus info (controller: '/soc/sercom@41014000', type: '['i2c']') */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_BUS_i2c 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_BUS DT_N_S_soc_S_sercom_41014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_REG_NUM 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_REG_IDX_0_VAL_ADDRESS 79 /* 0x4f */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_RANGES_NUM 0
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_IRQ_NUM 0
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_IRQ_LEVEL 0
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_COMPAT_MATCHES_atmel_at30tse75x 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_COMPAT_MODEL_IDX_0 "at30tse75x"
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible {"atmel,at30tse75x"}
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_IDX_0 "atmel,at30tse75x"
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_IDX_0_STRING_UNQUOTED atmel,at30tse75x
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_IDX_0_STRING_TOKEN atmel_at30tse75x
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_AT30TSE75X
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, compatible, 0)
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, compatible, 0)
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_LEN 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_reg {79 /* 0x4f */}
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_reg_IDX_0 79
#define DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f_P_reg_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_42002800
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_nvmctrl_41004000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_sercom_41012000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_sercom_41012000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_nvmctrl_41004000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_47000000) fn(DT_N_S_soc_S_device_id_8061fc) fn(DT_N_S_soc_S_mclk_40000800) fn(DT_N_S_soc_S_osc32kctrl_40001400) fn(DT_N_S_soc_S_gclk_40001c00) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000) fn(DT_N_S_soc_S_dmac_4100a000) fn(DT_N_S_soc_S_eic_40002800) fn(DT_N_S_soc_S_pinmux_41008000) fn(DT_N_S_soc_S_pinmux_41008080) fn(DT_N_S_soc_S_pinmux_41008100) fn(DT_N_S_soc_S_pinmux_41008180) fn(DT_N_S_soc_S_watchdog_40002000) fn(DT_N_S_soc_S_sercom_40003000) fn(DT_N_S_soc_S_sercom_40003400) fn(DT_N_S_soc_S_sercom_41012000) fn(DT_N_S_soc_S_sercom_41014000) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e) fn(DT_N_S_soc_S_sercom_43000000) fn(DT_N_S_soc_S_sercom_43000400) fn(DT_N_S_soc_S_sercom_43000800) fn(DT_N_S_soc_S_sercom_43000c00) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1) fn(DT_N_S_soc_S_usb_41000000) fn(DT_N_S_soc_S_random_42002800) fn(DT_N_S_soc_S_rtc_40002400) fn(DT_N_S_soc_S_adc_43001c00) fn(DT_N_S_soc_S_adc_43002000) fn(DT_N_S_soc_S_tc_40003800) fn(DT_N_S_soc_S_tc_4101a000) fn(DT_N_S_soc_S_tc_42001400) fn(DT_N_S_soc_S_tc_43001400) fn(DT_N_S_soc_S_tcc_41016000) fn(DT_N_S_soc_S_tcc_41018000) fn(DT_N_S_soc_S_tcc_42000c00) fn(DT_N_S_soc_S_tcc_42001000) fn(DT_N_S_soc_S_tcc_43001000) fn(DT_N_S_soc_S_ethernet_42000800) fn(DT_N_S_soc_S_mdio_42000800) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0) fn(DT_N_S_soc_S_can_42000000) fn(DT_N_S_soc_S_can_42000400) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_io1_led) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_47000000) fn(DT_N_S_soc_S_device_id_8061fc) fn(DT_N_S_soc_S_mclk_40000800) fn(DT_N_S_soc_S_osc32kctrl_40001400) fn(DT_N_S_soc_S_gclk_40001c00) fn(DT_N_S_soc_S_nvmctrl_41004000) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000) fn(DT_N_S_soc_S_eic_40002800) fn(DT_N_S_soc_S_pinmux_41008000) fn(DT_N_S_soc_S_pinmux_41008080) fn(DT_N_S_soc_S_pinmux_41008100) fn(DT_N_S_soc_S_pinmux_41008180) fn(DT_N_S_soc_S_watchdog_40002000) fn(DT_N_S_soc_S_sercom_41012000) fn(DT_N_S_soc_S_sercom_41014000) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e) fn(DT_N_S_soc_S_sercom_43000000) fn(DT_N_S_soc_S_pinctrl_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1) fn(DT_N_S_soc_S_usb_41000000) fn(DT_N_S_soc_S_random_42002800) fn(DT_N_S_soc_S_rtc_40002400) fn(DT_N_S_soc_S_adc_43001c00) fn(DT_N_S_soc_S_tcc_41016000) fn(DT_N_S_soc_S_ethernet_42000800) fn(DT_N_S_soc_S_mdio_42000800) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_io1_led) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_0) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__) fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__) fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, __VA_ARGS__) fn(DT_N_S_soc_S_dmac_4100a000, __VA_ARGS__) fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000400, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000800, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__) fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__) fn(DT_N_S_soc_S_adc_43002000, __VA_ARGS__) fn(DT_N_S_soc_S_tc_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_tc_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_tc_42001400, __VA_ARGS__) fn(DT_N_S_soc_S_tc_43001400, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_41018000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42000c00, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_42001000, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_43001000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__) fn(DT_N_S_soc_S_can_42000000, __VA_ARGS__) fn(DT_N_S_soc_S_can_42000400, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_io1_led, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__) fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__) fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000, __VA_ARGS__) fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__) fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_pwm_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gmac_rmii_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_mdio_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom7_i2c_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom4_spi_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom2_uart_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_usb_dc_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_sercom3_i2c_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__) fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__) fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_io1_led, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions_S_partition_fc000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_same54_xpro 1
#define DT_COMPAT_HAS_OKAY_atmel_same54p20a 1
#define DT_COMPAT_HAS_OKAY_atmel_same54 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_id 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_mclk 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_osc32kctrl 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_gclk 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_nvmctrl 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_eic 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_pinmux 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_watchdog 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_uart 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_i2c 1
#define DT_COMPAT_HAS_OKAY_atmel_at30tse75x 1
#define DT_COMPAT_HAS_OKAY_atmel_24mac402 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_spi 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_pinctrl 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_gpio 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_usb 1
#define DT_COMPAT_HAS_OKAY_atmel_sam_trng 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_rtc 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_adc 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_tcc_pwm 1
#define DT_COMPAT_HAS_OKAY_atmel_sam0_gmac 1
#define DT_COMPAT_HAS_OKAY_atmel_sam_mdio 1
#define DT_COMPAT_HAS_OKAY_ethernet_phy 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_mpu 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_same54_xpro_NUM_OKAY 1
#define DT_N_INST_atmel_same54p20a_NUM_OKAY 1
#define DT_N_INST_atmel_same54_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 2
#define DT_N_INST_atmel_sam0_id_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_mclk_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_osc32kctrl_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_gclk_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_nvmctrl_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_eic_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_pinmux_NUM_OKAY 4
#define DT_N_INST_atmel_sam0_watchdog_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_uart_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_i2c_NUM_OKAY 1
#define DT_N_INST_atmel_at30tse75x_NUM_OKAY 1
#define DT_N_INST_atmel_24mac402_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_spi_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_pinctrl_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_gpio_NUM_OKAY 4
#define DT_N_INST_atmel_sam0_usb_NUM_OKAY 1
#define DT_N_INST_atmel_sam_trng_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_rtc_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_adc_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_tcc_pwm_NUM_OKAY 1
#define DT_N_INST_atmel_sam0_gmac_NUM_OKAY 1
#define DT_N_INST_atmel_sam_mdio_NUM_OKAY 1
#define DT_N_INST_ethernet_phy_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_mpu_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_same54_xpro(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_same54_xpro(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_same54_xpro(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_same54_xpro(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_same54p20a(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_atmel_same54p20a(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_same54p20a(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_same54p20a(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_same54(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_atmel_same54(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_same54(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_same54(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_47000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_47000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_id(fn) fn(DT_N_S_soc_S_device_id_8061fc)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_id(fn, ...) fn(DT_N_S_soc_S_device_id_8061fc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_id(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_id(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_mclk(fn) fn(DT_N_S_soc_S_mclk_40000800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_mclk(fn, ...) fn(DT_N_S_soc_S_mclk_40000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_mclk(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_mclk(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_osc32kctrl(fn) fn(DT_N_S_soc_S_osc32kctrl_40001400)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_osc32kctrl(fn, ...) fn(DT_N_S_soc_S_osc32kctrl_40001400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_osc32kctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_osc32kctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_gclk(fn) fn(DT_N_S_soc_S_gclk_40001c00)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_gclk(fn, ...) fn(DT_N_S_soc_S_gclk_40001c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_gclk(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_gclk(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_nvmctrl(fn) fn(DT_N_S_soc_S_nvmctrl_41004000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_nvmctrl(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_nvmctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_nvmctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_nvmctrl_41004000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_eic(fn) fn(DT_N_S_soc_S_eic_40002800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_eic(fn, ...) fn(DT_N_S_soc_S_eic_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_eic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_eic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_pinmux(fn) fn(DT_N_S_soc_S_pinmux_41008000) fn(DT_N_S_soc_S_pinmux_41008080) fn(DT_N_S_soc_S_pinmux_41008100) fn(DT_N_S_soc_S_pinmux_41008180)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_pinmux(fn, ...) fn(DT_N_S_soc_S_pinmux_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinmux_41008180, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_pinmux(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_pinmux(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40002000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40002000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_uart(fn) fn(DT_N_S_soc_S_sercom_41012000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_uart(fn, ...) fn(DT_N_S_soc_S_sercom_41012000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_i2c(fn) fn(DT_N_S_soc_S_sercom_41014000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_i2c(fn, ...) fn(DT_N_S_soc_S_sercom_41014000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_at30tse75x(fn) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f)
#define DT_FOREACH_OKAY_VARGS_atmel_at30tse75x(fn, ...) fn(DT_N_S_soc_S_sercom_41014000_S_at30tse75x_4f, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_at30tse75x(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_at30tse75x(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_24mac402(fn) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e)
#define DT_FOREACH_OKAY_VARGS_atmel_24mac402(fn, ...) fn(DT_N_S_soc_S_sercom_41014000_S_eeprom_5e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_24mac402(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_24mac402(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_spi(fn) fn(DT_N_S_soc_S_sercom_43000000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_spi(fn, ...) fn(DT_N_S_soc_S_sercom_43000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_pinctrl(fn) fn(DT_N_S_soc_S_pinctrl_41008000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_pinctrl(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_gpio(fn) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_gpio(fn, ...) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_41008000_S_gpio_41008180, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_gpio(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_usb(fn) fn(DT_N_S_soc_S_usb_41000000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_usb(fn, ...) fn(DT_N_S_soc_S_usb_41000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_usb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_usb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam_trng(fn) fn(DT_N_S_soc_S_random_42002800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam_trng(fn, ...) fn(DT_N_S_soc_S_random_42002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_rtc(fn) fn(DT_N_S_soc_S_rtc_40002400)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_adc(fn) fn(DT_N_S_soc_S_adc_43001c00)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_adc(fn, ...) fn(DT_N_S_soc_S_adc_43001c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_tcc_pwm(fn) fn(DT_N_S_soc_S_tcc_41016000)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_tcc_pwm(fn, ...) fn(DT_N_S_soc_S_tcc_41016000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_tcc_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_tcc_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam0_gmac(fn) fn(DT_N_S_soc_S_ethernet_42000800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam0_gmac(fn, ...) fn(DT_N_S_soc_S_ethernet_42000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam0_gmac(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam0_gmac(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_sam_mdio(fn) fn(DT_N_S_soc_S_mdio_42000800)
#define DT_FOREACH_OKAY_VARGS_atmel_sam_mdio(fn, ...) fn(DT_N_S_soc_S_mdio_42000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_sam_mdio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_sam_mdio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ethernet_phy(fn) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0)
#define DT_FOREACH_OKAY_VARGS_ethernet_phy(fn, ...) fn(DT_N_S_soc_S_mdio_42000800_S_ethernet_phy_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ethernet_phy(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ethernet_phy(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwmleds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_atmel_at30tse75x_BUS_i2c 1
#define DT_COMPAT_atmel_24mac402_BUS_i2c 1
#define DT_COMPAT_ethernet_phy_BUS_mdio 1
